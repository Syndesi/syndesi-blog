(window.webpackJsonp=window.webpackJsonp||[]).push([[0],Array(72).concat([function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js?')},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__(119);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/possibleConstructorReturn.js?')},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = __webpack_require__(397);\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = __webpack_require__(401);\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = __webpack_require__(119);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/inherits.js?')},function(module,exports,__webpack_require__){eval("var _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar _isPlaceholder = /*#__PURE__*/__webpack_require__(95);\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_curry2.js?")},,,function(module,exports){eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_global.js?")},function(module,exports){eval("var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_core.js?")},function(module,exports,__webpack_require__){eval("var _isPlaceholder = /*#__PURE__*/__webpack_require__(95);\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_curry1.js?")},function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(91);\nvar IE8_DOM_DEFINE = __webpack_require__(277);\nvar toPrimitive = __webpack_require__(112);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(82) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-dp.js?")},function(module,exports,__webpack_require__){eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(92)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_descriptors.js?")},function(module,exports){eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_has.js?")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(78);\nvar core = __webpack_require__(79);\nvar ctx = __webpack_require__(276);\nvar hide = __webpack_require__(85);\nvar has = __webpack_require__(83);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_export.js?")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(81);\nvar createDesc = __webpack_require__(96);\nmodule.exports = __webpack_require__(82) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_hide.js?")},function(module,exports){eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-object.js?")},function(module,exports,__webpack_require__){eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(280);\nvar defined = __webpack_require__(113);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-iobject.js?")},function(module,exports,__webpack_require__){eval("var store = __webpack_require__(116)('wks');\nvar uid = __webpack_require__(99);\nvar Symbol = __webpack_require__(78).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks.js?")},,function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__(367);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/extends.js?")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(86);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_an-object.js?")},function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_fails.js?")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(288);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ("value" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/createClass.js?')},,function(module,exports){eval("function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isPlaceholder.js?")},function(module,exports){eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_property-desc.js?")},function(module,exports,__webpack_require__){eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(279);\nvar enumBugKeys = __webpack_require__(117);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-keys.js?")},function(module,exports){eval("module.exports = true;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_library.js?")},function(module,exports){eval("var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_uid.js?")},function(module,exports){eval("exports.f = {}.propertyIsEnumerable;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-pie.js?")},,,,,function(module,exports,__webpack_require__){"use strict";eval("\n\nvar parser = __webpack_require__(324);\nvar processingInstructions = __webpack_require__(271);\nvar isValidNodeDefinitions = __webpack_require__(274);\nvar processNodeDefinitions = __webpack_require__(272);\n\nmodule.exports = {\n  Parser: parser,\n  ProcessingInstructions: processingInstructions,\n  IsValidNodeDefinitions: isValidNodeDefinitions,\n  ProcessNodeDefinitions: processNodeDefinitions,\n};\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/index.js?")},function(module,exports,__webpack_require__){eval("var _isArray = /*#__PURE__*/__webpack_require__(267);\n\nvar _isTransformer = /*#__PURE__*/__webpack_require__(326);\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_dispatchable.js?")},function(module,exports){eval("module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_xfBase.js?")},function(module,exports,__webpack_require__){eval("var _isArrayLike = /*#__PURE__*/__webpack_require__(334);\n\nvar _xwrap = /*#__PURE__*/__webpack_require__(336);\n\nvar bind = /*#__PURE__*/__webpack_require__(337);\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\nmodule.exports = _reduce;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_reduce.js?")},function(module,exports){eval("function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_arity.js?")},function(module,exports){eval("function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_has.js?")},function(module,exports){eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?")},function(module,exports,__webpack_require__){eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(86);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-primitive.js?")},function(module,exports){eval('// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError("Can\'t call method on  " + it);\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_defined.js?')},function(module,exports){eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-integer.js?")},function(module,exports,__webpack_require__){eval("var shared = __webpack_require__(116)('keys');\nvar uid = __webpack_require__(99);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_shared-key.js?")},function(module,exports,__webpack_require__){eval("var core = __webpack_require__(79);\nvar global = __webpack_require__(78);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(98) ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_shared.js?")},function(module,exports){eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js?")},function(module,exports){eval("exports.f = Object.getOwnPropertySymbols;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gops.js?")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__(375);\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__(387);\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {\n  return typeof obj === "undefined" ? "undefined" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/typeof.js?')},function(module,exports){eval("module.exports = {};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iterators.js?")},function(module,exports,__webpack_require__){eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(91);\nvar dPs = __webpack_require__(380);\nvar enumBugKeys = __webpack_require__(117);\nvar IE_PROTO = __webpack_require__(115)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(278)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(381).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-create.js?")},function(module,exports,__webpack_require__){eval("var def = __webpack_require__(81).f;\nvar has = __webpack_require__(83);\nvar TAG = __webpack_require__(88)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js?")},function(module,exports,__webpack_require__){eval("exports.f = __webpack_require__(88);\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks-ext.js?")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(78);\nvar core = __webpack_require__(79);\nvar LIBRARY = __webpack_require__(98);\nvar wksExt = __webpack_require__(123);\nvar defineProperty = __webpack_require__(81).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks-define.js?")},,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/extends.js\nvar helpers_extends = __webpack_require__(90);\nvar extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__(283);\nvar objectWithoutProperties_default = /*#__PURE__*/__webpack_require__.n(objectWithoutProperties);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(72);\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(73);\nvar possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/inherits.js\nvar inherits = __webpack_require__(74);\nvar inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(1);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(0);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(7);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// CONCATENATED MODULE: ./node_modules/rc-util/es/Dom/contains.js\nfunction contains(root, n) {\n  var node = n;\n  while (node) {\n    if (node === root) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n\n  return false;\n}\n// EXTERNAL MODULE: ./node_modules/add-dom-event-listener/lib/index.js\nvar lib = __webpack_require__(404);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// CONCATENATED MODULE: ./node_modules/rc-util/es/Dom/addEventListener.js\n\n\n\nfunction addEventListenerWrap(target, eventType, cb, option) {\n  /* eslint camelcase: 2 */\n  var callback = react_dom_default.a.unstable_batchedUpdates ? function run(e) {\n    react_dom_default.a.unstable_batchedUpdates(cb, e);\n  } : cb;\n  return lib_default()(target, eventType, callback, option);\n}\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/createClass.js\nvar createClass = __webpack_require__(93);\nvar createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);\n\n// CONCATENATED MODULE: ./node_modules/rc-util/es/ContainerRender.js\n\n\n\n\n\n\n\n\nvar ContainerRender_ContainerRender = function (_React$Component) {\n  inherits_default()(ContainerRender, _React$Component);\n\n  function ContainerRender() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck_default()(this, ContainerRender);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, (_ref = ContainerRender.__proto__ || Object.getPrototypeOf(ContainerRender)).call.apply(_ref, [this].concat(args))), _this), _this.removeContainer = function () {\n      if (_this.container) {\n        react_dom_default.a.unmountComponentAtNode(_this.container);\n        _this.container.parentNode.removeChild(_this.container);\n        _this.container = null;\n      }\n    }, _this.renderComponent = function (props, ready) {\n      var _this$props = _this.props,\n          visible = _this$props.visible,\n          getComponent = _this$props.getComponent,\n          forceRender = _this$props.forceRender,\n          getContainer = _this$props.getContainer,\n          parent = _this$props.parent;\n\n      if (visible || parent._component || forceRender) {\n        if (!_this.container) {\n          _this.container = getContainer();\n        }\n        react_dom_default.a.unstable_renderSubtreeIntoContainer(parent, getComponent(props), _this.container, function callback() {\n          if (ready) {\n            ready.call(this);\n          }\n        });\n      }\n    }, _temp), possibleConstructorReturn_default()(_this, _ret);\n  }\n\n  createClass_default()(ContainerRender, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.autoMount) {\n        this.renderComponent();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.props.autoMount) {\n        this.renderComponent();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.autoDestroy) {\n        this.removeContainer();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children({\n        renderComponent: this.renderComponent,\n        removeContainer: this.removeContainer\n      });\n    }\n  }]);\n\n  return ContainerRender;\n}(react_default.a.Component);\n\nContainerRender_ContainerRender.propTypes = {\n  autoMount: prop_types_default.a.bool,\n  autoDestroy: prop_types_default.a.bool,\n  visible: prop_types_default.a.bool,\n  forceRender: prop_types_default.a.bool,\n  parent: prop_types_default.a.any,\n  getComponent: prop_types_default.a.func.isRequired,\n  getContainer: prop_types_default.a.func.isRequired,\n  children: prop_types_default.a.func.isRequired\n};\nContainerRender_ContainerRender.defaultProps = {\n  autoMount: true,\n  autoDestroy: true,\n  forceRender: false\n};\n/* harmony default export */ var es_ContainerRender = (ContainerRender_ContainerRender);\n// CONCATENATED MODULE: ./node_modules/rc-util/es/Portal.js\n\n\n\n\n\n\n\n\nvar Portal_Portal = function (_React$Component) {\n  inherits_default()(Portal, _React$Component);\n\n  function Portal() {\n    classCallCheck_default()(this, Portal);\n\n    return possibleConstructorReturn_default()(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n  }\n\n  createClass_default()(Portal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.createContainer();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var didUpdate = this.props.didUpdate;\n\n      if (didUpdate) {\n        didUpdate(prevProps);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeContainer();\n    }\n  }, {\n    key: 'createContainer',\n    value: function createContainer() {\n      this._container = this.props.getContainer();\n      this.forceUpdate();\n    }\n  }, {\n    key: 'removeContainer',\n    value: function removeContainer() {\n      if (this._container) {\n        this._container.parentNode.removeChild(this._container);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this._container) {\n        return react_dom_default.a.createPortal(this.props.children, this._container);\n      }\n      return null;\n    }\n  }]);\n\n  return Portal;\n}(react_default.a.Component);\n\nPortal_Portal.propTypes = {\n  getContainer: prop_types_default.a.func.isRequired,\n  children: prop_types_default.a.node.isRequired,\n  didUpdate: prop_types_default.a.func\n};\n/* harmony default export */ var es_Portal = (Portal_Portal);\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(10);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// CONCATENATED MODULE: ./node_modules/rc-trigger/es/utils.js\n\nfunction isPointsEq(a1, a2, isAlignPoint) {\n  if (isAlignPoint) {\n    return a1[0] === a2[0];\n  }\n  return a1[0] === a2[0] && a1[1] === a2[1];\n}\n\nfunction getAlignFromPlacement(builtinPlacements, placementStr, align) {\n  var baseAlign = builtinPlacements[placementStr] || {};\n  return extends_default()({}, baseAlign, align);\n}\n\nfunction getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {\n  var points = align.points;\n  for (var placement in builtinPlacements) {\n    if (builtinPlacements.hasOwnProperty(placement)) {\n      if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {\n        return prefixCls + '-placement-' + placement;\n      }\n    }\n  }\n  return '';\n}\n\nfunction saveRef(name, component) {\n  this[name] = component;\n}\n// CONCATENATED MODULE: ./node_modules/dom-align/es/propertyUtils.js\nvar vendorPrefix = void 0;\n\nvar jsCssMap = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  // IE did it wrong again ...\n  ms: '-ms-',\n  O: '-o-'\n};\n\nfunction getVendorPrefix() {\n  if (vendorPrefix !== undefined) {\n    return vendorPrefix;\n  }\n  vendorPrefix = '';\n  var style = document.createElement('p').style;\n  var testProp = 'Transform';\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      vendorPrefix = key;\n    }\n  }\n  return vendorPrefix;\n}\n\nfunction getTransitionName() {\n  return getVendorPrefix() ? getVendorPrefix() + 'TransitionProperty' : 'transitionProperty';\n}\n\nfunction getTransformName() {\n  return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform';\n}\n\nfunction setTransitionProperty(node, value) {\n  var name = getTransitionName();\n  if (name) {\n    node.style[name] = value;\n    if (name !== 'transitionProperty') {\n      node.style.transitionProperty = value;\n    }\n  }\n}\n\nfunction setTransform(node, value) {\n  var name = getTransformName();\n  if (name) {\n    node.style[name] = value;\n    if (name !== 'transform') {\n      node.style.transform = value;\n    }\n  }\n}\n\nfunction getTransitionProperty(node) {\n  return node.style.transitionProperty || node.style[getTransitionName()];\n}\n\nfunction getTransformXY(node) {\n  var style = window.getComputedStyle(node, null);\n  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());\n  if (transform && transform !== 'none') {\n    var matrix = transform.replace(/[^0-9\\-.,]/g, '').split(',');\n    return { x: parseFloat(matrix[12] || matrix[4], 0), y: parseFloat(matrix[13] || matrix[5], 0) };\n  }\n  return {\n    x: 0,\n    y: 0\n  };\n}\n\nvar matrix2d = /matrix\\((.*)\\)/;\nvar matrix3d = /matrix3d\\((.*)\\)/;\n\nfunction setTransformXY(node, xy) {\n  var style = window.getComputedStyle(node, null);\n  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());\n  if (transform && transform !== 'none') {\n    var arr = void 0;\n    var match2d = transform.match(matrix2d);\n    if (match2d) {\n      match2d = match2d[1];\n      arr = match2d.split(',').map(function (item) {\n        return parseFloat(item, 10);\n      });\n      arr[4] = xy.x;\n      arr[5] = xy.y;\n      setTransform(node, 'matrix(' + arr.join(',') + ')');\n    } else {\n      var match3d = transform.match(matrix3d)[1];\n      arr = match3d.split(',').map(function (item) {\n        return parseFloat(item, 10);\n      });\n      arr[12] = xy.x;\n      arr[13] = xy.y;\n      setTransform(node, 'matrix3d(' + arr.join(',') + ')');\n    }\n  } else {\n    setTransform(node, 'translateX(' + xy.x + 'px) translateY(' + xy.y + 'px) translateZ(0)');\n  }\n}\n// CONCATENATED MODULE: ./node_modules/dom-align/es/utils.js\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n\nvar RE_NUM = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source;\n\nvar getComputedStyleX = void 0;\n\n// https://stackoverflow.com/a/3485654/3040605\nfunction forceRelayout(elem) {\n  var originalStyle = elem.style.display;\n  elem.style.display = 'none';\n  elem.offsetHeight; // eslint-disable-line\n  elem.style.display = originalStyle;\n}\n\nfunction css(el, name, v) {\n  var value = v;\n  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n    for (var i in name) {\n      if (name.hasOwnProperty(i)) {\n        css(el, i, name[i]);\n      }\n    }\n    return undefined;\n  }\n  if (typeof value !== 'undefined') {\n    if (typeof value === 'number') {\n      value = value + 'px';\n    }\n    el.style[name] = value;\n    return undefined;\n  }\n  return getComputedStyleX(el, name);\n}\n\nfunction getClientPosition(elem) {\n  var box = void 0;\n  var x = void 0;\n  var y = void 0;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement;\n  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式\n  box = elem.getBoundingClientRect();\n\n  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop\n  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确\n  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin\n\n  x = box.left;\n  y = box.top;\n\n  // In IE, most of the time, 2 extra pixels are added to the top and left\n  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n  // IE6 standards mode, this border can be overridden by setting the\n  // document element's border to zero -- thus, we cannot rely on the\n  // offset always being 2 pixels.\n\n  // In quirks mode, the offset can be determined by querying the body's\n  // clientLeft/clientTop, but in standards mode, it is found by querying\n  // the document element's clientLeft/clientTop.  Since we already called\n  // getClientBoundingRect we have already forced a reflow, so it is not\n  // too expensive just to query them all.\n\n  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的\n  // 窗口边框标准是设 documentElement ,quirks 时设置 body\n  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去\n  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置\n  // 标准 ie 下 docElem.clientTop 就是 border-top\n  // ie7 html 即窗口边框改变不了。永远为 2\n  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0\n\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getScroll(w, top) {\n  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];\n  var method = 'scroll' + (top ? 'Top' : 'Left');\n  if (typeof ret !== 'number') {\n    var d = w.document;\n    // ie6,7,8 standard mode\n    ret = d.documentElement[method];\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n  return ret;\n}\n\nfunction getScrollLeft(w) {\n  return getScroll(w);\n}\n\nfunction getScrollTop(w) {\n  return getScroll(w, true);\n}\n\nfunction getOffset(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScrollLeft(w);\n  pos.top += getScrollTop(w);\n  return pos;\n}\n\n/**\n * A crude way of determining if an object is a window\n * @member util\n */\nfunction isWindow(obj) {\n  // must use == for ie8\n  /* eslint eqeqeq:0 */\n  return obj !== null && obj !== undefined && obj == obj.window;\n}\n\nfunction getDocument(node) {\n  if (isWindow(node)) {\n    return node.document;\n  }\n  if (node.nodeType === 9) {\n    return node;\n  }\n  return node.ownerDocument;\n}\n\nfunction _getComputedStyle(elem, name, cs) {\n  var computedStyle = cs;\n  var val = '';\n  var d = getDocument(elem);\n  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);\n\n  // https://github.com/kissyteam/kissy/issues/61\n  if (computedStyle) {\n    val = computedStyle.getPropertyValue(name) || computedStyle[name];\n  }\n\n  return val;\n}\n\nvar _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');\nvar RE_POS = /^(top|right|bottom|left)$/;\nvar CURRENT_STYLE = 'currentStyle';\nvar RUNTIME_STYLE = 'runtimeStyle';\nvar LEFT = 'left';\nvar PX = 'px';\n\nfunction _getComputedStyleIE(elem, name) {\n  // currentStyle maybe null\n  // http://msdn.microsoft.com/en-us/library/ms535231.aspx\n  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];\n\n  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值\n  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19\n  // 在 ie 下不对，需要直接用 offset 方式\n  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了\n\n  // From the awesome hack by Dean Edwards\n  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n  // If we're not dealing with a regular pixel number\n  // but a number that has a weird ending, we need to convert it to pixels\n  // exclude left right for relativity\n  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {\n    // Remember the original values\n    var style = elem.style;\n    var left = style[LEFT];\n    var rsLeft = elem[RUNTIME_STYLE][LEFT];\n\n    // prevent flashing of content\n    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];\n\n    // Put in the new values to get a computed value out\n    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;\n    ret = style.pixelLeft + PX;\n\n    // Revert the changed values\n    style[LEFT] = left;\n\n    elem[RUNTIME_STYLE][LEFT] = rsLeft;\n  }\n  return ret === '' ? 'auto' : ret;\n}\n\nif (typeof window !== 'undefined') {\n  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;\n}\n\nfunction getOffsetDirection(dir, option) {\n  if (dir === 'left') {\n    return option.useCssRight ? 'right' : dir;\n  }\n  return option.useCssBottom ? 'bottom' : dir;\n}\n\nfunction oppositeOffsetDirection(dir) {\n  if (dir === 'left') {\n    return 'right';\n  } else if (dir === 'right') {\n    return 'left';\n  } else if (dir === 'top') {\n    return 'bottom';\n  } else if (dir === 'bottom') {\n    return 'top';\n  }\n}\n\n// 设置 elem 相对 elem.ownerDocument 的坐标\nfunction setLeftTop(elem, offset, option) {\n  // set position first, in-case top/left are set even on static elem\n  if (css(elem, 'position') === 'static') {\n    elem.style.position = 'relative';\n  }\n  var presetH = -999;\n  var presetV = -999;\n  var horizontalProperty = getOffsetDirection('left', option);\n  var verticalProperty = getOffsetDirection('top', option);\n  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);\n  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);\n\n  if (horizontalProperty !== 'left') {\n    presetH = 999;\n  }\n\n  if (verticalProperty !== 'top') {\n    presetV = 999;\n  }\n  var originalTransition = '';\n  var originalOffset = getOffset(elem);\n  if ('left' in offset || 'top' in offset) {\n    originalTransition = getTransitionProperty(elem) || '';\n    setTransitionProperty(elem, 'none');\n  }\n  if ('left' in offset) {\n    elem.style[oppositeHorizontalProperty] = '';\n    elem.style[horizontalProperty] = presetH + 'px';\n  }\n  if ('top' in offset) {\n    elem.style[oppositeVerticalProperty] = '';\n    elem.style[verticalProperty] = presetV + 'px';\n  }\n  // force relayout\n  forceRelayout(elem);\n  var old = getOffset(elem);\n  var originalStyle = {};\n  for (var key in offset) {\n    if (offset.hasOwnProperty(key)) {\n      var dir = getOffsetDirection(key, option);\n      var preset = key === 'left' ? presetH : presetV;\n      var off = originalOffset[key] - old[key];\n      if (dir === key) {\n        originalStyle[dir] = preset + off;\n      } else {\n        originalStyle[dir] = preset - off;\n      }\n    }\n  }\n  css(elem, originalStyle);\n  // force relayout\n  forceRelayout(elem);\n  if ('left' in offset || 'top' in offset) {\n    setTransitionProperty(elem, originalTransition);\n  }\n  var ret = {};\n  for (var _key in offset) {\n    if (offset.hasOwnProperty(_key)) {\n      var _dir = getOffsetDirection(_key, option);\n      var _off = offset[_key] - originalOffset[_key];\n      if (_key === _dir) {\n        ret[_dir] = originalStyle[_dir] + _off;\n      } else {\n        ret[_dir] = originalStyle[_dir] - _off;\n      }\n    }\n  }\n  css(elem, ret);\n}\n\nfunction utils_setTransform(elem, offset) {\n  var originalOffset = getOffset(elem);\n  var originalXY = getTransformXY(elem);\n  var resultXY = { x: originalXY.x, y: originalXY.y };\n  if ('left' in offset) {\n    resultXY.x = originalXY.x + offset.left - originalOffset.left;\n  }\n  if ('top' in offset) {\n    resultXY.y = originalXY.y + offset.top - originalOffset.top;\n  }\n  setTransformXY(elem, resultXY);\n}\n\nfunction setOffset(elem, offset, option) {\n  if (option.ignoreShake) {\n    var oriOffset = getOffset(elem);\n\n    var oLeft = oriOffset.left.toFixed(0);\n    var oTop = oriOffset.top.toFixed(0);\n    var tLeft = offset.left.toFixed(0);\n    var tTop = offset.top.toFixed(0);\n\n    if (oLeft === tLeft && oTop === tTop) {\n      return;\n    }\n  }\n\n  if (option.useCssRight || option.useCssBottom) {\n    setLeftTop(elem, offset, option);\n  } else if (option.useCssTransform && getTransformName() in document.body.style) {\n    utils_setTransform(elem, offset, option);\n  } else {\n    setLeftTop(elem, offset, option);\n  }\n}\n\nfunction each(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction isBorderBoxFn(elem) {\n  return getComputedStyleX(elem, 'boxSizing') === 'border-box';\n}\n\nvar BOX_MODELS = ['margin', 'border', 'padding'];\nvar CONTENT_INDEX = -1;\nvar PADDING_INDEX = 2;\nvar BORDER_INDEX = 1;\nvar MARGIN_INDEX = 0;\n\nfunction swap(elem, options, callback) {\n  var old = {};\n  var style = elem.style;\n  var name = void 0;\n\n  // Remember the old values, and insert the new ones\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      old[name] = style[name];\n      style[name] = options[name];\n    }\n  }\n\n  callback.call(elem);\n\n  // Revert the old values\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      style[name] = old[name];\n    }\n  }\n}\n\nfunction getPBMWidth(elem, props, which) {\n  var value = 0;\n  var prop = void 0;\n  var j = void 0;\n  var i = void 0;\n  for (j = 0; j < props.length; j++) {\n    prop = props[j];\n    if (prop) {\n      for (i = 0; i < which.length; i++) {\n        var cssProp = void 0;\n        if (prop === 'border') {\n          cssProp = '' + prop + which[i] + 'Width';\n        } else {\n          cssProp = prop + which[i];\n        }\n        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;\n      }\n    }\n  }\n  return value;\n}\n\nvar domUtils = {};\n\neach(['Width', 'Height'], function (name) {\n  domUtils['doc' + name] = function (refWin) {\n    var d = refWin.document;\n    return Math.max(\n    // firefox chrome documentElement.scrollHeight< body.scrollHeight\n    // ie standard mode : documentElement.scrollHeight> body.scrollHeight\n    d.documentElement['scroll' + name],\n    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？\n    d.body['scroll' + name], domUtils['viewport' + name](d));\n  };\n\n  domUtils['viewport' + name] = function (win) {\n    // pc browser includes scrollbar in window.innerWidth\n    var prop = 'client' + name;\n    var doc = win.document;\n    var body = doc.body;\n    var documentElement = doc.documentElement;\n    var documentElementProp = documentElement[prop];\n    // 标准模式取 documentElement\n    // backcompat 取 body\n    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;\n  };\n});\n\n/*\n 得到元素的大小信息\n @param elem\n @param name\n @param {String} [extra]  'padding' : (css width) + padding\n 'border' : (css width) + padding + border\n 'margin' : (css width) + padding + border + margin\n */\nfunction getWH(elem, name, ex) {\n  var extra = ex;\n  if (isWindow(elem)) {\n    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);\n  } else if (elem.nodeType === 9) {\n    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);\n  }\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;\n  var computedStyle = getComputedStyleX(elem);\n  var isBorderBox = isBorderBoxFn(elem, computedStyle);\n  var cssBoxValue = 0;\n  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {\n    borderBoxValue = undefined;\n    // Fall back to computed then un computed css if necessary\n    cssBoxValue = getComputedStyleX(elem, name);\n    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {\n      cssBoxValue = elem.style[name] || 0;\n    }\n    // Normalize '', auto, and prepare for extra\n    cssBoxValue = parseFloat(cssBoxValue) || 0;\n  }\n  if (extra === undefined) {\n    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;\n  }\n  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;\n  var val = borderBoxValue || cssBoxValue;\n  if (extra === CONTENT_INDEX) {\n    if (borderBoxValueOrIsBorderBox) {\n      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);\n    }\n    return cssBoxValue;\n  } else if (borderBoxValueOrIsBorderBox) {\n    if (extra === BORDER_INDEX) {\n      return val;\n    }\n    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));\n  }\n  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);\n}\n\nvar cssShow = {\n  position: 'absolute',\n  visibility: 'hidden',\n  display: 'block'\n};\n\n// fix #119 : https://github.com/kissyteam/kissy/issues/119\nfunction getWHIgnoreDisplay() {\n  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var val = void 0;\n  var elem = args[0];\n  // in case elem is window\n  // elem.offsetWidth === undefined\n  if (elem.offsetWidth !== 0) {\n    val = getWH.apply(undefined, args);\n  } else {\n    swap(elem, cssShow, function () {\n      val = getWH.apply(undefined, args);\n    });\n  }\n  return val;\n}\n\neach(['width', 'height'], function (name) {\n  var first = name.charAt(0).toUpperCase() + name.slice(1);\n  domUtils['outer' + first] = function (el, includeMargin) {\n    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);\n  };\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n\n  domUtils[name] = function (elem, v) {\n    var val = v;\n    if (val !== undefined) {\n      if (elem) {\n        var computedStyle = getComputedStyleX(elem);\n        var isBorderBox = isBorderBoxFn(elem);\n        if (isBorderBox) {\n          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);\n        }\n        return css(elem, name, val);\n      }\n      return undefined;\n    }\n    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);\n  };\n});\n\nfunction mix(to, from) {\n  for (var i in from) {\n    if (from.hasOwnProperty(i)) {\n      to[i] = from[i];\n    }\n  }\n  return to;\n}\n\nvar utils = {\n  getWindow: function getWindow(node) {\n    if (node && node.document && node.setTimeout) {\n      return node;\n    }\n    var doc = node.ownerDocument || node;\n    return doc.defaultView || doc.parentWindow;\n  },\n\n  getDocument: getDocument,\n  offset: function offset(el, value, option) {\n    if (typeof value !== 'undefined') {\n      setOffset(el, value, option || {});\n    } else {\n      return getOffset(el);\n    }\n  },\n\n  isWindow: isWindow,\n  each: each,\n  css: css,\n  clone: function clone(obj) {\n    var i = void 0;\n    var ret = {};\n    for (i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ret[i] = obj[i];\n      }\n    }\n    var overflow = obj.overflow;\n    if (overflow) {\n      for (i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ret.overflow[i] = obj.overflow[i];\n        }\n      }\n    }\n    return ret;\n  },\n\n  mix: mix,\n  getWindowScrollLeft: function getWindowScrollLeft(w) {\n    return getScrollLeft(w);\n  },\n  getWindowScrollTop: function getWindowScrollTop(w) {\n    return getScrollTop(w);\n  },\n  merge: function merge() {\n    var ret = {};\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      utils.mix(ret, args[i]);\n    }\n    return ret;\n  },\n\n  viewportWidth: 0,\n  viewportHeight: 0\n};\n\nmix(utils, domUtils);\n\n/* harmony default export */ var es_utils = (utils);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/getOffsetParent.js\n\n\n/**\n * 得到会导致元素显示不全的祖先元素\n */\n\nfunction getOffsetParent(element) {\n  if (es_utils.isWindow(element) || element.nodeType === 9) {\n    return null;\n  }\n  // ie 这个也不是完全可行\n  /*\n   <div style=\"width: 50px;height: 100px;overflow: hidden\">\n   <div style=\"width: 50px;height: 100px;position: relative;\" id=\"d6\">\n   元素 6 高 100px 宽 50px<br/>\n   </div>\n   </div>\n   */\n  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!\n  //  In other browsers it only includes elements with position absolute, relative or\n  // fixed, not elements with overflow set to auto or scroll.\n  //        if (UA.ie && ieMode < 8) {\n  //            return element.offsetParent;\n  //        }\n  // 统一的 offsetParent 方法\n  var doc = es_utils.getDocument(element);\n  var body = doc.body;\n  var parent = void 0;\n  var positionStyle = es_utils.css(element, 'position');\n  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';\n\n  if (!skipStatic) {\n    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;\n  }\n\n  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {\n    positionStyle = es_utils.css(parent, 'position');\n    if (positionStyle !== 'static') {\n      return parent;\n    }\n  }\n  return null;\n}\n\n/* harmony default export */ var es_getOffsetParent = (getOffsetParent);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/isAncestorFixed.js\n\n\nfunction isAncestorFixed(element) {\n  if (es_utils.isWindow(element) || element.nodeType === 9) {\n    return false;\n  }\n\n  var doc = es_utils.getDocument(element);\n  var body = doc.body;\n  var parent = null;\n  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {\n    var positionStyle = es_utils.css(parent, 'position');\n    if (positionStyle === 'fixed') {\n      return true;\n    }\n  }\n  return false;\n}\n// CONCATENATED MODULE: ./node_modules/dom-align/es/getVisibleRectForElement.js\n\n\n\n\n/**\n * 获得元素的显示部分的区域\n */\nfunction getVisibleRectForElement(element) {\n  var visibleRect = {\n    left: 0,\n    right: Infinity,\n    top: 0,\n    bottom: Infinity\n  };\n  var el = es_getOffsetParent(element);\n  var doc = es_utils.getDocument(element);\n  var win = doc.defaultView || doc.parentWindow;\n  var body = doc.body;\n  var documentElement = doc.documentElement;\n\n  // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n  while (el) {\n    // clientWidth is zero for inline block elements in ie.\n    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&\n    // body may have overflow set on it, yet we still get the entire\n    // viewport. In some browsers, el.offsetParent may be\n    // document.documentElement, so check for that too.\n    el !== body && el !== documentElement && es_utils.css(el, 'overflow') !== 'visible') {\n      var pos = es_utils.offset(el);\n      // add border\n      pos.left += el.clientLeft;\n      pos.top += el.clientTop;\n      visibleRect.top = Math.max(visibleRect.top, pos.top);\n      visibleRect.right = Math.min(visibleRect.right,\n      // consider area without scrollBar\n      pos.left + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.left);\n    } else if (el === body || el === documentElement) {\n      break;\n    }\n    el = es_getOffsetParent(el);\n  }\n\n  // Set element position to fixed\n  // make sure absolute element itself don't affect it's visible area\n  // https://github.com/ant-design/ant-design/issues/7601\n  var originalPosition = null;\n  if (!es_utils.isWindow(element) && element.nodeType !== 9) {\n    originalPosition = element.style.position;\n    var position = es_utils.css(element, 'position');\n    if (position === 'absolute') {\n      element.style.position = 'fixed';\n    }\n  }\n\n  var scrollX = es_utils.getWindowScrollLeft(win);\n  var scrollY = es_utils.getWindowScrollTop(win);\n  var viewportWidth = es_utils.viewportWidth(win);\n  var viewportHeight = es_utils.viewportHeight(win);\n  var documentWidth = documentElement.scrollWidth;\n  var documentHeight = documentElement.scrollHeight;\n\n  // scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.\n  // We should cut this ourself.\n  var bodyStyle = window.getComputedStyle(body);\n  if (bodyStyle.overflowX === 'hidden') {\n    documentWidth = win.innerWidth;\n  }\n  if (bodyStyle.overflowY === 'hidden') {\n    documentHeight = win.innerHeight;\n  }\n\n  // Reset element position after calculate the visible area\n  if (element.style) {\n    element.style.position = originalPosition;\n  }\n\n  if (isAncestorFixed(element)) {\n    // Clip by viewport's size.\n    visibleRect.left = Math.max(visibleRect.left, scrollX);\n    visibleRect.top = Math.max(visibleRect.top, scrollY);\n    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\n    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\n  } else {\n    // Clip by document's size.\n    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\n    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\n\n    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\n    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\n  }\n\n  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n}\n\n/* harmony default export */ var es_getVisibleRectForElement = (getVisibleRectForElement);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/adjustForViewport.js\n\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = es_utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  }\n\n  // Left edge inside and right edge outside viewport, try to resize it.\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  }\n\n  // Right edge outside viewport, try to move it.\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  }\n\n  // Top edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  }\n\n  // Top edge inside and bottom edge outside viewport, try to resize it.\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  }\n\n  // Bottom edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return es_utils.mix(pos, size);\n}\n\n/* harmony default export */ var es_adjustForViewport = (adjustForViewport);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/getRegion.js\n\n\nfunction getRegion(node) {\n  var offset = void 0;\n  var w = void 0;\n  var h = void 0;\n  if (!es_utils.isWindow(node) && node.nodeType !== 9) {\n    offset = es_utils.offset(node);\n    w = es_utils.outerWidth(node);\n    h = es_utils.outerHeight(node);\n  } else {\n    var win = es_utils.getWindow(node);\n    offset = {\n      left: es_utils.getWindowScrollLeft(win),\n      top: es_utils.getWindowScrollTop(win)\n    };\n    w = es_utils.viewportWidth(win);\n    h = es_utils.viewportHeight(win);\n  }\n  offset.width = w;\n  offset.height = h;\n  return offset;\n}\n\n/* harmony default export */ var es_getRegion = (getRegion);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/getAlignOffset.js\n/**\n * 获取 node 上的 align 对齐点 相对于页面的坐标\n */\n\nfunction getAlignOffset(region, align) {\n  var V = align.charAt(0);\n  var H = align.charAt(1);\n  var w = region.width;\n  var h = region.height;\n\n  var x = region.left;\n  var y = region.top;\n\n  if (V === 'c') {\n    y += h / 2;\n  } else if (V === 'b') {\n    y += h;\n  }\n\n  if (H === 'c') {\n    x += w / 2;\n  } else if (H === 'r') {\n    x += w;\n  }\n\n  return {\n    left: x,\n    top: y\n  };\n}\n\n/* harmony default export */ var es_getAlignOffset = (getAlignOffset);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/getElFuturePos.js\n\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {\n  var p1 = es_getAlignOffset(refNodeRegion, points[1]);\n  var p2 = es_getAlignOffset(elRegion, points[0]);\n  var diff = [p2.left - p1.left, p2.top - p1.top];\n\n  return {\n    left: elRegion.left - diff[0] + offset[0] - targetOffset[0],\n    top: elRegion.top - diff[1] + offset[1] - targetOffset[1]\n  };\n}\n\n/* harmony default export */ var es_getElFuturePos = (getElFuturePos);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/align/align.js\n/**\n * align dom node flexibly\n * @author yiminghe@gmail.com\n */\n\n\n\n\n\n\n\n// http://yiminghe.iteye.com/blog/1124720\n\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\n}\n\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\n}\n\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\n}\n\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\n}\n\nfunction flip(points, reg, map) {\n  var ret = [];\n  es_utils.each(points, function (p) {\n    ret.push(p.replace(reg, function (m) {\n      return map[m];\n    }));\n  });\n  return ret;\n}\n\nfunction flipOffset(offset, index) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction convertOffset(str, offsetLen) {\n  var n = void 0;\n  if (/%$/.test(str)) {\n    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\n  } else {\n    n = parseInt(str, 10);\n  }\n  return n || 0;\n}\n\nfunction normalizeOffset(offset, el) {\n  offset[0] = convertOffset(offset[0], el.width);\n  offset[1] = convertOffset(offset[1], el.height);\n}\n\n/**\n * @param el\n * @param tgtRegion 参照节点所占的区域: { left, top, width, height }\n * @param align\n */\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\n  var points = align.points;\n  var offset = align.offset || [0, 0];\n  var targetOffset = align.targetOffset || [0, 0];\n  var overflow = align.overflow;\n  var source = align.source || el;\n  offset = [].concat(offset);\n  targetOffset = [].concat(targetOffset);\n  overflow = overflow || {};\n  var newOverflowCfg = {};\n  var fail = 0;\n  // 当前节点可以被放置的显示区域\n  var visibleRect = es_getVisibleRectForElement(source);\n  // 当前节点所占的区域, left/top/width/height\n  var elRegion = es_getRegion(source);\n  // 将 offset 转换成数值，支持百分比\n  normalizeOffset(offset, elRegion);\n  normalizeOffset(targetOffset, tgtRegion);\n  // 当前节点将要被放置的位置\n  var elFuturePos = es_getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n  // 当前节点将要所处的区域\n  var newElRegion = es_utils.merge(elRegion, elFuturePos);\n\n  // 如果可视区域不能完全放置当前节点时允许调整\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\n    if (overflow.adjustX) {\n      // 如果横向不能放下\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var newPoints = flip(points, /[lr]/ig, {\n          l: 'r',\n          r: 'l'\n        });\n        // 偏移量也反下\n        var newOffset = flipOffset(offset, 0);\n        var newTargetOffset = flipOffset(targetOffset, 0);\n        var newElFuturePos = es_getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\n\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset = newOffset;\n          targetOffset = newTargetOffset;\n        }\n      }\n    }\n\n    if (overflow.adjustY) {\n      // 如果纵向不能放下\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        // 对齐位置反下\n        var _newPoints = flip(points, /[tb]/ig, {\n          t: 'b',\n          b: 't'\n        });\n        // 偏移量也反下\n        var _newOffset = flipOffset(offset, 1);\n        var _newTargetOffset = flipOffset(targetOffset, 1);\n        var _newElFuturePos = es_getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\n\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset = _newOffset;\n          targetOffset = _newTargetOffset;\n        }\n      }\n    }\n\n    // 如果失败，重新计算当前节点将要被放置的位置\n    if (fail) {\n      elFuturePos = es_getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n      es_utils.mix(newElRegion, elFuturePos);\n    }\n    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\n    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);\n    // 检查反下后的位置是否可以放下了，如果仍然放不下：\n    // 1. 复原修改过的定位参数\n    if (isStillFailX || isStillFailY) {\n      points = align.points;\n      offset = align.offset || [0, 0];\n      targetOffset = align.targetOffset || [0, 0];\n    }\n    // 2. 只有指定了可以调整当前方向才调整\n    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\n    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;\n\n    // 确实要调整，甚至可能会调整高度宽度\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = es_adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  }\n\n  // need judge to in case set fixed with in css on height auto element\n  if (newElRegion.width !== elRegion.width) {\n    es_utils.css(source, 'width', es_utils.width(source) + newElRegion.width - elRegion.width);\n  }\n\n  if (newElRegion.height !== elRegion.height) {\n    es_utils.css(source, 'height', es_utils.height(source) + newElRegion.height - elRegion.height);\n  }\n\n  // https://github.com/kissyteam/kissy/issues/190\n  // 相对于屏幕位置没变，而 left/top 变了\n  // 例如 <div 'relative'><el absolute></div>\n  es_utils.offset(source, {\n    left: newElRegion.left,\n    top: newElRegion.top\n  }, {\n    useCssRight: align.useCssRight,\n    useCssBottom: align.useCssBottom,\n    useCssTransform: align.useCssTransform,\n    ignoreShake: align.ignoreShake\n  });\n\n  return {\n    points: points,\n    offset: offset,\n    targetOffset: targetOffset,\n    overflow: newOverflowCfg\n  };\n}\n\n/* harmony default export */ var align_align = (doAlign);\n/**\n *  2012-04-26 yiminghe@gmail.com\n *   - 优化智能对齐算法\n *   - 慎用 resizeXX\n *\n *  2011-07-13 yiminghe@gmail.com note:\n *   - 增加智能对齐，以及大小调整选项\n **/\n// CONCATENATED MODULE: ./node_modules/dom-align/es/align/alignElement.js\n\n\n\n\n\nfunction isOutOfVisibleRect(target) {\n  var visibleRect = es_getVisibleRectForElement(target);\n  var targetRegion = es_getRegion(target);\n\n  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;\n}\n\nfunction alignElement(el, refNode, align) {\n  var target = align.target || refNode;\n  var refNodeRegion = es_getRegion(target);\n\n  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target);\n\n  return align_align(el, refNodeRegion, align, isTargetNotOutOfVisible);\n}\n\nalignElement.__getOffsetParent = es_getOffsetParent;\n\nalignElement.__getVisibleRectForElement = es_getVisibleRectForElement;\n\n/* harmony default export */ var align_alignElement = (alignElement);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/align/alignPoint.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n/**\n * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.\n * If client position provided, will internal convert to page position.\n */\n\nfunction alignPoint_alignPoint(el, tgtPoint, align) {\n  var pageX = void 0;\n  var pageY = void 0;\n\n  var doc = es_utils.getDocument(el);\n  var win = doc.defaultView || doc.parentWindow;\n\n  var scrollX = es_utils.getWindowScrollLeft(win);\n  var scrollY = es_utils.getWindowScrollTop(win);\n  var viewportWidth = es_utils.viewportWidth(win);\n  var viewportHeight = es_utils.viewportHeight(win);\n\n  if ('pageX' in tgtPoint) {\n    pageX = tgtPoint.pageX;\n  } else {\n    pageX = scrollX + tgtPoint.clientX;\n  }\n\n  if ('pageY' in tgtPoint) {\n    pageY = tgtPoint.pageY;\n  } else {\n    pageY = scrollY + tgtPoint.clientY;\n  }\n\n  var tgtRegion = {\n    left: pageX,\n    top: pageY,\n    width: 0,\n    height: 0\n  };\n\n  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;\n\n  // Provide default target point\n  var points = [align.points[0], 'cc'];\n\n  return align_align(el, tgtRegion, _extends({}, align, { points: points }), pointInView);\n}\n\n/* harmony default export */ var align_alignPoint = (alignPoint_alignPoint);\n// CONCATENATED MODULE: ./node_modules/dom-align/es/index.js\n\n\n\n\n\n/* harmony default export */ var es = (align_alignElement);\n// CONCATENATED MODULE: ./node_modules/rc-align/es/util.js\n\n\nfunction buffer(fn, ms) {\n  var timer = void 0;\n\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n\n  function bufferFn() {\n    clear();\n    timer = setTimeout(fn, ms);\n  }\n\n  bufferFn.clear = clear;\n\n  return bufferFn;\n}\n\nfunction isSamePoint(prev, next) {\n  if (prev === next) return true;\n  if (!prev || !next) return false;\n\n  if ('pageX' in next && 'pageY' in next) {\n    return prev.pageX === next.pageX && prev.pageY === next.pageY;\n  }\n\n  if ('clientX' in next && 'clientY' in next) {\n    return prev.clientX === next.clientX && prev.clientY === next.clientY;\n  }\n\n  return false;\n}\n\nfunction util_isWindow(obj) {\n  return obj && typeof obj === 'object' && obj.window === obj;\n}\n\nfunction isSimilarValue(val1, val2) {\n  var int1 = Math.floor(val1);\n  var int2 = Math.floor(val2);\n  return Math.abs(int1 - int2) <= 1;\n}\n\nfunction restoreFocus(activeElement, container) {\n  // Focus back if is in the container\n  if (activeElement !== document.activeElement && contains(container, activeElement)) {\n    activeElement.focus();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/rc-align/es/Align.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getElement(func) {\n  if (typeof func !== 'function' || !func) return null;\n  return func();\n}\n\nfunction getPoint(point) {\n  if (typeof point !== 'object' || !point) return null;\n  return point;\n}\n\nvar Align_Align = function (_Component) {\n  inherits_default()(Align, _Component);\n\n  function Align() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck_default()(this, Align);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, (_ref = Align.__proto__ || Object.getPrototypeOf(Align)).call.apply(_ref, [this].concat(args))), _this), _this.forceAlign = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          target = _this$props.target,\n          align = _this$props.align,\n          onAlign = _this$props.onAlign;\n\n      if (!disabled && target) {\n        var source = react_dom_default.a.findDOMNode(_this);\n\n        var result = void 0;\n        var element = getElement(target);\n        var point = getPoint(target);\n\n        // IE lose focus after element realign\n        // We should record activeElement and restore later\n        var activeElement = document.activeElement;\n\n        if (element) {\n          result = align_alignElement(source, element, align);\n        } else if (point) {\n          result = align_alignPoint(source, point, align);\n        }\n\n        restoreFocus(activeElement, source);\n\n        if (onAlign) {\n          onAlign(source, result);\n        }\n      }\n    }, _temp), possibleConstructorReturn_default()(_this, _ret);\n  }\n\n  createClass_default()(Align, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var props = this.props;\n      // if parent ref not attached .... use document.getElementById\n      this.forceAlign();\n      if (!props.disabled && props.monitorWindowResize) {\n        this.startMonitorWindowResize();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var reAlign = false;\n      var props = this.props;\n\n      if (!props.disabled) {\n        var source = react_dom_default.a.findDOMNode(this);\n        var sourceRect = source ? source.getBoundingClientRect() : null;\n\n        if (prevProps.disabled) {\n          reAlign = true;\n        } else {\n          var lastElement = getElement(prevProps.target);\n          var currentElement = getElement(props.target);\n          var lastPoint = getPoint(prevProps.target);\n          var currentPoint = getPoint(props.target);\n\n          if (util_isWindow(lastElement) && util_isWindow(currentElement)) {\n            // Skip if is window\n            reAlign = false;\n          } else if (lastElement !== currentElement || // Element change\n          lastElement && !currentElement && currentPoint || // Change from element to point\n          lastPoint && currentPoint && currentElement || // Change from point to element\n          currentPoint && !isSamePoint(lastPoint, currentPoint)) {\n            reAlign = true;\n          }\n\n          // If source element size changed\n          var preRect = this.sourceRect || {};\n          if (!reAlign && source && (!isSimilarValue(preRect.width, sourceRect.width) || !isSimilarValue(preRect.height, sourceRect.height))) {\n            reAlign = true;\n          }\n        }\n\n        this.sourceRect = sourceRect;\n      }\n\n      if (reAlign) {\n        this.forceAlign();\n      }\n\n      if (props.monitorWindowResize && !props.disabled) {\n        this.startMonitorWindowResize();\n      } else {\n        this.stopMonitorWindowResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopMonitorWindowResize();\n    }\n  }, {\n    key: 'startMonitorWindowResize',\n    value: function startMonitorWindowResize() {\n      if (!this.resizeHandler) {\n        this.bufferMonitor = buffer(this.forceAlign, this.props.monitorBufferTime);\n        this.resizeHandler = addEventListenerWrap(window, 'resize', this.bufferMonitor);\n      }\n    }\n  }, {\n    key: 'stopMonitorWindowResize',\n    value: function stopMonitorWindowResize() {\n      if (this.resizeHandler) {\n        this.bufferMonitor.clear();\n        this.resizeHandler.remove();\n        this.resizeHandler = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          childrenProps = _props.childrenProps,\n          children = _props.children;\n\n      var child = react_default.a.Children.only(children);\n      if (childrenProps) {\n        var newProps = {};\n        var propList = Object.keys(childrenProps);\n        propList.forEach(function (prop) {\n          newProps[prop] = _this2.props[childrenProps[prop]];\n        });\n\n        return react_default.a.cloneElement(child, newProps);\n      }\n      return child;\n    }\n  }]);\n\n  return Align;\n}(react[\"Component\"]);\n\nAlign_Align.propTypes = {\n  childrenProps: prop_types_default.a.object,\n  align: prop_types_default.a.object.isRequired,\n  target: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.shape({\n    clientX: prop_types_default.a.number,\n    clientY: prop_types_default.a.number,\n    pageX: prop_types_default.a.number,\n    pageY: prop_types_default.a.number\n  })]),\n  onAlign: prop_types_default.a.func,\n  monitorBufferTime: prop_types_default.a.number,\n  monitorWindowResize: prop_types_default.a.bool,\n  disabled: prop_types_default.a.bool,\n  children: prop_types_default.a.any\n};\nAlign_Align.defaultProps = {\n  target: function target() {\n    return window;\n  },\n  monitorBufferTime: 50,\n  monitorWindowResize: false,\n  disabled: false\n};\n\n\n/* harmony default export */ var es_Align = (Align_Align);\n// CONCATENATED MODULE: ./node_modules/rc-align/es/index.js\n// export this package's api\n\n\n/* harmony default export */ var rc_align_es = (es_Align);\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/defineProperty.js\nvar defineProperty = __webpack_require__(409);\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);\n\n// CONCATENATED MODULE: ./node_modules/rc-animate/es/ChildrenUtils.js\n\n\nfunction toArrayChildren(children) {\n  var ret = [];\n  react_default.a.Children.forEach(children, function (child) {\n    ret.push(child);\n  });\n  return ret;\n}\n\nfunction findChildInChildrenByKey(children, key) {\n  var ret = null;\n  if (children) {\n    children.forEach(function (child) {\n      if (ret) {\n        return;\n      }\n      if (child && child.key === key) {\n        ret = child;\n      }\n    });\n  }\n  return ret;\n}\n\nfunction findShownChildInChildrenByKey(children, key, showProp) {\n  var ret = null;\n  if (children) {\n    children.forEach(function (child) {\n      if (child && child.key === key && child.props[showProp]) {\n        if (ret) {\n          throw new Error('two child with same key for <rc-animate> children');\n        }\n        ret = child;\n      }\n    });\n  }\n  return ret;\n}\n\nfunction findHiddenChildInChildrenByKey(children, key, showProp) {\n  var found = 0;\n  if (children) {\n    children.forEach(function (child) {\n      if (found) {\n        return;\n      }\n      found = child && child.key === key && !child.props[showProp];\n    });\n  }\n  return found;\n}\n\nfunction isSameChildren(c1, c2, showProp) {\n  var same = c1.length === c2.length;\n  if (same) {\n    c1.forEach(function (child, index) {\n      var child2 = c2[index];\n      if (child && child2) {\n        if (child && !child2 || !child && child2) {\n          same = false;\n        } else if (child.key !== child2.key) {\n          same = false;\n        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {\n          same = false;\n        }\n      }\n    });\n  }\n  return same;\n}\n\nfunction mergeChildren(prev, next) {\n  var ret = [];\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextChildrenPending = {};\n  var pendingChildren = [];\n  prev.forEach(function (child) {\n    if (child && findChildInChildrenByKey(next, child.key)) {\n      if (pendingChildren.length) {\n        nextChildrenPending[child.key] = pendingChildren;\n        pendingChildren = [];\n      }\n    } else {\n      pendingChildren.push(child);\n    }\n  });\n\n  next.forEach(function (child) {\n    if (child && Object.prototype.hasOwnProperty.call(nextChildrenPending, child.key)) {\n      ret = ret.concat(nextChildrenPending[child.key]);\n    }\n    ret.push(child);\n  });\n\n  ret = ret.concat(pendingChildren);\n\n  return ret;\n}\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/typeof.js\nvar helpers_typeof = __webpack_require__(119);\nvar typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);\n\n// CONCATENATED MODULE: ./node_modules/css-animation/es/Event.js\nvar START_EVENT_NAME_MAP = {\n  transitionstart: {\n    transition: 'transitionstart',\n    WebkitTransition: 'webkitTransitionStart',\n    MozTransition: 'mozTransitionStart',\n    OTransition: 'oTransitionStart',\n    msTransition: 'MSTransitionStart'\n  },\n\n  animationstart: {\n    animation: 'animationstart',\n    WebkitAnimation: 'webkitAnimationStart',\n    MozAnimation: 'mozAnimationStart',\n    OAnimation: 'oAnimationStart',\n    msAnimation: 'MSAnimationStart'\n  }\n};\n\nvar END_EVENT_NAME_MAP = {\n  transitionend: {\n    transition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'mozTransitionEnd',\n    OTransition: 'oTransitionEnd',\n    msTransition: 'MSTransitionEnd'\n  },\n\n  animationend: {\n    animation: 'animationend',\n    WebkitAnimation: 'webkitAnimationEnd',\n    MozAnimation: 'mozAnimationEnd',\n    OAnimation: 'oAnimationEnd',\n    msAnimation: 'MSAnimationEnd'\n  }\n};\n\nvar startEvents = [];\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  if (!('AnimationEvent' in window)) {\n    delete START_EVENT_NAME_MAP.animationstart.animation;\n    delete END_EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete START_EVENT_NAME_MAP.transitionstart.transition;\n    delete END_EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  function process(EVENT_NAME_MAP, events) {\n    for (var baseEventName in EVENT_NAME_MAP) {\n      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {\n        var baseEvents = EVENT_NAME_MAP[baseEventName];\n        for (var styleName in baseEvents) {\n          if (styleName in style) {\n            events.push(baseEvents[styleName]);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  process(START_EVENT_NAME_MAP, startEvents);\n  process(END_EVENT_NAME_MAP, endEvents);\n}\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  detectEvents();\n}\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar TransitionEvents = {\n  // Start events\n  startEvents: startEvents,\n\n  addStartEventListener: function addStartEventListener(node, eventListener) {\n    if (startEvents.length === 0) {\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    startEvents.forEach(function (startEvent) {\n      addEventListener(node, startEvent, eventListener);\n    });\n  },\n  removeStartEventListener: function removeStartEventListener(node, eventListener) {\n    if (startEvents.length === 0) {\n      return;\n    }\n    startEvents.forEach(function (startEvent) {\n      removeEventListener(node, startEvent, eventListener);\n    });\n  },\n\n\n  // End events\n  endEvents: endEvents,\n\n  addEndEventListener: function addEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n  removeEndEventListener: function removeEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\n/* harmony default export */ var Event = (TransitionEvents);\n// EXTERNAL MODULE: ./node_modules/component-classes/index.js\nvar component_classes = __webpack_require__(410);\nvar component_classes_default = /*#__PURE__*/__webpack_require__.n(component_classes);\n\n// CONCATENATED MODULE: ./node_modules/css-animation/es/index.js\n\n\n\n\nvar isCssAnimationSupported = Event.endEvents.length !== 0;\nvar capitalPrefixes = ['Webkit', 'Moz', 'O',\n// ms is special .... !\n'ms'];\nvar prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];\n\nfunction getStyleProperty(node, name) {\n  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\n  var style = window.getComputedStyle(node, null);\n  var ret = '';\n  for (var i = 0; i < prefixes.length; i++) {\n    ret = style.getPropertyValue(prefixes[i] + name);\n    if (ret) {\n      break;\n    }\n  }\n  return ret;\n}\n\nfunction fixBrowserByTimeout(node) {\n  if (isCssAnimationSupported) {\n    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;\n    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;\n    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;\n    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;\n    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);\n    // sometimes, browser bug\n    node.rcEndAnimTimeout = setTimeout(function () {\n      node.rcEndAnimTimeout = null;\n      if (node.rcEndListener) {\n        node.rcEndListener();\n      }\n    }, time * 1000 + 200);\n  }\n}\n\nfunction clearBrowserBugTimeout(node) {\n  if (node.rcEndAnimTimeout) {\n    clearTimeout(node.rcEndAnimTimeout);\n    node.rcEndAnimTimeout = null;\n  }\n}\n\nvar es_cssAnimation = function cssAnimation(node, transitionName, endCallback) {\n  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : typeof_default()(transitionName)) === 'object';\n  var className = nameIsObj ? transitionName.name : transitionName;\n  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';\n  var end = endCallback;\n  var start = void 0;\n  var active = void 0;\n  var nodeClasses = component_classes_default()(node);\n\n  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {\n    end = endCallback.end;\n    start = endCallback.start;\n    active = endCallback.active;\n  }\n\n  if (node.rcEndListener) {\n    node.rcEndListener();\n  }\n\n  node.rcEndListener = function (e) {\n    if (e && e.target !== node) {\n      return;\n    }\n\n    if (node.rcAnimTimeout) {\n      clearTimeout(node.rcAnimTimeout);\n      node.rcAnimTimeout = null;\n    }\n\n    clearBrowserBugTimeout(node);\n\n    nodeClasses.remove(className);\n    nodeClasses.remove(activeClassName);\n\n    Event.removeEndEventListener(node, node.rcEndListener);\n    node.rcEndListener = null;\n\n    // Usually this optional end is used for informing an owner of\n    // a leave animation and telling it to remove the child.\n    if (end) {\n      end();\n    }\n  };\n\n  Event.addEndEventListener(node, node.rcEndListener);\n\n  if (start) {\n    start();\n  }\n  nodeClasses.add(className);\n\n  node.rcAnimTimeout = setTimeout(function () {\n    node.rcAnimTimeout = null;\n    nodeClasses.add(activeClassName);\n    if (active) {\n      setTimeout(active, 0);\n    }\n    fixBrowserByTimeout(node);\n    // 30ms for firefox\n  }, 30);\n\n  return {\n    stop: function stop() {\n      if (node.rcEndListener) {\n        node.rcEndListener();\n      }\n    }\n  };\n};\n\nes_cssAnimation.style = function (node, style, callback) {\n  if (node.rcEndListener) {\n    node.rcEndListener();\n  }\n\n  node.rcEndListener = function (e) {\n    if (e && e.target !== node) {\n      return;\n    }\n\n    if (node.rcAnimTimeout) {\n      clearTimeout(node.rcAnimTimeout);\n      node.rcAnimTimeout = null;\n    }\n\n    clearBrowserBugTimeout(node);\n\n    Event.removeEndEventListener(node, node.rcEndListener);\n    node.rcEndListener = null;\n\n    // Usually this optional callback is used for informing an owner of\n    // a leave animation and telling it to remove the child.\n    if (callback) {\n      callback();\n    }\n  };\n\n  Event.addEndEventListener(node, node.rcEndListener);\n\n  node.rcAnimTimeout = setTimeout(function () {\n    for (var s in style) {\n      if (style.hasOwnProperty(s)) {\n        node.style[s] = style[s];\n      }\n    }\n    node.rcAnimTimeout = null;\n    fixBrowserByTimeout(node);\n  }, 0);\n};\n\nes_cssAnimation.setTransition = function (node, p, value) {\n  var property = p;\n  var v = value;\n  if (value === undefined) {\n    v = property;\n    property = '';\n  }\n  property = property || '';\n  capitalPrefixes.forEach(function (prefix) {\n    node.style[prefix + 'Transition' + property] = v;\n  });\n};\n\nes_cssAnimation.isCssAnimationSupported = isCssAnimationSupported;\n\n\n\n/* harmony default export */ var css_animation_es = (es_cssAnimation);\n// CONCATENATED MODULE: ./node_modules/rc-animate/es/util/animate.js\nvar util = {\n  isAppearSupported: function isAppearSupported(props) {\n    return props.transitionName && props.transitionAppear || props.animation.appear;\n  },\n  isEnterSupported: function isEnterSupported(props) {\n    return props.transitionName && props.transitionEnter || props.animation.enter;\n  },\n  isLeaveSupported: function isLeaveSupported(props) {\n    return props.transitionName && props.transitionLeave || props.animation.leave;\n  },\n  allowAppearCallback: function allowAppearCallback(props) {\n    return props.transitionAppear || props.animation.appear;\n  },\n  allowEnterCallback: function allowEnterCallback(props) {\n    return props.transitionEnter || props.animation.enter;\n  },\n  allowLeaveCallback: function allowLeaveCallback(props) {\n    return props.transitionLeave || props.animation.leave;\n  }\n};\n/* harmony default export */ var animate = (util);\n// CONCATENATED MODULE: ./node_modules/rc-animate/es/AnimateChild.js\n\n\n\n\n\n\n\n\n\n\nvar transitionMap = {\n  enter: 'transitionEnter',\n  appear: 'transitionAppear',\n  leave: 'transitionLeave'\n};\n\nvar AnimateChild_AnimateChild = function (_React$Component) {\n  inherits_default()(AnimateChild, _React$Component);\n\n  function AnimateChild() {\n    classCallCheck_default()(this, AnimateChild);\n\n    return possibleConstructorReturn_default()(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).apply(this, arguments));\n  }\n\n  createClass_default()(AnimateChild, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stop();\n    }\n  }, {\n    key: 'componentWillEnter',\n    value: function componentWillEnter(done) {\n      if (animate.isEnterSupported(this.props)) {\n        this.transition('enter', done);\n      } else {\n        done();\n      }\n    }\n  }, {\n    key: 'componentWillAppear',\n    value: function componentWillAppear(done) {\n      if (animate.isAppearSupported(this.props)) {\n        this.transition('appear', done);\n      } else {\n        done();\n      }\n    }\n  }, {\n    key: 'componentWillLeave',\n    value: function componentWillLeave(done) {\n      if (animate.isLeaveSupported(this.props)) {\n        this.transition('leave', done);\n      } else {\n        // always sync, do not interupt with react component life cycle\n        // update hidden -> animate hidden ->\n        // didUpdate -> animate leave -> unmount (if animate is none)\n        done();\n      }\n    }\n  }, {\n    key: 'transition',\n    value: function transition(animationType, finishCallback) {\n      var _this2 = this;\n\n      var node = react_dom_default.a.findDOMNode(this);\n      var props = this.props;\n      var transitionName = props.transitionName;\n      var nameIsObj = typeof transitionName === 'object';\n      this.stop();\n      var end = function end() {\n        _this2.stopper = null;\n        finishCallback();\n      };\n      if ((isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {\n        var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;\n        var activeName = name + '-active';\n        if (nameIsObj && transitionName[animationType + 'Active']) {\n          activeName = transitionName[animationType + 'Active'];\n        }\n        this.stopper = css_animation_es(node, {\n          name: name,\n          active: activeName\n        }, end);\n      } else {\n        this.stopper = props.animation[animationType](node, end);\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var stopper = this.stopper;\n      if (stopper) {\n        this.stopper = null;\n        stopper.stop();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return AnimateChild;\n}(react_default.a.Component);\n\nAnimateChild_AnimateChild.propTypes = {\n  children: prop_types_default.a.any\n};\n/* harmony default export */ var es_AnimateChild = (AnimateChild_AnimateChild);\n// CONCATENATED MODULE: ./node_modules/rc-animate/es/Animate.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultKey = 'rc_animate_' + Date.now();\n\nfunction getChildrenFromProps(props) {\n  var children = props.children;\n  if (react_default.a.isValidElement(children)) {\n    if (!children.key) {\n      return react_default.a.cloneElement(children, {\n        key: defaultKey\n      });\n    }\n  }\n  return children;\n}\n\nfunction noop() {}\n\nvar Animate_Animate = function (_React$Component) {\n  inherits_default()(Animate, _React$Component);\n\n  // eslint-disable-line\n\n  function Animate(props) {\n    classCallCheck_default()(this, Animate);\n\n    var _this = possibleConstructorReturn_default()(this, (Animate.__proto__ || Object.getPrototypeOf(Animate)).call(this, props));\n\n    Animate_initialiseProps.call(_this);\n\n    _this.currentlyAnimatingKeys = {};\n    _this.keysToEnter = [];\n    _this.keysToLeave = [];\n\n    _this.state = {\n      children: toArrayChildren(getChildrenFromProps(props))\n    };\n\n    _this.childrenRefs = {};\n    return _this;\n  }\n\n  createClass_default()(Animate, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var showProp = this.props.showProp;\n      var children = this.state.children;\n      if (showProp) {\n        children = children.filter(function (child) {\n          return !!child.props[showProp];\n        });\n      }\n      children.forEach(function (child) {\n        if (child) {\n          _this2.performAppear(child.key);\n        }\n      });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      this.nextProps = nextProps;\n      var nextChildren = toArrayChildren(getChildrenFromProps(nextProps));\n      var props = this.props;\n      // exclusive needs immediate response\n      if (props.exclusive) {\n        Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {\n          _this3.stop(key);\n        });\n      }\n      var showProp = props.showProp;\n      var currentlyAnimatingKeys = this.currentlyAnimatingKeys;\n      // last props children if exclusive\n      var currentChildren = props.exclusive ? toArrayChildren(getChildrenFromProps(props)) : this.state.children;\n      // in case destroy in showProp mode\n      var newChildren = [];\n      if (showProp) {\n        currentChildren.forEach(function (currentChild) {\n          var nextChild = currentChild && findChildInChildrenByKey(nextChildren, currentChild.key);\n          var newChild = void 0;\n          if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {\n            newChild = react_default.a.cloneElement(nextChild || currentChild, defineProperty_default()({}, showProp, true));\n          } else {\n            newChild = nextChild;\n          }\n          if (newChild) {\n            newChildren.push(newChild);\n          }\n        });\n        nextChildren.forEach(function (nextChild) {\n          if (!nextChild || !findChildInChildrenByKey(currentChildren, nextChild.key)) {\n            newChildren.push(nextChild);\n          }\n        });\n      } else {\n        newChildren = mergeChildren(currentChildren, nextChildren);\n      }\n\n      // need render to avoid update\n      this.setState({\n        children: newChildren\n      });\n\n      nextChildren.forEach(function (child) {\n        var key = child && child.key;\n        if (child && currentlyAnimatingKeys[key]) {\n          return;\n        }\n        var hasPrev = child && findChildInChildrenByKey(currentChildren, key);\n        if (showProp) {\n          var showInNext = child.props[showProp];\n          if (hasPrev) {\n            var showInNow = findShownChildInChildrenByKey(currentChildren, key, showProp);\n            if (!showInNow && showInNext) {\n              _this3.keysToEnter.push(key);\n            }\n          } else if (showInNext) {\n            _this3.keysToEnter.push(key);\n          }\n        } else if (!hasPrev) {\n          _this3.keysToEnter.push(key);\n        }\n      });\n\n      currentChildren.forEach(function (child) {\n        var key = child && child.key;\n        if (child && currentlyAnimatingKeys[key]) {\n          return;\n        }\n        var hasNext = child && findChildInChildrenByKey(nextChildren, key);\n        if (showProp) {\n          var showInNow = child.props[showProp];\n          if (hasNext) {\n            var showInNext = findShownChildInChildrenByKey(nextChildren, key, showProp);\n            if (!showInNext && showInNow) {\n              _this3.keysToLeave.push(key);\n            }\n          } else if (showInNow) {\n            _this3.keysToLeave.push(key);\n          }\n        } else if (!hasNext) {\n          _this3.keysToLeave.push(key);\n        }\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var keysToEnter = this.keysToEnter;\n      this.keysToEnter = [];\n      keysToEnter.forEach(this.performEnter);\n      var keysToLeave = this.keysToLeave;\n      this.keysToLeave = [];\n      keysToLeave.forEach(this.performLeave);\n    }\n  }, {\n    key: 'isValidChildByKey',\n    value: function isValidChildByKey(currentChildren, key) {\n      var showProp = this.props.showProp;\n      if (showProp) {\n        return findShownChildInChildrenByKey(currentChildren, key, showProp);\n      }\n      return findChildInChildrenByKey(currentChildren, key);\n    }\n  }, {\n    key: 'stop',\n    value: function stop(key) {\n      delete this.currentlyAnimatingKeys[key];\n      var component = this.childrenRefs[key];\n      if (component) {\n        component.stop();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var props = this.props;\n      this.nextProps = props;\n      var stateChildren = this.state.children;\n      var children = null;\n      if (stateChildren) {\n        children = stateChildren.map(function (child) {\n          if (child === null || child === undefined) {\n            return child;\n          }\n          if (!child.key) {\n            throw new Error('must set key for <rc-animate> children');\n          }\n          return react_default.a.createElement(\n            es_AnimateChild,\n            {\n              key: child.key,\n              ref: function ref(node) {\n                _this4.childrenRefs[child.key] = node;\n              },\n              animation: props.animation,\n              transitionName: props.transitionName,\n              transitionEnter: props.transitionEnter,\n              transitionAppear: props.transitionAppear,\n              transitionLeave: props.transitionLeave\n            },\n            child\n          );\n        });\n      }\n      var Component = props.component;\n      if (Component) {\n        var passedProps = props;\n        if (typeof Component === 'string') {\n          passedProps = extends_default()({\n            className: props.className,\n            style: props.style\n          }, props.componentProps);\n        }\n        return react_default.a.createElement(\n          Component,\n          passedProps,\n          children\n        );\n      }\n      return children[0] || null;\n    }\n  }]);\n\n  return Animate;\n}(react_default.a.Component);\n\nAnimate_Animate.isAnimate = true;\nAnimate_Animate.propTypes = {\n  component: prop_types_default.a.any,\n  componentProps: prop_types_default.a.object,\n  animation: prop_types_default.a.object,\n  transitionName: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object]),\n  transitionEnter: prop_types_default.a.bool,\n  transitionAppear: prop_types_default.a.bool,\n  exclusive: prop_types_default.a.bool,\n  transitionLeave: prop_types_default.a.bool,\n  onEnd: prop_types_default.a.func,\n  onEnter: prop_types_default.a.func,\n  onLeave: prop_types_default.a.func,\n  onAppear: prop_types_default.a.func,\n  showProp: prop_types_default.a.string,\n  children: prop_types_default.a.node\n};\nAnimate_Animate.defaultProps = {\n  animation: {},\n  component: 'span',\n  componentProps: {},\n  transitionEnter: true,\n  transitionLeave: true,\n  transitionAppear: false,\n  onEnd: noop,\n  onEnter: noop,\n  onLeave: noop,\n  onAppear: noop\n};\n\nvar Animate_initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.performEnter = function (key) {\n    // may already remove by exclusive\n    if (_this5.childrenRefs[key]) {\n      _this5.currentlyAnimatingKeys[key] = true;\n      _this5.childrenRefs[key].componentWillEnter(_this5.handleDoneAdding.bind(_this5, key, 'enter'));\n    }\n  };\n\n  this.performAppear = function (key) {\n    if (_this5.childrenRefs[key]) {\n      _this5.currentlyAnimatingKeys[key] = true;\n      _this5.childrenRefs[key].componentWillAppear(_this5.handleDoneAdding.bind(_this5, key, 'appear'));\n    }\n  };\n\n  this.handleDoneAdding = function (key, type) {\n    var props = _this5.props;\n    delete _this5.currentlyAnimatingKeys[key];\n    // if update on exclusive mode, skip check\n    if (props.exclusive && props !== _this5.nextProps) {\n      return;\n    }\n    var currentChildren = toArrayChildren(getChildrenFromProps(props));\n    if (!_this5.isValidChildByKey(currentChildren, key)) {\n      // exclusive will not need this\n      _this5.performLeave(key);\n    } else if (type === 'appear') {\n      if (animate.allowAppearCallback(props)) {\n        props.onAppear(key);\n        props.onEnd(key, true);\n      }\n    } else if (animate.allowEnterCallback(props)) {\n      props.onEnter(key);\n      props.onEnd(key, true);\n    }\n  };\n\n  this.performLeave = function (key) {\n    // may already remove by exclusive\n    if (_this5.childrenRefs[key]) {\n      _this5.currentlyAnimatingKeys[key] = true;\n      _this5.childrenRefs[key].componentWillLeave(_this5.handleDoneLeaving.bind(_this5, key));\n    }\n  };\n\n  this.handleDoneLeaving = function (key) {\n    var props = _this5.props;\n    delete _this5.currentlyAnimatingKeys[key];\n    // if update on exclusive mode, skip check\n    if (props.exclusive && props !== _this5.nextProps) {\n      return;\n    }\n    var currentChildren = toArrayChildren(getChildrenFromProps(props));\n    // in case state change is too fast\n    if (_this5.isValidChildByKey(currentChildren, key)) {\n      _this5.performEnter(key);\n    } else {\n      var end = function end() {\n        if (animate.allowLeaveCallback(props)) {\n          props.onLeave(key);\n          props.onEnd(key, false);\n        }\n      };\n      if (!isSameChildren(_this5.state.children, currentChildren, props.showProp)) {\n        _this5.setState({\n          children: currentChildren\n        }, end);\n      } else {\n        end();\n      }\n    }\n  };\n};\n\n/* harmony default export */ var es_Animate = (Animate_Animate);\n// CONCATENATED MODULE: ./node_modules/rc-trigger/es/LazyRenderBox.js\n\n\n\n\n\n\n\nvar LazyRenderBox_LazyRenderBox = function (_Component) {\n  inherits_default()(LazyRenderBox, _Component);\n\n  function LazyRenderBox() {\n    classCallCheck_default()(this, LazyRenderBox);\n\n    return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));\n  }\n\n  LazyRenderBox.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    return nextProps.hiddenClassName || nextProps.visible;\n  };\n\n  LazyRenderBox.prototype.render = function render() {\n    var _props = this.props,\n        hiddenClassName = _props.hiddenClassName,\n        visible = _props.visible,\n        props = objectWithoutProperties_default()(_props, ['hiddenClassName', 'visible']);\n\n    if (hiddenClassName || react_default.a.Children.count(props.children) > 1) {\n      if (!visible && hiddenClassName) {\n        props.className += ' ' + hiddenClassName;\n      }\n      return react_default.a.createElement('div', props);\n    }\n\n    return react_default.a.Children.only(props.children);\n  };\n\n  return LazyRenderBox;\n}(react[\"Component\"]);\n\nLazyRenderBox_LazyRenderBox.propTypes = {\n  children: prop_types_default.a.any,\n  className: prop_types_default.a.string,\n  visible: prop_types_default.a.bool,\n  hiddenClassName: prop_types_default.a.string\n};\n\n\n/* harmony default export */ var es_LazyRenderBox = (LazyRenderBox_LazyRenderBox);\n// CONCATENATED MODULE: ./node_modules/rc-trigger/es/PopupInner.js\n\n\n\n\n\n\n\nvar PopupInner_PopupInner = function (_Component) {\n  inherits_default()(PopupInner, _Component);\n\n  function PopupInner() {\n    classCallCheck_default()(this, PopupInner);\n\n    return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));\n  }\n\n  PopupInner.prototype.render = function render() {\n    var props = this.props;\n    var className = props.className;\n    if (!props.visible) {\n      className += ' ' + props.hiddenClassName;\n    }\n    return react_default.a.createElement(\n      'div',\n      {\n        className: className,\n        onMouseEnter: props.onMouseEnter,\n        onMouseLeave: props.onMouseLeave,\n        onMouseDown: props.onMouseDown,\n        onTouchStart: props.onTouchStart,\n        style: props.style\n      },\n      react_default.a.createElement(\n        es_LazyRenderBox,\n        { className: props.prefixCls + '-content', visible: props.visible },\n        props.children\n      )\n    );\n  };\n\n  return PopupInner;\n}(react[\"Component\"]);\n\nPopupInner_PopupInner.propTypes = {\n  hiddenClassName: prop_types_default.a.string,\n  className: prop_types_default.a.string,\n  prefixCls: prop_types_default.a.string,\n  onMouseEnter: prop_types_default.a.func,\n  onMouseLeave: prop_types_default.a.func,\n  onMouseDown: prop_types_default.a.func,\n  onTouchStart: prop_types_default.a.func,\n  children: prop_types_default.a.any\n};\n\n\n/* harmony default export */ var es_PopupInner = (PopupInner_PopupInner);\n// CONCATENATED MODULE: ./node_modules/rc-trigger/es/Popup.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Popup_Popup = function (_Component) {\n  inherits_default()(Popup, _Component);\n\n  function Popup(props) {\n    classCallCheck_default()(this, Popup);\n\n    var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));\n\n    Popup_initialiseProps.call(_this);\n\n    _this.state = {\n      // Used for stretch\n      stretchChecked: false,\n      targetWidth: undefined,\n      targetHeight: undefined\n    };\n\n    _this.savePopupRef = saveRef.bind(_this, 'popupInstance');\n    _this.saveAlignRef = saveRef.bind(_this, 'alignInstance');\n    return _this;\n  }\n\n  Popup.prototype.componentDidMount = function componentDidMount() {\n    this.rootNode = this.getPopupDomNode();\n    this.setStretchSize();\n  };\n\n  Popup.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setStretchSize();\n  };\n\n  // Record size if stretch needed\n\n\n  Popup.prototype.getPopupDomNode = function getPopupDomNode() {\n    return react_dom_default.a.findDOMNode(this.popupInstance);\n  };\n\n  // `target` on `rc-align` can accept as a function to get the bind element or a point.\n  // ref: https://www.npmjs.com/package/rc-align\n\n\n  Popup.prototype.getMaskTransitionName = function getMaskTransitionName() {\n    var props = this.props;\n    var transitionName = props.maskTransitionName;\n    var animation = props.maskAnimation;\n    if (!transitionName && animation) {\n      transitionName = props.prefixCls + '-' + animation;\n    }\n    return transitionName;\n  };\n\n  Popup.prototype.getTransitionName = function getTransitionName() {\n    var props = this.props;\n    var transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = props.prefixCls + '-' + props.animation;\n    }\n    return transitionName;\n  };\n\n  Popup.prototype.getClassName = function getClassName(currentAlignClassName) {\n    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;\n  };\n\n  Popup.prototype.getPopupElement = function getPopupElement() {\n    var _this2 = this;\n\n    var savePopupRef = this.savePopupRef;\n    var _state = this.state,\n        stretchChecked = _state.stretchChecked,\n        targetHeight = _state.targetHeight,\n        targetWidth = _state.targetWidth;\n    var _props = this.props,\n        align = _props.align,\n        visible = _props.visible,\n        prefixCls = _props.prefixCls,\n        style = _props.style,\n        getClassNameFromAlign = _props.getClassNameFromAlign,\n        destroyPopupOnHide = _props.destroyPopupOnHide,\n        stretch = _props.stretch,\n        children = _props.children,\n        onMouseEnter = _props.onMouseEnter,\n        onMouseLeave = _props.onMouseLeave,\n        onMouseDown = _props.onMouseDown,\n        onTouchStart = _props.onTouchStart;\n\n    var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));\n    var hiddenClassName = prefixCls + '-hidden';\n\n    if (!visible) {\n      this.currentAlignClassName = null;\n    }\n\n    var sizeStyle = {};\n    if (stretch) {\n      // Stretch with target\n      if (stretch.indexOf('height') !== -1) {\n        sizeStyle.height = targetHeight;\n      } else if (stretch.indexOf('minHeight') !== -1) {\n        sizeStyle.minHeight = targetHeight;\n      }\n      if (stretch.indexOf('width') !== -1) {\n        sizeStyle.width = targetWidth;\n      } else if (stretch.indexOf('minWidth') !== -1) {\n        sizeStyle.minWidth = targetWidth;\n      }\n\n      // Delay force align to makes ui smooth\n      if (!stretchChecked) {\n        sizeStyle.visibility = 'hidden';\n        setTimeout(function () {\n          if (_this2.alignInstance) {\n            _this2.alignInstance.forceAlign();\n          }\n        }, 0);\n      }\n    }\n\n    var newStyle = extends_default()({}, sizeStyle, style, this.getZIndexStyle());\n\n    var popupInnerProps = {\n      className: className,\n      prefixCls: prefixCls,\n      ref: savePopupRef,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onMouseDown: onMouseDown,\n      onTouchStart: onTouchStart,\n      style: newStyle\n    };\n    if (destroyPopupOnHide) {\n      return react_default.a.createElement(\n        es_Animate,\n        {\n          component: '',\n          exclusive: true,\n          transitionAppear: true,\n          transitionName: this.getTransitionName()\n        },\n        visible ? react_default.a.createElement(\n          rc_align_es,\n          {\n            target: this.getAlignTarget(),\n            key: 'popup',\n            ref: this.saveAlignRef,\n            monitorWindowResize: true,\n            align: align,\n            onAlign: this.onAlign\n          },\n          react_default.a.createElement(\n            es_PopupInner,\n            extends_default()({\n              visible: true\n            }, popupInnerProps),\n            children\n          )\n        ) : null\n      );\n    }\n\n    return react_default.a.createElement(\n      es_Animate,\n      {\n        component: '',\n        exclusive: true,\n        transitionAppear: true,\n        transitionName: this.getTransitionName(),\n        showProp: 'xVisible'\n      },\n      react_default.a.createElement(\n        rc_align_es,\n        {\n          target: this.getAlignTarget(),\n          key: 'popup',\n          ref: this.saveAlignRef,\n          monitorWindowResize: true,\n          xVisible: visible,\n          childrenProps: { visible: 'xVisible' },\n          disabled: !visible,\n          align: align,\n          onAlign: this.onAlign\n        },\n        react_default.a.createElement(\n          es_PopupInner,\n          extends_default()({\n            hiddenClassName: hiddenClassName\n          }, popupInnerProps),\n          children\n        )\n      )\n    );\n  };\n\n  Popup.prototype.getZIndexStyle = function getZIndexStyle() {\n    var style = {};\n    var props = this.props;\n    if (props.zIndex !== undefined) {\n      style.zIndex = props.zIndex;\n    }\n    return style;\n  };\n\n  Popup.prototype.getMaskElement = function getMaskElement() {\n    var props = this.props;\n    var maskElement = void 0;\n    if (props.mask) {\n      var maskTransition = this.getMaskTransitionName();\n      maskElement = react_default.a.createElement(es_LazyRenderBox, {\n        style: this.getZIndexStyle(),\n        key: 'mask',\n        className: props.prefixCls + '-mask',\n        hiddenClassName: props.prefixCls + '-mask-hidden',\n        visible: props.visible\n      });\n      if (maskTransition) {\n        maskElement = react_default.a.createElement(\n          es_Animate,\n          {\n            key: 'mask',\n            showProp: 'visible',\n            transitionAppear: true,\n            component: '',\n            transitionName: maskTransition\n          },\n          maskElement\n        );\n      }\n    }\n    return maskElement;\n  };\n\n  Popup.prototype.render = function render() {\n    return react_default.a.createElement(\n      'div',\n      null,\n      this.getMaskElement(),\n      this.getPopupElement()\n    );\n  };\n\n  return Popup;\n}(react[\"Component\"]);\n\nPopup_Popup.propTypes = {\n  visible: prop_types_default.a.bool,\n  style: prop_types_default.a.object,\n  getClassNameFromAlign: prop_types_default.a.func,\n  onAlign: prop_types_default.a.func,\n  getRootDomNode: prop_types_default.a.func,\n  align: prop_types_default.a.any,\n  destroyPopupOnHide: prop_types_default.a.bool,\n  className: prop_types_default.a.string,\n  prefixCls: prop_types_default.a.string,\n  onMouseEnter: prop_types_default.a.func,\n  onMouseLeave: prop_types_default.a.func,\n  onMouseDown: prop_types_default.a.func,\n  onTouchStart: prop_types_default.a.func,\n  stretch: prop_types_default.a.string,\n  children: prop_types_default.a.node,\n  point: prop_types_default.a.shape({\n    pageX: prop_types_default.a.number,\n    pageY: prop_types_default.a.number\n  })\n};\n\nvar Popup_initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onAlign = function (popupDomNode, align) {\n    var props = _this3.props;\n    var currentAlignClassName = props.getClassNameFromAlign(align);\n    // FIX: https://github.com/react-component/trigger/issues/56\n    // FIX: https://github.com/react-component/tooltip/issues/79\n    if (_this3.currentAlignClassName !== currentAlignClassName) {\n      _this3.currentAlignClassName = currentAlignClassName;\n      popupDomNode.className = _this3.getClassName(currentAlignClassName);\n    }\n    props.onAlign(popupDomNode, align);\n  };\n\n  this.setStretchSize = function () {\n    var _props2 = _this3.props,\n        stretch = _props2.stretch,\n        getRootDomNode = _props2.getRootDomNode,\n        visible = _props2.visible;\n    var _state2 = _this3.state,\n        stretchChecked = _state2.stretchChecked,\n        targetHeight = _state2.targetHeight,\n        targetWidth = _state2.targetWidth;\n\n\n    if (!stretch || !visible) {\n      if (stretchChecked) {\n        _this3.setState({ stretchChecked: false });\n      }\n      return;\n    }\n\n    var $ele = getRootDomNode();\n    if (!$ele) return;\n\n    var height = $ele.offsetHeight;\n    var width = $ele.offsetWidth;\n\n    if (targetHeight !== height || targetWidth !== width || !stretchChecked) {\n      _this3.setState({\n        stretchChecked: true,\n        targetHeight: height,\n        targetWidth: width\n      });\n    }\n  };\n\n  this.getTargetElement = function () {\n    return _this3.props.getRootDomNode();\n  };\n\n  this.getAlignTarget = function () {\n    var point = _this3.props.point;\n\n    if (point) {\n      return point;\n    }\n    return _this3.getTargetElement;\n  };\n};\n\n/* harmony default export */ var es_Popup = (Popup_Popup);\n// CONCATENATED MODULE: ./node_modules/rc-trigger/es/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction es_noop() {}\n\nfunction returnEmptyString() {\n  return '';\n}\n\nfunction returnDocument() {\n  return window.document;\n}\n\nvar ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur', 'onContextMenu'];\n\nvar IS_REACT_16 = !!react_dom[\"createPortal\"];\n\nvar contextTypes = {\n  rcTrigger: prop_types_default.a.shape({\n    onPopupMouseDown: prop_types_default.a.func\n  })\n};\n\nvar es_Trigger = function (_React$Component) {\n  inherits_default()(Trigger, _React$Component);\n\n  function Trigger(props) {\n    classCallCheck_default()(this, Trigger);\n\n    var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));\n\n    es_initialiseProps.call(_this);\n\n    var popupVisible = void 0;\n    if ('popupVisible' in props) {\n      popupVisible = !!props.popupVisible;\n    } else {\n      popupVisible = !!props.defaultPopupVisible;\n    }\n\n    _this.prevPopupVisible = popupVisible;\n\n    _this.state = {\n      popupVisible: popupVisible\n    };\n    return _this;\n  }\n\n  Trigger.prototype.getChildContext = function getChildContext() {\n    return {\n      rcTrigger: {\n        onPopupMouseDown: this.onPopupMouseDown\n      }\n    };\n  };\n\n  Trigger.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    ALL_HANDLERS.forEach(function (h) {\n      _this2['fire' + h] = function (e) {\n        _this2.fireEvents(h, e);\n      };\n    });\n  };\n\n  Trigger.prototype.componentDidMount = function componentDidMount() {\n    this.componentDidUpdate({}, {\n      popupVisible: this.state.popupVisible\n    });\n  };\n\n  Trigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref) {\n    var popupVisible = _ref.popupVisible;\n\n    if (popupVisible !== undefined) {\n      this.setState({\n        popupVisible: popupVisible\n      });\n    }\n  };\n\n  Trigger.prototype.componentDidUpdate = function componentDidUpdate(_, prevState) {\n    var props = this.props;\n    var state = this.state;\n    var triggerAfterPopupVisibleChange = function triggerAfterPopupVisibleChange() {\n      if (prevState.popupVisible !== state.popupVisible) {\n        props.afterPopupVisibleChange(state.popupVisible);\n      }\n    };\n    if (!IS_REACT_16) {\n      this.renderComponent(null, triggerAfterPopupVisibleChange);\n    }\n\n    this.prevPopupVisible = prevState.popupVisible;\n\n    // We must listen to `mousedown` or `touchstart`, edge case:\n    // https://github.com/ant-design/ant-design/issues/5804\n    // https://github.com/react-component/calendar/issues/250\n    // https://github.com/react-component/trigger/issues/50\n    if (state.popupVisible) {\n      var currentDocument = void 0;\n      if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextMenuToShow())) {\n        currentDocument = props.getDocument();\n        this.clickOutsideHandler = addEventListenerWrap(currentDocument, 'mousedown', this.onDocumentClick);\n      }\n      // always hide on mobile\n      if (!this.touchOutsideHandler) {\n        currentDocument = currentDocument || props.getDocument();\n        this.touchOutsideHandler = addEventListenerWrap(currentDocument, 'touchstart', this.onDocumentClick);\n      }\n      // close popup when trigger type contains 'onContextMenu' and document is scrolling.\n      if (!this.contextMenuOutsideHandler1 && this.isContextMenuToShow()) {\n        currentDocument = currentDocument || props.getDocument();\n        this.contextMenuOutsideHandler1 = addEventListenerWrap(currentDocument, 'scroll', this.onContextMenuClose);\n      }\n      // close popup when trigger type contains 'onContextMenu' and window is blur.\n      if (!this.contextMenuOutsideHandler2 && this.isContextMenuToShow()) {\n        this.contextMenuOutsideHandler2 = addEventListenerWrap(window, 'blur', this.onContextMenuClose);\n      }\n      return;\n    }\n\n    this.clearOutsideHandler();\n  };\n\n  Trigger.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.clearDelayTimer();\n    this.clearOutsideHandler();\n    clearTimeout(this.mouseDownTimeout);\n  };\n\n  Trigger.prototype.getPopupDomNode = function getPopupDomNode() {\n    // for test\n    if (this._component && this._component.getPopupDomNode) {\n      return this._component.getPopupDomNode();\n    }\n    return null;\n  };\n\n  Trigger.prototype.getPopupAlign = function getPopupAlign() {\n    var props = this.props;\n    var popupPlacement = props.popupPlacement,\n        popupAlign = props.popupAlign,\n        builtinPlacements = props.builtinPlacements;\n\n    if (popupPlacement && builtinPlacements) {\n      return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);\n    }\n    return popupAlign;\n  };\n\n  /**\n   * @param popupVisible    Show or not the popup element\n   * @param event           SyntheticEvent, used for `pointAlign`\n   */\n  Trigger.prototype.setPopupVisible = function setPopupVisible(popupVisible, event) {\n    var alignPoint = this.props.alignPoint;\n\n\n    this.clearDelayTimer();\n\n    if (this.state.popupVisible !== popupVisible) {\n      if (!('popupVisible' in this.props)) {\n        this.setState({ popupVisible: popupVisible });\n      }\n      this.props.onPopupVisibleChange(popupVisible);\n    }\n\n    // Always record the point position since mouseEnterDelay will delay the show\n    if (alignPoint && event) {\n      this.setPoint(event);\n    }\n  };\n\n  Trigger.prototype.delaySetPopupVisible = function delaySetPopupVisible(visible, delayS, event) {\n    var _this3 = this;\n\n    var delay = delayS * 1000;\n    this.clearDelayTimer();\n    if (delay) {\n      var point = event ? { pageX: event.pageX, pageY: event.pageY } : null;\n      this.delayTimer = setTimeout(function () {\n        _this3.setPopupVisible(visible, point);\n        _this3.clearDelayTimer();\n      }, delay);\n    } else {\n      this.setPopupVisible(visible, event);\n    }\n  };\n\n  Trigger.prototype.clearDelayTimer = function clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  };\n\n  Trigger.prototype.clearOutsideHandler = function clearOutsideHandler() {\n    if (this.clickOutsideHandler) {\n      this.clickOutsideHandler.remove();\n      this.clickOutsideHandler = null;\n    }\n\n    if (this.contextMenuOutsideHandler1) {\n      this.contextMenuOutsideHandler1.remove();\n      this.contextMenuOutsideHandler1 = null;\n    }\n\n    if (this.contextMenuOutsideHandler2) {\n      this.contextMenuOutsideHandler2.remove();\n      this.contextMenuOutsideHandler2 = null;\n    }\n\n    if (this.touchOutsideHandler) {\n      this.touchOutsideHandler.remove();\n      this.touchOutsideHandler = null;\n    }\n  };\n\n  Trigger.prototype.createTwoChains = function createTwoChains(event) {\n    var childPros = this.props.children.props;\n    var props = this.props;\n    if (childPros[event] && props[event]) {\n      return this['fire' + event];\n    }\n    return childPros[event] || props[event];\n  };\n\n  Trigger.prototype.isClickToShow = function isClickToShow() {\n    var _props = this.props,\n        action = _props.action,\n        showAction = _props.showAction;\n\n    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;\n  };\n\n  Trigger.prototype.isContextMenuToShow = function isContextMenuToShow() {\n    var _props2 = this.props,\n        action = _props2.action,\n        showAction = _props2.showAction;\n\n    return action.indexOf('contextMenu') !== -1 || showAction.indexOf('contextMenu') !== -1;\n  };\n\n  Trigger.prototype.isClickToHide = function isClickToHide() {\n    var _props3 = this.props,\n        action = _props3.action,\n        hideAction = _props3.hideAction;\n\n    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;\n  };\n\n  Trigger.prototype.isMouseEnterToShow = function isMouseEnterToShow() {\n    var _props4 = this.props,\n        action = _props4.action,\n        showAction = _props4.showAction;\n\n    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;\n  };\n\n  Trigger.prototype.isMouseLeaveToHide = function isMouseLeaveToHide() {\n    var _props5 = this.props,\n        action = _props5.action,\n        hideAction = _props5.hideAction;\n\n    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;\n  };\n\n  Trigger.prototype.isFocusToShow = function isFocusToShow() {\n    var _props6 = this.props,\n        action = _props6.action,\n        showAction = _props6.showAction;\n\n    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;\n  };\n\n  Trigger.prototype.isBlurToHide = function isBlurToHide() {\n    var _props7 = this.props,\n        action = _props7.action,\n        hideAction = _props7.hideAction;\n\n    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;\n  };\n\n  Trigger.prototype.forcePopupAlign = function forcePopupAlign() {\n    if (this.state.popupVisible && this._component && this._component.alignInstance) {\n      this._component.alignInstance.forceAlign();\n    }\n  };\n\n  Trigger.prototype.fireEvents = function fireEvents(type, e) {\n    var childCallback = this.props.children.props[type];\n    if (childCallback) {\n      childCallback(e);\n    }\n    var callback = this.props[type];\n    if (callback) {\n      callback(e);\n    }\n  };\n\n  Trigger.prototype.close = function close() {\n    this.setPopupVisible(false);\n  };\n\n  Trigger.prototype.render = function render() {\n    var _this4 = this;\n\n    var popupVisible = this.state.popupVisible;\n    var _props8 = this.props,\n        children = _props8.children,\n        forceRender = _props8.forceRender,\n        alignPoint = _props8.alignPoint,\n        className = _props8.className;\n\n    var child = react_default.a.Children.only(children);\n    var newChildProps = { key: 'trigger' };\n\n    if (this.isContextMenuToShow()) {\n      newChildProps.onContextMenu = this.onContextMenu;\n    } else {\n      newChildProps.onContextMenu = this.createTwoChains('onContextMenu');\n    }\n\n    if (this.isClickToHide() || this.isClickToShow()) {\n      newChildProps.onClick = this.onClick;\n      newChildProps.onMouseDown = this.onMouseDown;\n      newChildProps.onTouchStart = this.onTouchStart;\n    } else {\n      newChildProps.onClick = this.createTwoChains('onClick');\n      newChildProps.onMouseDown = this.createTwoChains('onMouseDown');\n      newChildProps.onTouchStart = this.createTwoChains('onTouchStart');\n    }\n    if (this.isMouseEnterToShow()) {\n      newChildProps.onMouseEnter = this.onMouseEnter;\n      if (alignPoint) {\n        newChildProps.onMouseMove = this.onMouseMove;\n      }\n    } else {\n      newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');\n    }\n    if (this.isMouseLeaveToHide()) {\n      newChildProps.onMouseLeave = this.onMouseLeave;\n    } else {\n      newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');\n    }\n    if (this.isFocusToShow() || this.isBlurToHide()) {\n      newChildProps.onFocus = this.onFocus;\n      newChildProps.onBlur = this.onBlur;\n    } else {\n      newChildProps.onFocus = this.createTwoChains('onFocus');\n      newChildProps.onBlur = this.createTwoChains('onBlur');\n    }\n\n    var childrenClassName = classnames_default()(child && child.props && child.props.className, className);\n    if (childrenClassName) {\n      newChildProps.className = childrenClassName;\n    }\n    var trigger = react_default.a.cloneElement(child, newChildProps);\n\n    if (!IS_REACT_16) {\n      return react_default.a.createElement(\n        es_ContainerRender,\n        {\n          parent: this,\n          visible: popupVisible,\n          autoMount: false,\n          forceRender: forceRender,\n          getComponent: this.getComponent,\n          getContainer: this.getContainer\n        },\n        function (_ref2) {\n          var renderComponent = _ref2.renderComponent;\n\n          _this4.renderComponent = renderComponent;\n          return trigger;\n        }\n      );\n    }\n\n    var portal = void 0;\n    // prevent unmounting after it's rendered\n    if (popupVisible || this._component || forceRender) {\n      portal = react_default.a.createElement(\n        es_Portal,\n        {\n          key: 'portal',\n          getContainer: this.getContainer,\n          didUpdate: this.handlePortalUpdate\n        },\n        this.getComponent()\n      );\n    }\n\n    return [trigger, portal];\n  };\n\n  return Trigger;\n}(react_default.a.Component);\n\nes_Trigger.propTypes = {\n  children: prop_types_default.a.any,\n  action: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.arrayOf(prop_types_default.a.string)]),\n  showAction: prop_types_default.a.any,\n  hideAction: prop_types_default.a.any,\n  getPopupClassNameFromAlign: prop_types_default.a.any,\n  onPopupVisibleChange: prop_types_default.a.func,\n  afterPopupVisibleChange: prop_types_default.a.func,\n  popup: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.func]).isRequired,\n  popupStyle: prop_types_default.a.object,\n  prefixCls: prop_types_default.a.string,\n  popupClassName: prop_types_default.a.string,\n  className: prop_types_default.a.string,\n  popupPlacement: prop_types_default.a.string,\n  builtinPlacements: prop_types_default.a.object,\n  popupTransitionName: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object]),\n  popupAnimation: prop_types_default.a.any,\n  mouseEnterDelay: prop_types_default.a.number,\n  mouseLeaveDelay: prop_types_default.a.number,\n  zIndex: prop_types_default.a.number,\n  focusDelay: prop_types_default.a.number,\n  blurDelay: prop_types_default.a.number,\n  getPopupContainer: prop_types_default.a.func,\n  getDocument: prop_types_default.a.func,\n  forceRender: prop_types_default.a.bool,\n  destroyPopupOnHide: prop_types_default.a.bool,\n  mask: prop_types_default.a.bool,\n  maskClosable: prop_types_default.a.bool,\n  onPopupAlign: prop_types_default.a.func,\n  popupAlign: prop_types_default.a.object,\n  popupVisible: prop_types_default.a.bool,\n  defaultPopupVisible: prop_types_default.a.bool,\n  maskTransitionName: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object]),\n  maskAnimation: prop_types_default.a.string,\n  stretch: prop_types_default.a.string,\n  alignPoint: prop_types_default.a.bool // Maybe we can support user pass position in the future\n};\nes_Trigger.contextTypes = contextTypes;\nes_Trigger.childContextTypes = contextTypes;\nes_Trigger.defaultProps = {\n  prefixCls: 'rc-trigger-popup',\n  getPopupClassNameFromAlign: returnEmptyString,\n  getDocument: returnDocument,\n  onPopupVisibleChange: es_noop,\n  afterPopupVisibleChange: es_noop,\n  onPopupAlign: es_noop,\n  popupClassName: '',\n  mouseEnterDelay: 0,\n  mouseLeaveDelay: 0.1,\n  focusDelay: 0,\n  blurDelay: 0.15,\n  popupStyle: {},\n  destroyPopupOnHide: false,\n  popupAlign: {},\n  defaultPopupVisible: false,\n  mask: false,\n  maskClosable: true,\n  action: [],\n  showAction: [],\n  hideAction: []\n};\n\nvar es_initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.onMouseEnter = function (e) {\n    var mouseEnterDelay = _this5.props.mouseEnterDelay;\n\n    _this5.fireEvents('onMouseEnter', e);\n    _this5.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);\n  };\n\n  this.onMouseMove = function (e) {\n    _this5.fireEvents('onMouseMove', e);\n    _this5.setPoint(e);\n  };\n\n  this.onMouseLeave = function (e) {\n    _this5.fireEvents('onMouseLeave', e);\n    _this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay);\n  };\n\n  this.onPopupMouseEnter = function () {\n    _this5.clearDelayTimer();\n  };\n\n  this.onPopupMouseLeave = function (e) {\n    // https://github.com/react-component/trigger/pull/13\n    // react bug?\n    if (e.relatedTarget && !e.relatedTarget.setTimeout && _this5._component && _this5._component.getPopupDomNode && contains(_this5._component.getPopupDomNode(), e.relatedTarget)) {\n      return;\n    }\n    _this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay);\n  };\n\n  this.onFocus = function (e) {\n    _this5.fireEvents('onFocus', e);\n    // incase focusin and focusout\n    _this5.clearDelayTimer();\n    if (_this5.isFocusToShow()) {\n      _this5.focusTime = Date.now();\n      _this5.delaySetPopupVisible(true, _this5.props.focusDelay);\n    }\n  };\n\n  this.onMouseDown = function (e) {\n    _this5.fireEvents('onMouseDown', e);\n    _this5.preClickTime = Date.now();\n  };\n\n  this.onTouchStart = function (e) {\n    _this5.fireEvents('onTouchStart', e);\n    _this5.preTouchTime = Date.now();\n  };\n\n  this.onBlur = function (e) {\n    _this5.fireEvents('onBlur', e);\n    _this5.clearDelayTimer();\n    if (_this5.isBlurToHide()) {\n      _this5.delaySetPopupVisible(false, _this5.props.blurDelay);\n    }\n  };\n\n  this.onContextMenu = function (e) {\n    e.preventDefault();\n    _this5.fireEvents('onContextMenu', e);\n    _this5.setPopupVisible(true, e);\n  };\n\n  this.onContextMenuClose = function () {\n    if (_this5.isContextMenuToShow()) {\n      _this5.close();\n    }\n  };\n\n  this.onClick = function (event) {\n    _this5.fireEvents('onClick', event);\n    // focus will trigger click\n    if (_this5.focusTime) {\n      var preTime = void 0;\n      if (_this5.preClickTime && _this5.preTouchTime) {\n        preTime = Math.min(_this5.preClickTime, _this5.preTouchTime);\n      } else if (_this5.preClickTime) {\n        preTime = _this5.preClickTime;\n      } else if (_this5.preTouchTime) {\n        preTime = _this5.preTouchTime;\n      }\n      if (Math.abs(preTime - _this5.focusTime) < 20) {\n        return;\n      }\n      _this5.focusTime = 0;\n    }\n    _this5.preClickTime = 0;\n    _this5.preTouchTime = 0;\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    var nextVisible = !_this5.state.popupVisible;\n    if (_this5.isClickToHide() && !nextVisible || nextVisible && _this5.isClickToShow()) {\n      _this5.setPopupVisible(!_this5.state.popupVisible, event);\n    }\n  };\n\n  this.onPopupMouseDown = function () {\n    var _context$rcTrigger = _this5.context.rcTrigger,\n        rcTrigger = _context$rcTrigger === undefined ? {} : _context$rcTrigger;\n\n    _this5.hasPopupMouseDown = true;\n\n    clearTimeout(_this5.mouseDownTimeout);\n    _this5.mouseDownTimeout = setTimeout(function () {\n      _this5.hasPopupMouseDown = false;\n    }, 0);\n\n    if (rcTrigger.onPopupMouseDown) {\n      rcTrigger.onPopupMouseDown.apply(rcTrigger, arguments);\n    }\n  };\n\n  this.onDocumentClick = function (event) {\n    if (_this5.props.mask && !_this5.props.maskClosable) {\n      return;\n    }\n\n    var target = event.target;\n    var root = Object(react_dom[\"findDOMNode\"])(_this5);\n    if (!contains(root, target) && !_this5.hasPopupMouseDown) {\n      _this5.close();\n    }\n  };\n\n  this.getRootDomNode = function () {\n    return Object(react_dom[\"findDOMNode\"])(_this5);\n  };\n\n  this.getPopupClassNameFromAlign = function (align) {\n    var className = [];\n    var _props9 = _this5.props,\n        popupPlacement = _props9.popupPlacement,\n        builtinPlacements = _props9.builtinPlacements,\n        prefixCls = _props9.prefixCls,\n        alignPoint = _props9.alignPoint,\n        getPopupClassNameFromAlign = _props9.getPopupClassNameFromAlign;\n\n    if (popupPlacement && builtinPlacements) {\n      className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint));\n    }\n    if (getPopupClassNameFromAlign) {\n      className.push(getPopupClassNameFromAlign(align));\n    }\n    return className.join(' ');\n  };\n\n  this.getComponent = function () {\n    var _props10 = _this5.props,\n        prefixCls = _props10.prefixCls,\n        destroyPopupOnHide = _props10.destroyPopupOnHide,\n        popupClassName = _props10.popupClassName,\n        action = _props10.action,\n        onPopupAlign = _props10.onPopupAlign,\n        popupAnimation = _props10.popupAnimation,\n        popupTransitionName = _props10.popupTransitionName,\n        popupStyle = _props10.popupStyle,\n        mask = _props10.mask,\n        maskAnimation = _props10.maskAnimation,\n        maskTransitionName = _props10.maskTransitionName,\n        zIndex = _props10.zIndex,\n        popup = _props10.popup,\n        stretch = _props10.stretch,\n        alignPoint = _props10.alignPoint;\n    var _state = _this5.state,\n        popupVisible = _state.popupVisible,\n        point = _state.point;\n\n\n    var align = _this5.getPopupAlign();\n\n    var mouseProps = {};\n    if (_this5.isMouseEnterToShow()) {\n      mouseProps.onMouseEnter = _this5.onPopupMouseEnter;\n    }\n    if (_this5.isMouseLeaveToHide()) {\n      mouseProps.onMouseLeave = _this5.onPopupMouseLeave;\n    }\n\n    mouseProps.onMouseDown = _this5.onPopupMouseDown;\n    mouseProps.onTouchStart = _this5.onPopupMouseDown;\n\n    return react_default.a.createElement(\n      es_Popup,\n      extends_default()({\n        prefixCls: prefixCls,\n        destroyPopupOnHide: destroyPopupOnHide,\n        visible: popupVisible,\n        point: alignPoint && point,\n        className: popupClassName,\n        action: action,\n        align: align,\n        onAlign: onPopupAlign,\n        animation: popupAnimation,\n        getClassNameFromAlign: _this5.getPopupClassNameFromAlign\n      }, mouseProps, {\n        stretch: stretch,\n        getRootDomNode: _this5.getRootDomNode,\n        style: popupStyle,\n        mask: mask,\n        zIndex: zIndex,\n        transitionName: popupTransitionName,\n        maskAnimation: maskAnimation,\n        maskTransitionName: maskTransitionName,\n        ref: _this5.savePopup\n      }),\n      typeof popup === 'function' ? popup() : popup\n    );\n  };\n\n  this.getContainer = function () {\n    var props = _this5.props;\n\n    var popupContainer = document.createElement('div');\n    // Make sure default popup container will never cause scrollbar appearing\n    // https://github.com/react-component/trigger/issues/41\n    popupContainer.style.position = 'absolute';\n    popupContainer.style.top = '0';\n    popupContainer.style.left = '0';\n    popupContainer.style.width = '100%';\n    var mountNode = props.getPopupContainer ? props.getPopupContainer(Object(react_dom[\"findDOMNode\"])(_this5)) : props.getDocument().body;\n    mountNode.appendChild(popupContainer);\n    return popupContainer;\n  };\n\n  this.setPoint = function (point) {\n    var alignPoint = _this5.props.alignPoint;\n\n    if (!alignPoint || !point) return;\n\n    _this5.setState({\n      point: {\n        pageX: point.pageX,\n        pageY: point.pageY\n      }\n    });\n  };\n\n  this.handlePortalUpdate = function () {\n    if (_this5.prevPopupVisible !== _this5.state.popupVisible) {\n      _this5.props.afterPopupVisibleChange(_this5.state.popupVisible);\n    }\n  };\n\n  this.savePopup = function (node) {\n    _this5._component = node;\n  };\n};\n\n/* harmony default export */ var rc_trigger_es = (es_Trigger);\n// CONCATENATED MODULE: ./node_modules/rc-tooltip/es/placements.js\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\n\nvar placements_targetOffset = [0, 0];\n\nvar placements = {\n  left: {\n    points: ['cr', 'cl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: placements_targetOffset\n  },\n  right: {\n    points: ['cl', 'cr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: placements_targetOffset\n  },\n  top: {\n    points: ['bc', 'tc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: placements_targetOffset\n  },\n  bottom: {\n    points: ['tc', 'bc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: placements_targetOffset\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: placements_targetOffset\n  },\n  leftTop: {\n    points: ['tr', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: placements_targetOffset\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: placements_targetOffset\n  },\n  rightTop: {\n    points: ['tl', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: placements_targetOffset\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: placements_targetOffset\n  },\n  rightBottom: {\n    points: ['bl', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: placements_targetOffset\n  },\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: placements_targetOffset\n  },\n  leftBottom: {\n    points: ['br', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: placements_targetOffset\n  }\n};\n\n/* harmony default export */ var es_placements = (placements);\n// CONCATENATED MODULE: ./node_modules/rc-tooltip/es/Content.js\n\n\n\n\n\n\nvar Content_Content = function (_React$Component) {\n  inherits_default()(Content, _React$Component);\n\n  function Content() {\n    classCallCheck_default()(this, Content);\n\n    return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));\n  }\n\n  Content.prototype.componentDidUpdate = function componentDidUpdate() {\n    var trigger = this.props.trigger;\n\n    if (trigger) {\n      trigger.forcePopupAlign();\n    }\n  };\n\n  Content.prototype.render = function render() {\n    var _props = this.props,\n        overlay = _props.overlay,\n        prefixCls = _props.prefixCls,\n        id = _props.id;\n\n    return react_default.a.createElement(\n      'div',\n      { className: prefixCls + '-inner', id: id, role: 'tooltip' },\n      typeof overlay === 'function' ? overlay() : overlay\n    );\n  };\n\n  return Content;\n}(react_default.a.Component);\n\nContent_Content.propTypes = {\n  prefixCls: prop_types_default.a.string,\n  overlay: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.func]).isRequired,\n  id: prop_types_default.a.string,\n  trigger: prop_types_default.a.any\n};\n/* harmony default export */ var es_Content = (Content_Content);\n// CONCATENATED MODULE: ./node_modules/rc-tooltip/es/Tooltip.js\n\n\n\n\n\n\n\n\n\n\n\nvar Tooltip_Tooltip = function (_Component) {\n  inherits_default()(Tooltip, _Component);\n\n  function Tooltip() {\n    var _temp, _this, _ret;\n\n    classCallCheck_default()(this, Tooltip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getPopupElement = function () {\n      var _this$props = _this.props,\n          arrowContent = _this$props.arrowContent,\n          overlay = _this$props.overlay,\n          prefixCls = _this$props.prefixCls,\n          id = _this$props.id;\n\n      return [react_default.a.createElement(\n        'div',\n        { className: prefixCls + '-arrow', key: 'arrow' },\n        arrowContent\n      ), react_default.a.createElement(es_Content, {\n        key: 'content',\n        trigger: _this.trigger,\n        prefixCls: prefixCls,\n        id: id,\n        overlay: overlay\n      })];\n    }, _this.saveTrigger = function (node) {\n      _this.trigger = node;\n    }, _temp), possibleConstructorReturn_default()(_this, _ret);\n  }\n\n  Tooltip.prototype.getPopupDomNode = function getPopupDomNode() {\n    return this.trigger.getPopupDomNode();\n  };\n\n  Tooltip.prototype.render = function render() {\n    var _props = this.props,\n        overlayClassName = _props.overlayClassName,\n        trigger = _props.trigger,\n        mouseEnterDelay = _props.mouseEnterDelay,\n        mouseLeaveDelay = _props.mouseLeaveDelay,\n        overlayStyle = _props.overlayStyle,\n        prefixCls = _props.prefixCls,\n        children = _props.children,\n        onVisibleChange = _props.onVisibleChange,\n        afterVisibleChange = _props.afterVisibleChange,\n        transitionName = _props.transitionName,\n        animation = _props.animation,\n        placement = _props.placement,\n        align = _props.align,\n        destroyTooltipOnHide = _props.destroyTooltipOnHide,\n        defaultVisible = _props.defaultVisible,\n        getTooltipContainer = _props.getTooltipContainer,\n        restProps = objectWithoutProperties_default()(_props, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'children', 'onVisibleChange', 'afterVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);\n\n    var extraProps = extends_default()({}, restProps);\n    if ('visible' in this.props) {\n      extraProps.popupVisible = this.props.visible;\n    }\n    return react_default.a.createElement(\n      rc_trigger_es,\n      extends_default()({\n        popupClassName: overlayClassName,\n        ref: this.saveTrigger,\n        prefixCls: prefixCls,\n        popup: this.getPopupElement,\n        action: trigger,\n        builtinPlacements: placements,\n        popupPlacement: placement,\n        popupAlign: align,\n        getPopupContainer: getTooltipContainer,\n        onPopupVisibleChange: onVisibleChange,\n        afterPopupVisibleChange: afterVisibleChange,\n        popupTransitionName: transitionName,\n        popupAnimation: animation,\n        defaultPopupVisible: defaultVisible,\n        destroyPopupOnHide: destroyTooltipOnHide,\n        mouseLeaveDelay: mouseLeaveDelay,\n        popupStyle: overlayStyle,\n        mouseEnterDelay: mouseEnterDelay\n      }, extraProps),\n      children\n    );\n  };\n\n  return Tooltip;\n}(react[\"Component\"]);\n\nTooltip_Tooltip.propTypes = {\n  trigger: prop_types_default.a.any,\n  children: prop_types_default.a.any,\n  defaultVisible: prop_types_default.a.bool,\n  visible: prop_types_default.a.bool,\n  placement: prop_types_default.a.string,\n  transitionName: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object]),\n  animation: prop_types_default.a.any,\n  onVisibleChange: prop_types_default.a.func,\n  afterVisibleChange: prop_types_default.a.func,\n  overlay: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.func]).isRequired,\n  overlayStyle: prop_types_default.a.object,\n  overlayClassName: prop_types_default.a.string,\n  prefixCls: prop_types_default.a.string,\n  mouseEnterDelay: prop_types_default.a.number,\n  mouseLeaveDelay: prop_types_default.a.number,\n  getTooltipContainer: prop_types_default.a.func,\n  destroyTooltipOnHide: prop_types_default.a.bool,\n  align: prop_types_default.a.object,\n  arrowContent: prop_types_default.a.any,\n  id: prop_types_default.a.string\n};\nTooltip_Tooltip.defaultProps = {\n  prefixCls: 'rc-tooltip',\n  mouseEnterDelay: 0,\n  destroyTooltipOnHide: false,\n  mouseLeaveDelay: 0.1,\n  align: {},\n  placement: 'right',\n  trigger: ['hover'],\n  arrowContent: null\n};\n\n\n/* harmony default export */ var es_Tooltip = (Tooltip_Tooltip);\n// CONCATENATED MODULE: ./node_modules/rc-tooltip/es/index.js\n\n\n/* harmony default export */ var rc_tooltip_es = __webpack_exports__[\"default\"] = (es_Tooltip);\n\n//# sourceURL=webpack:///./node_modules/rc-tooltip/es/index.js_+_34_modules?")},,,,,,,function(module,exports){eval('module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?')},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval('(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})((typeof self !== \'undefined\' ? self : this), function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/katex.less\nvar katex = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/SourceLocation.js\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nvar SourceLocation =\n/*#__PURE__*/\nfunction () {\n  // The + prefix indicates that these fields aren\'t writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  function SourceLocation(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one\'s location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  SourceLocation.range = function range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  };\n\n  return SourceLocation;\n}();\n\n\n// CONCATENATED MODULE: ./src/Token.js\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nvar Token_Token =\n/*#__PURE__*/\nfunction () {\n  function Token(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.range = function range(endToken, // last token of the range, inclusive\n  text) // the text of the newly constructed token\n  {\n    return new Token(text, SourceLocation.range(this, endToken));\n  };\n\n  return Token;\n}();\n// CONCATENATED MODULE: ./src/ParseError.js\n\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nvar ParseError = // Error position based on passed-in Token or ParseNode.\nfunction ParseError(message, // The error message\ntoken) // An object providing position information\n{\n  this.position = void 0;\n  var error = "KaTeX parse error: " + message;\n  var start;\n  var loc = token && token.loc;\n\n  if (loc && loc.start <= loc.end) {\n    // If we have the input and a position, make the error a bit fancier\n    // Get the input\n    var input = loc.lexer.input; // Prepend some information\n\n    start = loc.start;\n    var end = loc.end;\n\n    if (start === input.length) {\n      error += " at end of input: ";\n    } else {\n      error += " at position " + (start + 1) + ": ";\n    } // Underline token in question using combining underscores\n\n\n    var underlined = input.slice(start, end).replace(/[^]/g, "$&\\u0332"); // Extract some context from the input and add it to the error\n\n    var left;\n\n    if (start > 15) {\n      left = "…" + input.slice(start - 15, start);\n    } else {\n      left = input.slice(0, start);\n    }\n\n    var right;\n\n    if (end + 15 < input.length) {\n      right = input.slice(end, end + 15) + "…";\n    } else {\n      right = input.slice(end);\n    }\n\n    error += left + underlined + right;\n  } // Some hackery to make ParseError a prototype of Error\n  // See http://stackoverflow.com/a/8460753\n\n\n  var self = new Error(error);\n  self.name = "ParseError"; // $FlowFixMe\n\n  self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n  self.position = start;\n  return self;\n}; // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n/* harmony default export */ var src_ParseError = (ParseError);\n// CONCATENATED MODULE: ./src/utils.js\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn\'t use `T` as the output type due to facebook/flow#5022.\n */\n\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook\'s React under Apache 2 license\n\n\nvar uppercase = /([A-Z])/g;\n\nvar hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, "-$1").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  "&": "&amp;",\n  ">": "&gt;",\n  "<": "&lt;",\n  "\\"": "&quot;",\n  "\'": "&#x27;"\n};\nvar ESCAPE_REGEX = /[&><"\']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction utils_escape(text) {\n  return String(text).replace(ESCAPE_REGEX, function (match) {\n    return ESCAPE_LOOKUP[match];\n  });\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nvar getBaseElem = function getBaseElem(group) {\n  if (group.type === "ordgroup") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === "color") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === "font") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference "character boxes", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nvar utils_isCharacterBox = function isCharacterBox(group) {\n  var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === "mathord" || baseElem.type === "textord" || baseElem.type === "atom";\n};\n\nvar assert = function assert(value) {\n  if (!value) {\n    throw new Error(\'Expected non-null, but got \' + String(value));\n  }\n\n  return value;\n};\n/* harmony default export */ var utils = ({\n  contains: contains,\n  deflt: deflt,\n  escape: utils_escape,\n  hyphenate: hyphenate,\n  getBaseElem: getBaseElem,\n  isCharacterBox: utils_isCharacterBox\n});\n// CONCATENATED MODULE: ./src/Settings.js\n/* eslint no-console:0 */\n\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n\n\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nvar Settings_Settings =\n/*#__PURE__*/\nfunction () {\n  function Settings(options) {\n    this.displayMode = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.allowedProtocols = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, "#cc0000");\n    this.macros = options.macros || {};\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, "warn");\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n    this.allowedProtocols = utils.deflt(options.allowedProtocols, ["http", "https", "mailto", "_relative"]);\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  var _proto = Settings.prototype;\n\n  _proto.reportNonstrict = function reportNonstrict(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === "function") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === "ignore") {\n      return;\n    } else if (strict === true || strict === "error") {\n      throw new src_ParseError("LaTeX-incompatible input and strict mode is set to \'error\': " + (errorMsg + " [" + errorCode + "]"), token);\n    } else if (strict === "warn") {\n      typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to \'warn\': " + (errorMsg + " [" + errorCode + "]"));\n    } else {\n      // won\'t happen in type-safe code\n      typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized \'" + strict + "\': " + errorMsg + " [" + errorCode + "]"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, "error" translates to a return value of `true`, while "ignore"\n   * translates to a return value of `false`.  May still print a warning:\n   * "warn" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n  ;\n\n  _proto.useStrictBehavior = function useStrictBehavior(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === "function") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like "error".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = "error";\n      }\n    }\n\n    if (!strict || strict === "ignore") {\n      return false;\n    } else if (strict === true || strict === "error") {\n      return true;\n    } else if (strict === "warn") {\n      typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to \'warn\': " + (errorMsg + " [" + errorCode + "]"));\n      return false;\n    } else {\n      // won\'t happen in type-safe code\n      typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized \'" + strict + "\': " + errorMsg + " [" + errorCode + "]"));\n      return false;\n    }\n  };\n\n  return Settings;\n}();\n\n/* harmony default export */ var src_Settings = (Settings_Settings);\n// CONCATENATED MODULE: ./src/Style.js\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nvar Style =\n/*#__PURE__*/\nfunction () {\n  function Style(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  var _proto = Style.prototype;\n\n  _proto.sup = function sup() {\n    return Style_styles[_sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n  ;\n\n  _proto.sub = function sub() {\n    return Style_styles[_sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n  ;\n\n  _proto.fracNum = function fracNum() {\n    return Style_styles[_fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n  ;\n\n  _proto.fracDen = function fracDen() {\n    return Style_styles[_fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn\'t change the style).\n   */\n  ;\n\n  _proto.cramp = function cramp() {\n    return Style_styles[_cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n  ;\n\n  _proto.text = function text() {\n    return Style_styles[_text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n  ;\n\n  _proto.isTight = function isTight() {\n    return this.size >= 2;\n  };\n\n  return Style;\n}(); // Export an interface for type checking, but don\'t expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7; // Instances of the different styles\n\nvar Style_styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nvar _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar _text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\n/* harmony default export */ var src_Style = ({\n  DISPLAY: Style_styles[D],\n  TEXT: Style_styles[T],\n  SCRIPT: Style_styles[S],\n  SCRIPTSCRIPT: Style_styles[SS]\n});\n// CONCATENATED MODULE: ./src/unicodeScripts.js\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: \'latin\',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f]]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: \'cyrillic\',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: \'brahmic\',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: \'georgian\',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The "k" in cjk is for Korean, but we\'ve separated Korean out\n  name: "cjk",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60]]\n}, {\n  // Korean\n  name: \'hangul\',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (var i = 0; i < scriptData.length; i++) {\n    var script = scriptData[i];\n\n    for (var _i = 0; _i < script.blocks.length; _i++) {\n      var block = script.blocks[_i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nvar allBlocks = [];\nscriptData.forEach(function (s) {\n  return s.blocks.forEach(function (b) {\n    return allBlocks.push.apply(allBlocks, b);\n  });\n});\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (var i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n// CONCATENATED MODULE: ./src/svgGeometry.js\n/**\n * This file provides support to domTree.js\n * It\'s a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nvar hLinePad = 80; // padding above a sqrt viniculum.\n\nvar svgGeometry_path = {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  // All surds have 80 units padding above the viniculumn.\n  sqrtMain: "M95," + (622 + hLinePad) + "c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\\ns-65,47,-65,47z M834 " + hLinePad + "H400000v40H845z",\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  sqrtSize1: "M263," + (601 + hLinePad) + "c0.7,0,18,39.7,52,119c34,79.3,68.167,\\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\\ns76,-59,76,-59s76,-60,76,-60z M1001 " + hLinePad + "H40000v40H1012z",\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  // The 80 units padding is most obvious here. Note start node at M1001 80.\n  sqrtSize2: "M1001," + hLinePad + "H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\\nM1001 " + hLinePad + "H400000v40H1013z",\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  sqrtSize3: "M424," + (2398 + hLinePad) + "c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M1001 " + hLinePad + "H400000v40H1014z",\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  sqrtSize4: "M473," + (2713 + hLinePad) + "c339.3,-1799.3,509.3,-2700,510,-2702\\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\\nM1001 " + hLinePad + "H400000v40H1017z",\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: "M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: "M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",\n  leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: "M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z",\n  leftgroupunder: "M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",\n  leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z",\n  leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",\n  leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z",\n  leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",\n  leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",\n  longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z",\n  midbrace: "M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",\n  midbraceunder: "M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",\n  oiintSize1: "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",\n  oiintSize2: "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z",\n  oiiintSize1: "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",\n  oiiintSize2: "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",\n  rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z",\n  rightbrace: "M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",\n  rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",\n  rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",\n  rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",\n  rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z",\n  rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",\n  rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",\n  rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z",\n  righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",\n  rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",\n  rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: "M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",\n  twoheadrightarrow: "M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",\n  tilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z",\n  tilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",\n  widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",\n  widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",\n  widecheck2: "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",\n  widecheck3: "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",\n  widecheck4: "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<--\x3e} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",\n  rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",\n  shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",\n  shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"\n};\n/* harmony default export */ var svgGeometry = ({\n  path: svgGeometry_path\n});\n// CONCATENATED MODULE: ./src/tree.js\n\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn\'t have any representation itself. It only contains\n * children and doesn\'t have any DOM node properties.\n */\nvar tree_DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  function DocumentFragment(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  var _proto = DocumentFragment.prototype;\n\n  _proto.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n  ;\n\n  _proto.toNode = function toNode() {\n    var frag = document.createDocumentFragment();\n\n    for (var i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n  ;\n\n  _proto.toMarkup = function toMarkup() {\n    var markup = ""; // Simply concatenate the markup for the children together.\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode\'s only.\n   */\n  ;\n\n  _proto.toText = function toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    var toText = function toText(child) {\n      return child.toText();\n    };\n\n    return this.children.map(toText).join("");\n  };\n\n  return DocumentFragment;\n}();\n// CONCATENATED MODULE: ./src/domTree.js\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n\n\n\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n  return classes.filter(function (cls) {\n    return cls;\n  }).join(" ");\n};\n\nvar initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push("mtight");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nvar _toNode = function toNode(tagName) {\n  var node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn\'t seem to understand span.style\'s type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (var i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nvar _toMarkup = function toMarkup(tagName) {\n  var markup = "<" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += " class=\\"" + utils.escape(createClass(this.classes)) + "\\"";\n  }\n\n  var styles = ""; // Add the styles, after hyphenation\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + ":" + this.style[style] + ";";\n    }\n  }\n\n  if (styles) {\n    markup += " style=\\"" + utils.escape(styles) + "\\"";\n  } // Add the attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += " " + attr + "=\\"" + utils.escape(this.attributes[attr]) + "\\"";\n    }\n  }\n\n  markup += ">"; // Add the markup of the children, also as markup\n\n  for (var i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += "</" + tagName + ">";\n  return markup;\n}; // Making the type below exact with all optional fields doesn\'t work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span\'s\n * children.\n */\nvar domTree_Span =\n/*#__PURE__*/\nfunction () {\n  function Span(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  var _proto = Span.prototype;\n\n  _proto.setAttribute = function setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  };\n\n  _proto.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto.toNode = function toNode() {\n    return _toNode.call(this, "span");\n  };\n\n  _proto.toMarkup = function toMarkup() {\n    return _toMarkup.call(this, "span");\n  };\n\n  return Span;\n}();\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nvar domTree_Anchor =\n/*#__PURE__*/\nfunction () {\n  function Anchor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute(\'href\', href);\n  }\n\n  var _proto2 = Anchor.prototype;\n\n  _proto2.setAttribute = function setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  };\n\n  _proto2.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto2.toNode = function toNode() {\n    return _toNode.call(this, "a");\n  };\n\n  _proto2.toMarkup = function toMarkup() {\n    return _toMarkup.call(this, "a");\n  };\n\n  return Anchor;\n}();\nvar iCombinations = {\n  \'î\': "\\u0131\\u0302",\n  \'ï\': "\\u0131\\u0308",\n  \'í\': "\\u0131\\u0301",\n  // \'ī\': \'\\u0131\\u0304\', // enable when we add Extended Latin\n  \'ì\': "\\u0131\\u0300"\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nvar domTree_SymbolNode =\n/*#__PURE__*/\nfunction () {\n  function SymbolNode(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    var script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + "_fallback");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  var _proto3 = SymbolNode.prototype;\n\n  _proto3.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n  ;\n\n  _proto3.toNode = function toNode() {\n    var node = document.createTextNode(this.text);\n    var span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement("span");\n      span.style.marginRight = this.italic + "em";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement("span");\n      span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement("span"); // $FlowFixMe Flow doesn\'t seem to understand span.style\'s type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n  ;\n\n  _proto3.toMarkup = function toMarkup() {\n    // TODO(alpert): More duplication than I\'d like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n    var markup = "<span";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += " class=\\"";\n      markup += utils.escape(createClass(this.classes));\n      markup += "\\"";\n    }\n\n    var styles = "";\n\n    if (this.italic > 0) {\n      styles += "margin-right:" + this.italic + "em;";\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + ":" + this.style[style] + ";";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += " style=\\"" + utils.escape(styles) + "\\"";\n    }\n\n    var escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += ">";\n      markup += escaped;\n      markup += "</span>";\n      return markup;\n    } else {\n      return escaped;\n    }\n  };\n\n  return SymbolNode;\n}();\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nvar SvgNode =\n/*#__PURE__*/\nfunction () {\n  function SvgNode(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  var _proto4 = SvgNode.prototype;\n\n  _proto4.toNode = function toNode() {\n    var svgNS = "http://www.w3.org/2000/svg";\n    var node = document.createElementNS(svgNS, "svg"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  };\n\n  _proto4.toMarkup = function toMarkup() {\n    var markup = "<svg"; // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += " " + attr + "=\'" + this.attributes[attr] + "\'";\n      }\n    }\n\n    markup += ">";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += "</svg>";\n    return markup;\n  };\n\n  return SvgNode;\n}();\nvar domTree_PathNode =\n/*#__PURE__*/\nfunction () {\n  function PathNode(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for tall \\sqrt\n  }\n\n  var _proto5 = PathNode.prototype;\n\n  _proto5.toNode = function toNode() {\n    var svgNS = "http://www.w3.org/2000/svg";\n    var node = document.createElementNS(svgNS, "path");\n\n    if (this.alternate) {\n      node.setAttribute("d", this.alternate);\n    } else {\n      node.setAttribute("d", svgGeometry.path[this.pathName]);\n    }\n\n    return node;\n  };\n\n  _proto5.toMarkup = function toMarkup() {\n    if (this.alternate) {\n      return "<path d=\'" + this.alternate + "\'/>";\n    } else {\n      return "<path d=\'" + svgGeometry.path[this.pathName] + "\'/>";\n    }\n  };\n\n  return PathNode;\n}();\nvar LineNode =\n/*#__PURE__*/\nfunction () {\n  function LineNode(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  var _proto6 = LineNode.prototype;\n\n  _proto6.toNode = function toNode() {\n    var svgNS = "http://www.w3.org/2000/svg";\n    var node = document.createElementNS(svgNS, "line"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  };\n\n  _proto6.toMarkup = function toMarkup() {\n    var markup = "<line";\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += " " + attr + "=\'" + this.attributes[attr] + "\'";\n      }\n    }\n\n    markup += "/>";\n    return markup;\n  };\n\n  return LineNode;\n}();\nfunction assertSymbolDomNode(group) {\n  if (group instanceof domTree_SymbolNode) {\n    return group;\n  } else {\n    throw new Error("Expected symbolNode but got " + String(group) + ".");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof domTree_Span) {\n    return group;\n  } else {\n    throw new Error("Expected span<HtmlDomNode> but got " + String(group) + ".");\n  }\n}\n// CONCATENATED MODULE: ./submodules/katex-fonts/fontMetricsData.js\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n/* harmony default export */ var fontMetricsData = ({\n  "AMS-Regular": {\n    "65": [0, 0.68889, 0, 0, 0.72222],\n    "66": [0, 0.68889, 0, 0, 0.66667],\n    "67": [0, 0.68889, 0, 0, 0.72222],\n    "68": [0, 0.68889, 0, 0, 0.72222],\n    "69": [0, 0.68889, 0, 0, 0.66667],\n    "70": [0, 0.68889, 0, 0, 0.61111],\n    "71": [0, 0.68889, 0, 0, 0.77778],\n    "72": [0, 0.68889, 0, 0, 0.77778],\n    "73": [0, 0.68889, 0, 0, 0.38889],\n    "74": [0.16667, 0.68889, 0, 0, 0.5],\n    "75": [0, 0.68889, 0, 0, 0.77778],\n    "76": [0, 0.68889, 0, 0, 0.66667],\n    "77": [0, 0.68889, 0, 0, 0.94445],\n    "78": [0, 0.68889, 0, 0, 0.72222],\n    "79": [0.16667, 0.68889, 0, 0, 0.77778],\n    "80": [0, 0.68889, 0, 0, 0.61111],\n    "81": [0.16667, 0.68889, 0, 0, 0.77778],\n    "82": [0, 0.68889, 0, 0, 0.72222],\n    "83": [0, 0.68889, 0, 0, 0.55556],\n    "84": [0, 0.68889, 0, 0, 0.66667],\n    "85": [0, 0.68889, 0, 0, 0.72222],\n    "86": [0, 0.68889, 0, 0, 0.72222],\n    "87": [0, 0.68889, 0, 0, 1.0],\n    "88": [0, 0.68889, 0, 0, 0.72222],\n    "89": [0, 0.68889, 0, 0, 0.72222],\n    "90": [0, 0.68889, 0, 0, 0.66667],\n    "107": [0, 0.68889, 0, 0, 0.55556],\n    "165": [0, 0.675, 0.025, 0, 0.75],\n    "174": [0.15559, 0.69224, 0, 0, 0.94666],\n    "240": [0, 0.68889, 0, 0, 0.55556],\n    "295": [0, 0.68889, 0, 0, 0.54028],\n    "710": [0, 0.825, 0, 0, 2.33334],\n    "732": [0, 0.9, 0, 0, 2.33334],\n    "770": [0, 0.825, 0, 0, 2.33334],\n    "771": [0, 0.9, 0, 0, 2.33334],\n    "989": [0.08167, 0.58167, 0, 0, 0.77778],\n    "1008": [0, 0.43056, 0.04028, 0, 0.66667],\n    "8245": [0, 0.54986, 0, 0, 0.275],\n    "8463": [0, 0.68889, 0, 0, 0.54028],\n    "8487": [0, 0.68889, 0, 0, 0.72222],\n    "8498": [0, 0.68889, 0, 0, 0.55556],\n    "8502": [0, 0.68889, 0, 0, 0.66667],\n    "8503": [0, 0.68889, 0, 0, 0.44445],\n    "8504": [0, 0.68889, 0, 0, 0.66667],\n    "8513": [0, 0.68889, 0, 0, 0.63889],\n    "8592": [-0.03598, 0.46402, 0, 0, 0.5],\n    "8594": [-0.03598, 0.46402, 0, 0, 0.5],\n    "8602": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8603": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8606": [0.01354, 0.52239, 0, 0, 1.0],\n    "8608": [0.01354, 0.52239, 0, 0, 1.0],\n    "8610": [0.01354, 0.52239, 0, 0, 1.11111],\n    "8611": [0.01354, 0.52239, 0, 0, 1.11111],\n    "8619": [0, 0.54986, 0, 0, 1.0],\n    "8620": [0, 0.54986, 0, 0, 1.0],\n    "8621": [-0.13313, 0.37788, 0, 0, 1.38889],\n    "8622": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8624": [0, 0.69224, 0, 0, 0.5],\n    "8625": [0, 0.69224, 0, 0, 0.5],\n    "8630": [0, 0.43056, 0, 0, 1.0],\n    "8631": [0, 0.43056, 0, 0, 1.0],\n    "8634": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8635": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8638": [0.19444, 0.69224, 0, 0, 0.41667],\n    "8639": [0.19444, 0.69224, 0, 0, 0.41667],\n    "8642": [0.19444, 0.69224, 0, 0, 0.41667],\n    "8643": [0.19444, 0.69224, 0, 0, 0.41667],\n    "8644": [0.1808, 0.675, 0, 0, 1.0],\n    "8646": [0.1808, 0.675, 0, 0, 1.0],\n    "8647": [0.1808, 0.675, 0, 0, 1.0],\n    "8648": [0.19444, 0.69224, 0, 0, 0.83334],\n    "8649": [0.1808, 0.675, 0, 0, 1.0],\n    "8650": [0.19444, 0.69224, 0, 0, 0.83334],\n    "8651": [0.01354, 0.52239, 0, 0, 1.0],\n    "8652": [0.01354, 0.52239, 0, 0, 1.0],\n    "8653": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8654": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8655": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8666": [0.13667, 0.63667, 0, 0, 1.0],\n    "8667": [0.13667, 0.63667, 0, 0, 1.0],\n    "8669": [-0.13313, 0.37788, 0, 0, 1.0],\n    "8672": [-0.064, 0.437, 0, 0, 1.334],\n    "8674": [-0.064, 0.437, 0, 0, 1.334],\n    "8705": [0, 0.825, 0, 0, 0.5],\n    "8708": [0, 0.68889, 0, 0, 0.55556],\n    "8709": [0.08167, 0.58167, 0, 0, 0.77778],\n    "8717": [0, 0.43056, 0, 0, 0.42917],\n    "8722": [-0.03598, 0.46402, 0, 0, 0.5],\n    "8724": [0.08198, 0.69224, 0, 0, 0.77778],\n    "8726": [0.08167, 0.58167, 0, 0, 0.77778],\n    "8733": [0, 0.69224, 0, 0, 0.77778],\n    "8736": [0, 0.69224, 0, 0, 0.72222],\n    "8737": [0, 0.69224, 0, 0, 0.72222],\n    "8738": [0.03517, 0.52239, 0, 0, 0.72222],\n    "8739": [0.08167, 0.58167, 0, 0, 0.22222],\n    "8740": [0.25142, 0.74111, 0, 0, 0.27778],\n    "8741": [0.08167, 0.58167, 0, 0, 0.38889],\n    "8742": [0.25142, 0.74111, 0, 0, 0.5],\n    "8756": [0, 0.69224, 0, 0, 0.66667],\n    "8757": [0, 0.69224, 0, 0, 0.66667],\n    "8764": [-0.13313, 0.36687, 0, 0, 0.77778],\n    "8765": [-0.13313, 0.37788, 0, 0, 0.77778],\n    "8769": [-0.13313, 0.36687, 0, 0, 0.77778],\n    "8770": [-0.03625, 0.46375, 0, 0, 0.77778],\n    "8774": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8776": [-0.01688, 0.48312, 0, 0, 0.77778],\n    "8778": [0.08167, 0.58167, 0, 0, 0.77778],\n    "8782": [0.06062, 0.54986, 0, 0, 0.77778],\n    "8783": [0.06062, 0.54986, 0, 0, 0.77778],\n    "8785": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8786": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8787": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8790": [0, 0.69224, 0, 0, 0.77778],\n    "8791": [0.22958, 0.72958, 0, 0, 0.77778],\n    "8796": [0.08198, 0.91667, 0, 0, 0.77778],\n    "8806": [0.25583, 0.75583, 0, 0, 0.77778],\n    "8807": [0.25583, 0.75583, 0, 0, 0.77778],\n    "8808": [0.25142, 0.75726, 0, 0, 0.77778],\n    "8809": [0.25142, 0.75726, 0, 0, 0.77778],\n    "8812": [0.25583, 0.75583, 0, 0, 0.5],\n    "8814": [0.20576, 0.70576, 0, 0, 0.77778],\n    "8815": [0.20576, 0.70576, 0, 0, 0.77778],\n    "8816": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8817": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8818": [0.22958, 0.72958, 0, 0, 0.77778],\n    "8819": [0.22958, 0.72958, 0, 0, 0.77778],\n    "8822": [0.1808, 0.675, 0, 0, 0.77778],\n    "8823": [0.1808, 0.675, 0, 0, 0.77778],\n    "8828": [0.13667, 0.63667, 0, 0, 0.77778],\n    "8829": [0.13667, 0.63667, 0, 0, 0.77778],\n    "8830": [0.22958, 0.72958, 0, 0, 0.77778],\n    "8831": [0.22958, 0.72958, 0, 0, 0.77778],\n    "8832": [0.20576, 0.70576, 0, 0, 0.77778],\n    "8833": [0.20576, 0.70576, 0, 0, 0.77778],\n    "8840": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8841": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8842": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8843": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8847": [0.03517, 0.54986, 0, 0, 0.77778],\n    "8848": [0.03517, 0.54986, 0, 0, 0.77778],\n    "8858": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8859": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8861": [0.08198, 0.58198, 0, 0, 0.77778],\n    "8862": [0, 0.675, 0, 0, 0.77778],\n    "8863": [0, 0.675, 0, 0, 0.77778],\n    "8864": [0, 0.675, 0, 0, 0.77778],\n    "8865": [0, 0.675, 0, 0, 0.77778],\n    "8872": [0, 0.69224, 0, 0, 0.61111],\n    "8873": [0, 0.69224, 0, 0, 0.72222],\n    "8874": [0, 0.69224, 0, 0, 0.88889],\n    "8876": [0, 0.68889, 0, 0, 0.61111],\n    "8877": [0, 0.68889, 0, 0, 0.61111],\n    "8878": [0, 0.68889, 0, 0, 0.72222],\n    "8879": [0, 0.68889, 0, 0, 0.72222],\n    "8882": [0.03517, 0.54986, 0, 0, 0.77778],\n    "8883": [0.03517, 0.54986, 0, 0, 0.77778],\n    "8884": [0.13667, 0.63667, 0, 0, 0.77778],\n    "8885": [0.13667, 0.63667, 0, 0, 0.77778],\n    "8888": [0, 0.54986, 0, 0, 1.11111],\n    "8890": [0.19444, 0.43056, 0, 0, 0.55556],\n    "8891": [0.19444, 0.69224, 0, 0, 0.61111],\n    "8892": [0.19444, 0.69224, 0, 0, 0.61111],\n    "8901": [0, 0.54986, 0, 0, 0.27778],\n    "8903": [0.08167, 0.58167, 0, 0, 0.77778],\n    "8905": [0.08167, 0.58167, 0, 0, 0.77778],\n    "8906": [0.08167, 0.58167, 0, 0, 0.77778],\n    "8907": [0, 0.69224, 0, 0, 0.77778],\n    "8908": [0, 0.69224, 0, 0, 0.77778],\n    "8909": [-0.03598, 0.46402, 0, 0, 0.77778],\n    "8910": [0, 0.54986, 0, 0, 0.76042],\n    "8911": [0, 0.54986, 0, 0, 0.76042],\n    "8912": [0.03517, 0.54986, 0, 0, 0.77778],\n    "8913": [0.03517, 0.54986, 0, 0, 0.77778],\n    "8914": [0, 0.54986, 0, 0, 0.66667],\n    "8915": [0, 0.54986, 0, 0, 0.66667],\n    "8916": [0, 0.69224, 0, 0, 0.66667],\n    "8918": [0.0391, 0.5391, 0, 0, 0.77778],\n    "8919": [0.0391, 0.5391, 0, 0, 0.77778],\n    "8920": [0.03517, 0.54986, 0, 0, 1.33334],\n    "8921": [0.03517, 0.54986, 0, 0, 1.33334],\n    "8922": [0.38569, 0.88569, 0, 0, 0.77778],\n    "8923": [0.38569, 0.88569, 0, 0, 0.77778],\n    "8926": [0.13667, 0.63667, 0, 0, 0.77778],\n    "8927": [0.13667, 0.63667, 0, 0, 0.77778],\n    "8928": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8929": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8934": [0.23222, 0.74111, 0, 0, 0.77778],\n    "8935": [0.23222, 0.74111, 0, 0, 0.77778],\n    "8936": [0.23222, 0.74111, 0, 0, 0.77778],\n    "8937": [0.23222, 0.74111, 0, 0, 0.77778],\n    "8938": [0.20576, 0.70576, 0, 0, 0.77778],\n    "8939": [0.20576, 0.70576, 0, 0, 0.77778],\n    "8940": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8941": [0.30274, 0.79383, 0, 0, 0.77778],\n    "8994": [0.19444, 0.69224, 0, 0, 0.77778],\n    "8995": [0.19444, 0.69224, 0, 0, 0.77778],\n    "9416": [0.15559, 0.69224, 0, 0, 0.90222],\n    "9484": [0, 0.69224, 0, 0, 0.5],\n    "9488": [0, 0.69224, 0, 0, 0.5],\n    "9492": [0, 0.37788, 0, 0, 0.5],\n    "9496": [0, 0.37788, 0, 0, 0.5],\n    "9585": [0.19444, 0.68889, 0, 0, 0.88889],\n    "9586": [0.19444, 0.74111, 0, 0, 0.88889],\n    "9632": [0, 0.675, 0, 0, 0.77778],\n    "9633": [0, 0.675, 0, 0, 0.77778],\n    "9650": [0, 0.54986, 0, 0, 0.72222],\n    "9651": [0, 0.54986, 0, 0, 0.72222],\n    "9654": [0.03517, 0.54986, 0, 0, 0.77778],\n    "9660": [0, 0.54986, 0, 0, 0.72222],\n    "9661": [0, 0.54986, 0, 0, 0.72222],\n    "9664": [0.03517, 0.54986, 0, 0, 0.77778],\n    "9674": [0.11111, 0.69224, 0, 0, 0.66667],\n    "9733": [0.19444, 0.69224, 0, 0, 0.94445],\n    "10003": [0, 0.69224, 0, 0, 0.83334],\n    "10016": [0, 0.69224, 0, 0, 0.83334],\n    "10731": [0.11111, 0.69224, 0, 0, 0.66667],\n    "10846": [0.19444, 0.75583, 0, 0, 0.61111],\n    "10877": [0.13667, 0.63667, 0, 0, 0.77778],\n    "10878": [0.13667, 0.63667, 0, 0, 0.77778],\n    "10885": [0.25583, 0.75583, 0, 0, 0.77778],\n    "10886": [0.25583, 0.75583, 0, 0, 0.77778],\n    "10887": [0.13597, 0.63597, 0, 0, 0.77778],\n    "10888": [0.13597, 0.63597, 0, 0, 0.77778],\n    "10889": [0.26167, 0.75726, 0, 0, 0.77778],\n    "10890": [0.26167, 0.75726, 0, 0, 0.77778],\n    "10891": [0.48256, 0.98256, 0, 0, 0.77778],\n    "10892": [0.48256, 0.98256, 0, 0, 0.77778],\n    "10901": [0.13667, 0.63667, 0, 0, 0.77778],\n    "10902": [0.13667, 0.63667, 0, 0, 0.77778],\n    "10933": [0.25142, 0.75726, 0, 0, 0.77778],\n    "10934": [0.25142, 0.75726, 0, 0, 0.77778],\n    "10935": [0.26167, 0.75726, 0, 0, 0.77778],\n    "10936": [0.26167, 0.75726, 0, 0, 0.77778],\n    "10937": [0.26167, 0.75726, 0, 0, 0.77778],\n    "10938": [0.26167, 0.75726, 0, 0, 0.77778],\n    "10949": [0.25583, 0.75583, 0, 0, 0.77778],\n    "10950": [0.25583, 0.75583, 0, 0, 0.77778],\n    "10955": [0.28481, 0.79383, 0, 0, 0.77778],\n    "10956": [0.28481, 0.79383, 0, 0, 0.77778],\n    "57350": [0.08167, 0.58167, 0, 0, 0.22222],\n    "57351": [0.08167, 0.58167, 0, 0, 0.38889],\n    "57352": [0.08167, 0.58167, 0, 0, 0.77778],\n    "57353": [0, 0.43056, 0.04028, 0, 0.66667],\n    "57356": [0.25142, 0.75726, 0, 0, 0.77778],\n    "57357": [0.25142, 0.75726, 0, 0, 0.77778],\n    "57358": [0.41951, 0.91951, 0, 0, 0.77778],\n    "57359": [0.30274, 0.79383, 0, 0, 0.77778],\n    "57360": [0.30274, 0.79383, 0, 0, 0.77778],\n    "57361": [0.41951, 0.91951, 0, 0, 0.77778],\n    "57366": [0.25142, 0.75726, 0, 0, 0.77778],\n    "57367": [0.25142, 0.75726, 0, 0, 0.77778],\n    "57368": [0.25142, 0.75726, 0, 0, 0.77778],\n    "57369": [0.25142, 0.75726, 0, 0, 0.77778],\n    "57370": [0.13597, 0.63597, 0, 0, 0.77778],\n    "57371": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  "Caligraphic-Regular": {\n    "48": [0, 0.43056, 0, 0, 0.5],\n    "49": [0, 0.43056, 0, 0, 0.5],\n    "50": [0, 0.43056, 0, 0, 0.5],\n    "51": [0.19444, 0.43056, 0, 0, 0.5],\n    "52": [0.19444, 0.43056, 0, 0, 0.5],\n    "53": [0.19444, 0.43056, 0, 0, 0.5],\n    "54": [0, 0.64444, 0, 0, 0.5],\n    "55": [0.19444, 0.43056, 0, 0, 0.5],\n    "56": [0, 0.64444, 0, 0, 0.5],\n    "57": [0.19444, 0.43056, 0, 0, 0.5],\n    "65": [0, 0.68333, 0, 0.19445, 0.79847],\n    "66": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    "67": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    "68": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    "69": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    "70": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    "71": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    "72": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    "73": [0, 0.68333, 0.07382, 0, 0.54452],\n    "74": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    "75": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    "76": [0, 0.68333, 0, 0.13889, 0.68972],\n    "77": [0, 0.68333, 0, 0.13889, 1.2009],\n    "78": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    "79": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    "80": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    "81": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    "82": [0, 0.68333, 0, 0.08334, 0.8475],\n    "83": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    "84": [0, 0.68333, 0.25417, 0, 0.54464],\n    "85": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    "86": [0, 0.68333, 0.08222, 0, 0.61278],\n    "87": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    "88": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    "89": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    "90": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n  },\n  "Fraktur-Regular": {\n    "33": [0, 0.69141, 0, 0, 0.29574],\n    "34": [0, 0.69141, 0, 0, 0.21471],\n    "38": [0, 0.69141, 0, 0, 0.73786],\n    "39": [0, 0.69141, 0, 0, 0.21201],\n    "40": [0.24982, 0.74947, 0, 0, 0.38865],\n    "41": [0.24982, 0.74947, 0, 0, 0.38865],\n    "42": [0, 0.62119, 0, 0, 0.27764],\n    "43": [0.08319, 0.58283, 0, 0, 0.75623],\n    "44": [0, 0.10803, 0, 0, 0.27764],\n    "45": [0.08319, 0.58283, 0, 0, 0.75623],\n    "46": [0, 0.10803, 0, 0, 0.27764],\n    "47": [0.24982, 0.74947, 0, 0, 0.50181],\n    "48": [0, 0.47534, 0, 0, 0.50181],\n    "49": [0, 0.47534, 0, 0, 0.50181],\n    "50": [0, 0.47534, 0, 0, 0.50181],\n    "51": [0.18906, 0.47534, 0, 0, 0.50181],\n    "52": [0.18906, 0.47534, 0, 0, 0.50181],\n    "53": [0.18906, 0.47534, 0, 0, 0.50181],\n    "54": [0, 0.69141, 0, 0, 0.50181],\n    "55": [0.18906, 0.47534, 0, 0, 0.50181],\n    "56": [0, 0.69141, 0, 0, 0.50181],\n    "57": [0.18906, 0.47534, 0, 0, 0.50181],\n    "58": [0, 0.47534, 0, 0, 0.21606],\n    "59": [0.12604, 0.47534, 0, 0, 0.21606],\n    "61": [-0.13099, 0.36866, 0, 0, 0.75623],\n    "63": [0, 0.69141, 0, 0, 0.36245],\n    "65": [0, 0.69141, 0, 0, 0.7176],\n    "66": [0, 0.69141, 0, 0, 0.88397],\n    "67": [0, 0.69141, 0, 0, 0.61254],\n    "68": [0, 0.69141, 0, 0, 0.83158],\n    "69": [0, 0.69141, 0, 0, 0.66278],\n    "70": [0.12604, 0.69141, 0, 0, 0.61119],\n    "71": [0, 0.69141, 0, 0, 0.78539],\n    "72": [0.06302, 0.69141, 0, 0, 0.7203],\n    "73": [0, 0.69141, 0, 0, 0.55448],\n    "74": [0.12604, 0.69141, 0, 0, 0.55231],\n    "75": [0, 0.69141, 0, 0, 0.66845],\n    "76": [0, 0.69141, 0, 0, 0.66602],\n    "77": [0, 0.69141, 0, 0, 1.04953],\n    "78": [0, 0.69141, 0, 0, 0.83212],\n    "79": [0, 0.69141, 0, 0, 0.82699],\n    "80": [0.18906, 0.69141, 0, 0, 0.82753],\n    "81": [0.03781, 0.69141, 0, 0, 0.82699],\n    "82": [0, 0.69141, 0, 0, 0.82807],\n    "83": [0, 0.69141, 0, 0, 0.82861],\n    "84": [0, 0.69141, 0, 0, 0.66899],\n    "85": [0, 0.69141, 0, 0, 0.64576],\n    "86": [0, 0.69141, 0, 0, 0.83131],\n    "87": [0, 0.69141, 0, 0, 1.04602],\n    "88": [0, 0.69141, 0, 0, 0.71922],\n    "89": [0.18906, 0.69141, 0, 0, 0.83293],\n    "90": [0.12604, 0.69141, 0, 0, 0.60201],\n    "91": [0.24982, 0.74947, 0, 0, 0.27764],\n    "93": [0.24982, 0.74947, 0, 0, 0.27764],\n    "94": [0, 0.69141, 0, 0, 0.49965],\n    "97": [0, 0.47534, 0, 0, 0.50046],\n    "98": [0, 0.69141, 0, 0, 0.51315],\n    "99": [0, 0.47534, 0, 0, 0.38946],\n    "100": [0, 0.62119, 0, 0, 0.49857],\n    "101": [0, 0.47534, 0, 0, 0.40053],\n    "102": [0.18906, 0.69141, 0, 0, 0.32626],\n    "103": [0.18906, 0.47534, 0, 0, 0.5037],\n    "104": [0.18906, 0.69141, 0, 0, 0.52126],\n    "105": [0, 0.69141, 0, 0, 0.27899],\n    "106": [0, 0.69141, 0, 0, 0.28088],\n    "107": [0, 0.69141, 0, 0, 0.38946],\n    "108": [0, 0.69141, 0, 0, 0.27953],\n    "109": [0, 0.47534, 0, 0, 0.76676],\n    "110": [0, 0.47534, 0, 0, 0.52666],\n    "111": [0, 0.47534, 0, 0, 0.48885],\n    "112": [0.18906, 0.52396, 0, 0, 0.50046],\n    "113": [0.18906, 0.47534, 0, 0, 0.48912],\n    "114": [0, 0.47534, 0, 0, 0.38919],\n    "115": [0, 0.47534, 0, 0, 0.44266],\n    "116": [0, 0.62119, 0, 0, 0.33301],\n    "117": [0, 0.47534, 0, 0, 0.5172],\n    "118": [0, 0.52396, 0, 0, 0.5118],\n    "119": [0, 0.52396, 0, 0, 0.77351],\n    "120": [0.18906, 0.47534, 0, 0, 0.38865],\n    "121": [0.18906, 0.47534, 0, 0, 0.49884],\n    "122": [0.18906, 0.47534, 0, 0, 0.39054],\n    "8216": [0, 0.69141, 0, 0, 0.21471],\n    "8217": [0, 0.69141, 0, 0, 0.21471],\n    "58112": [0, 0.62119, 0, 0, 0.49749],\n    "58113": [0, 0.62119, 0, 0, 0.4983],\n    "58114": [0.18906, 0.69141, 0, 0, 0.33328],\n    "58115": [0.18906, 0.69141, 0, 0, 0.32923],\n    "58116": [0.18906, 0.47534, 0, 0, 0.50343],\n    "58117": [0, 0.69141, 0, 0, 0.33301],\n    "58118": [0, 0.62119, 0, 0, 0.33409],\n    "58119": [0, 0.47534, 0, 0, 0.50073]\n  },\n  "Main-Bold": {\n    "33": [0, 0.69444, 0, 0, 0.35],\n    "34": [0, 0.69444, 0, 0, 0.60278],\n    "35": [0.19444, 0.69444, 0, 0, 0.95833],\n    "36": [0.05556, 0.75, 0, 0, 0.575],\n    "37": [0.05556, 0.75, 0, 0, 0.95833],\n    "38": [0, 0.69444, 0, 0, 0.89444],\n    "39": [0, 0.69444, 0, 0, 0.31944],\n    "40": [0.25, 0.75, 0, 0, 0.44722],\n    "41": [0.25, 0.75, 0, 0, 0.44722],\n    "42": [0, 0.75, 0, 0, 0.575],\n    "43": [0.13333, 0.63333, 0, 0, 0.89444],\n    "44": [0.19444, 0.15556, 0, 0, 0.31944],\n    "45": [0, 0.44444, 0, 0, 0.38333],\n    "46": [0, 0.15556, 0, 0, 0.31944],\n    "47": [0.25, 0.75, 0, 0, 0.575],\n    "48": [0, 0.64444, 0, 0, 0.575],\n    "49": [0, 0.64444, 0, 0, 0.575],\n    "50": [0, 0.64444, 0, 0, 0.575],\n    "51": [0, 0.64444, 0, 0, 0.575],\n    "52": [0, 0.64444, 0, 0, 0.575],\n    "53": [0, 0.64444, 0, 0, 0.575],\n    "54": [0, 0.64444, 0, 0, 0.575],\n    "55": [0, 0.64444, 0, 0, 0.575],\n    "56": [0, 0.64444, 0, 0, 0.575],\n    "57": [0, 0.64444, 0, 0, 0.575],\n    "58": [0, 0.44444, 0, 0, 0.31944],\n    "59": [0.19444, 0.44444, 0, 0, 0.31944],\n    "60": [0.08556, 0.58556, 0, 0, 0.89444],\n    "61": [-0.10889, 0.39111, 0, 0, 0.89444],\n    "62": [0.08556, 0.58556, 0, 0, 0.89444],\n    "63": [0, 0.69444, 0, 0, 0.54305],\n    "64": [0, 0.69444, 0, 0, 0.89444],\n    "65": [0, 0.68611, 0, 0, 0.86944],\n    "66": [0, 0.68611, 0, 0, 0.81805],\n    "67": [0, 0.68611, 0, 0, 0.83055],\n    "68": [0, 0.68611, 0, 0, 0.88194],\n    "69": [0, 0.68611, 0, 0, 0.75555],\n    "70": [0, 0.68611, 0, 0, 0.72361],\n    "71": [0, 0.68611, 0, 0, 0.90416],\n    "72": [0, 0.68611, 0, 0, 0.9],\n    "73": [0, 0.68611, 0, 0, 0.43611],\n    "74": [0, 0.68611, 0, 0, 0.59444],\n    "75": [0, 0.68611, 0, 0, 0.90138],\n    "76": [0, 0.68611, 0, 0, 0.69166],\n    "77": [0, 0.68611, 0, 0, 1.09166],\n    "78": [0, 0.68611, 0, 0, 0.9],\n    "79": [0, 0.68611, 0, 0, 0.86388],\n    "80": [0, 0.68611, 0, 0, 0.78611],\n    "81": [0.19444, 0.68611, 0, 0, 0.86388],\n    "82": [0, 0.68611, 0, 0, 0.8625],\n    "83": [0, 0.68611, 0, 0, 0.63889],\n    "84": [0, 0.68611, 0, 0, 0.8],\n    "85": [0, 0.68611, 0, 0, 0.88472],\n    "86": [0, 0.68611, 0.01597, 0, 0.86944],\n    "87": [0, 0.68611, 0.01597, 0, 1.18888],\n    "88": [0, 0.68611, 0, 0, 0.86944],\n    "89": [0, 0.68611, 0.02875, 0, 0.86944],\n    "90": [0, 0.68611, 0, 0, 0.70277],\n    "91": [0.25, 0.75, 0, 0, 0.31944],\n    "92": [0.25, 0.75, 0, 0, 0.575],\n    "93": [0.25, 0.75, 0, 0, 0.31944],\n    "94": [0, 0.69444, 0, 0, 0.575],\n    "95": [0.31, 0.13444, 0.03194, 0, 0.575],\n    "97": [0, 0.44444, 0, 0, 0.55902],\n    "98": [0, 0.69444, 0, 0, 0.63889],\n    "99": [0, 0.44444, 0, 0, 0.51111],\n    "100": [0, 0.69444, 0, 0, 0.63889],\n    "101": [0, 0.44444, 0, 0, 0.52708],\n    "102": [0, 0.69444, 0.10903, 0, 0.35139],\n    "103": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    "104": [0, 0.69444, 0, 0, 0.63889],\n    "105": [0, 0.69444, 0, 0, 0.31944],\n    "106": [0.19444, 0.69444, 0, 0, 0.35139],\n    "107": [0, 0.69444, 0, 0, 0.60694],\n    "108": [0, 0.69444, 0, 0, 0.31944],\n    "109": [0, 0.44444, 0, 0, 0.95833],\n    "110": [0, 0.44444, 0, 0, 0.63889],\n    "111": [0, 0.44444, 0, 0, 0.575],\n    "112": [0.19444, 0.44444, 0, 0, 0.63889],\n    "113": [0.19444, 0.44444, 0, 0, 0.60694],\n    "114": [0, 0.44444, 0, 0, 0.47361],\n    "115": [0, 0.44444, 0, 0, 0.45361],\n    "116": [0, 0.63492, 0, 0, 0.44722],\n    "117": [0, 0.44444, 0, 0, 0.63889],\n    "118": [0, 0.44444, 0.01597, 0, 0.60694],\n    "119": [0, 0.44444, 0.01597, 0, 0.83055],\n    "120": [0, 0.44444, 0, 0, 0.60694],\n    "121": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    "122": [0, 0.44444, 0, 0, 0.51111],\n    "123": [0.25, 0.75, 0, 0, 0.575],\n    "124": [0.25, 0.75, 0, 0, 0.31944],\n    "125": [0.25, 0.75, 0, 0, 0.575],\n    "126": [0.35, 0.34444, 0, 0, 0.575],\n    "168": [0, 0.69444, 0, 0, 0.575],\n    "172": [0, 0.44444, 0, 0, 0.76666],\n    "176": [0, 0.69444, 0, 0, 0.86944],\n    "177": [0.13333, 0.63333, 0, 0, 0.89444],\n    "184": [0.17014, 0, 0, 0, 0.51111],\n    "198": [0, 0.68611, 0, 0, 1.04166],\n    "215": [0.13333, 0.63333, 0, 0, 0.89444],\n    "216": [0.04861, 0.73472, 0, 0, 0.89444],\n    "223": [0, 0.69444, 0, 0, 0.59722],\n    "230": [0, 0.44444, 0, 0, 0.83055],\n    "247": [0.13333, 0.63333, 0, 0, 0.89444],\n    "248": [0.09722, 0.54167, 0, 0, 0.575],\n    "305": [0, 0.44444, 0, 0, 0.31944],\n    "338": [0, 0.68611, 0, 0, 1.16944],\n    "339": [0, 0.44444, 0, 0, 0.89444],\n    "567": [0.19444, 0.44444, 0, 0, 0.35139],\n    "710": [0, 0.69444, 0, 0, 0.575],\n    "711": [0, 0.63194, 0, 0, 0.575],\n    "713": [0, 0.59611, 0, 0, 0.575],\n    "714": [0, 0.69444, 0, 0, 0.575],\n    "715": [0, 0.69444, 0, 0, 0.575],\n    "728": [0, 0.69444, 0, 0, 0.575],\n    "729": [0, 0.69444, 0, 0, 0.31944],\n    "730": [0, 0.69444, 0, 0, 0.86944],\n    "732": [0, 0.69444, 0, 0, 0.575],\n    "733": [0, 0.69444, 0, 0, 0.575],\n    "915": [0, 0.68611, 0, 0, 0.69166],\n    "916": [0, 0.68611, 0, 0, 0.95833],\n    "920": [0, 0.68611, 0, 0, 0.89444],\n    "923": [0, 0.68611, 0, 0, 0.80555],\n    "926": [0, 0.68611, 0, 0, 0.76666],\n    "928": [0, 0.68611, 0, 0, 0.9],\n    "931": [0, 0.68611, 0, 0, 0.83055],\n    "933": [0, 0.68611, 0, 0, 0.89444],\n    "934": [0, 0.68611, 0, 0, 0.83055],\n    "936": [0, 0.68611, 0, 0, 0.89444],\n    "937": [0, 0.68611, 0, 0, 0.83055],\n    "8211": [0, 0.44444, 0.03194, 0, 0.575],\n    "8212": [0, 0.44444, 0.03194, 0, 1.14999],\n    "8216": [0, 0.69444, 0, 0, 0.31944],\n    "8217": [0, 0.69444, 0, 0, 0.31944],\n    "8220": [0, 0.69444, 0, 0, 0.60278],\n    "8221": [0, 0.69444, 0, 0, 0.60278],\n    "8224": [0.19444, 0.69444, 0, 0, 0.51111],\n    "8225": [0.19444, 0.69444, 0, 0, 0.51111],\n    "8242": [0, 0.55556, 0, 0, 0.34444],\n    "8407": [0, 0.72444, 0.15486, 0, 0.575],\n    "8463": [0, 0.69444, 0, 0, 0.66759],\n    "8465": [0, 0.69444, 0, 0, 0.83055],\n    "8467": [0, 0.69444, 0, 0, 0.47361],\n    "8472": [0.19444, 0.44444, 0, 0, 0.74027],\n    "8476": [0, 0.69444, 0, 0, 0.83055],\n    "8501": [0, 0.69444, 0, 0, 0.70277],\n    "8592": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8593": [0.19444, 0.69444, 0, 0, 0.575],\n    "8594": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8595": [0.19444, 0.69444, 0, 0, 0.575],\n    "8596": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8597": [0.25, 0.75, 0, 0, 0.575],\n    "8598": [0.19444, 0.69444, 0, 0, 1.14999],\n    "8599": [0.19444, 0.69444, 0, 0, 1.14999],\n    "8600": [0.19444, 0.69444, 0, 0, 1.14999],\n    "8601": [0.19444, 0.69444, 0, 0, 1.14999],\n    "8636": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8637": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8640": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8641": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8656": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8657": [0.19444, 0.69444, 0, 0, 0.70277],\n    "8658": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8659": [0.19444, 0.69444, 0, 0, 0.70277],\n    "8660": [-0.10889, 0.39111, 0, 0, 1.14999],\n    "8661": [0.25, 0.75, 0, 0, 0.70277],\n    "8704": [0, 0.69444, 0, 0, 0.63889],\n    "8706": [0, 0.69444, 0.06389, 0, 0.62847],\n    "8707": [0, 0.69444, 0, 0, 0.63889],\n    "8709": [0.05556, 0.75, 0, 0, 0.575],\n    "8711": [0, 0.68611, 0, 0, 0.95833],\n    "8712": [0.08556, 0.58556, 0, 0, 0.76666],\n    "8715": [0.08556, 0.58556, 0, 0, 0.76666],\n    "8722": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8723": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8725": [0.25, 0.75, 0, 0, 0.575],\n    "8726": [0.25, 0.75, 0, 0, 0.575],\n    "8727": [-0.02778, 0.47222, 0, 0, 0.575],\n    "8728": [-0.02639, 0.47361, 0, 0, 0.575],\n    "8729": [-0.02639, 0.47361, 0, 0, 0.575],\n    "8730": [0.18, 0.82, 0, 0, 0.95833],\n    "8733": [0, 0.44444, 0, 0, 0.89444],\n    "8734": [0, 0.44444, 0, 0, 1.14999],\n    "8736": [0, 0.69224, 0, 0, 0.72222],\n    "8739": [0.25, 0.75, 0, 0, 0.31944],\n    "8741": [0.25, 0.75, 0, 0, 0.575],\n    "8743": [0, 0.55556, 0, 0, 0.76666],\n    "8744": [0, 0.55556, 0, 0, 0.76666],\n    "8745": [0, 0.55556, 0, 0, 0.76666],\n    "8746": [0, 0.55556, 0, 0, 0.76666],\n    "8747": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    "8764": [-0.10889, 0.39111, 0, 0, 0.89444],\n    "8768": [0.19444, 0.69444, 0, 0, 0.31944],\n    "8771": [0.00222, 0.50222, 0, 0, 0.89444],\n    "8776": [0.02444, 0.52444, 0, 0, 0.89444],\n    "8781": [0.00222, 0.50222, 0, 0, 0.89444],\n    "8801": [0.00222, 0.50222, 0, 0, 0.89444],\n    "8804": [0.19667, 0.69667, 0, 0, 0.89444],\n    "8805": [0.19667, 0.69667, 0, 0, 0.89444],\n    "8810": [0.08556, 0.58556, 0, 0, 1.14999],\n    "8811": [0.08556, 0.58556, 0, 0, 1.14999],\n    "8826": [0.08556, 0.58556, 0, 0, 0.89444],\n    "8827": [0.08556, 0.58556, 0, 0, 0.89444],\n    "8834": [0.08556, 0.58556, 0, 0, 0.89444],\n    "8835": [0.08556, 0.58556, 0, 0, 0.89444],\n    "8838": [0.19667, 0.69667, 0, 0, 0.89444],\n    "8839": [0.19667, 0.69667, 0, 0, 0.89444],\n    "8846": [0, 0.55556, 0, 0, 0.76666],\n    "8849": [0.19667, 0.69667, 0, 0, 0.89444],\n    "8850": [0.19667, 0.69667, 0, 0, 0.89444],\n    "8851": [0, 0.55556, 0, 0, 0.76666],\n    "8852": [0, 0.55556, 0, 0, 0.76666],\n    "8853": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8854": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8855": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8856": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8857": [0.13333, 0.63333, 0, 0, 0.89444],\n    "8866": [0, 0.69444, 0, 0, 0.70277],\n    "8867": [0, 0.69444, 0, 0, 0.70277],\n    "8868": [0, 0.69444, 0, 0, 0.89444],\n    "8869": [0, 0.69444, 0, 0, 0.89444],\n    "8900": [-0.02639, 0.47361, 0, 0, 0.575],\n    "8901": [-0.02639, 0.47361, 0, 0, 0.31944],\n    "8902": [-0.02778, 0.47222, 0, 0, 0.575],\n    "8968": [0.25, 0.75, 0, 0, 0.51111],\n    "8969": [0.25, 0.75, 0, 0, 0.51111],\n    "8970": [0.25, 0.75, 0, 0, 0.51111],\n    "8971": [0.25, 0.75, 0, 0, 0.51111],\n    "8994": [-0.13889, 0.36111, 0, 0, 1.14999],\n    "8995": [-0.13889, 0.36111, 0, 0, 1.14999],\n    "9651": [0.19444, 0.69444, 0, 0, 1.02222],\n    "9657": [-0.02778, 0.47222, 0, 0, 0.575],\n    "9661": [0.19444, 0.69444, 0, 0, 1.02222],\n    "9667": [-0.02778, 0.47222, 0, 0, 0.575],\n    "9711": [0.19444, 0.69444, 0, 0, 1.14999],\n    "9824": [0.12963, 0.69444, 0, 0, 0.89444],\n    "9825": [0.12963, 0.69444, 0, 0, 0.89444],\n    "9826": [0.12963, 0.69444, 0, 0, 0.89444],\n    "9827": [0.12963, 0.69444, 0, 0, 0.89444],\n    "9837": [0, 0.75, 0, 0, 0.44722],\n    "9838": [0.19444, 0.69444, 0, 0, 0.44722],\n    "9839": [0.19444, 0.69444, 0, 0, 0.44722],\n    "10216": [0.25, 0.75, 0, 0, 0.44722],\n    "10217": [0.25, 0.75, 0, 0, 0.44722],\n    "10815": [0, 0.68611, 0, 0, 0.9],\n    "10927": [0.19667, 0.69667, 0, 0, 0.89444],\n    "10928": [0.19667, 0.69667, 0, 0, 0.89444],\n    "57376": [0.19444, 0.69444, 0, 0, 0]\n  },\n  "Main-BoldItalic": {\n    "33": [0, 0.69444, 0.11417, 0, 0.38611],\n    "34": [0, 0.69444, 0.07939, 0, 0.62055],\n    "35": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    "37": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    "38": [0, 0.69444, 0.08528, 0, 0.88555],\n    "39": [0, 0.69444, 0.12945, 0, 0.35555],\n    "40": [0.25, 0.75, 0.15806, 0, 0.47333],\n    "41": [0.25, 0.75, 0.03306, 0, 0.47333],\n    "42": [0, 0.75, 0.14333, 0, 0.59111],\n    "43": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    "44": [0.19444, 0.14722, 0, 0, 0.35555],\n    "45": [0, 0.44444, 0.02611, 0, 0.41444],\n    "46": [0, 0.14722, 0, 0, 0.35555],\n    "47": [0.25, 0.75, 0.15806, 0, 0.59111],\n    "48": [0, 0.64444, 0.13167, 0, 0.59111],\n    "49": [0, 0.64444, 0.13167, 0, 0.59111],\n    "50": [0, 0.64444, 0.13167, 0, 0.59111],\n    "51": [0, 0.64444, 0.13167, 0, 0.59111],\n    "52": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    "53": [0, 0.64444, 0.13167, 0, 0.59111],\n    "54": [0, 0.64444, 0.13167, 0, 0.59111],\n    "55": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    "56": [0, 0.64444, 0.13167, 0, 0.59111],\n    "57": [0, 0.64444, 0.13167, 0, 0.59111],\n    "58": [0, 0.44444, 0.06695, 0, 0.35555],\n    "59": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    "61": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    "63": [0, 0.69444, 0.11472, 0, 0.59111],\n    "64": [0, 0.69444, 0.09208, 0, 0.88555],\n    "65": [0, 0.68611, 0, 0, 0.86555],\n    "66": [0, 0.68611, 0.0992, 0, 0.81666],\n    "67": [0, 0.68611, 0.14208, 0, 0.82666],\n    "68": [0, 0.68611, 0.09062, 0, 0.87555],\n    "69": [0, 0.68611, 0.11431, 0, 0.75666],\n    "70": [0, 0.68611, 0.12903, 0, 0.72722],\n    "71": [0, 0.68611, 0.07347, 0, 0.89527],\n    "72": [0, 0.68611, 0.17208, 0, 0.8961],\n    "73": [0, 0.68611, 0.15681, 0, 0.47166],\n    "74": [0, 0.68611, 0.145, 0, 0.61055],\n    "75": [0, 0.68611, 0.14208, 0, 0.89499],\n    "76": [0, 0.68611, 0, 0, 0.69777],\n    "77": [0, 0.68611, 0.17208, 0, 1.07277],\n    "78": [0, 0.68611, 0.17208, 0, 0.8961],\n    "79": [0, 0.68611, 0.09062, 0, 0.85499],\n    "80": [0, 0.68611, 0.0992, 0, 0.78721],\n    "81": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    "82": [0, 0.68611, 0.02559, 0, 0.85944],\n    "83": [0, 0.68611, 0.11264, 0, 0.64999],\n    "84": [0, 0.68611, 0.12903, 0, 0.7961],\n    "85": [0, 0.68611, 0.17208, 0, 0.88083],\n    "86": [0, 0.68611, 0.18625, 0, 0.86555],\n    "87": [0, 0.68611, 0.18625, 0, 1.15999],\n    "88": [0, 0.68611, 0.15681, 0, 0.86555],\n    "89": [0, 0.68611, 0.19803, 0, 0.86555],\n    "90": [0, 0.68611, 0.14208, 0, 0.70888],\n    "91": [0.25, 0.75, 0.1875, 0, 0.35611],\n    "93": [0.25, 0.75, 0.09972, 0, 0.35611],\n    "94": [0, 0.69444, 0.06709, 0, 0.59111],\n    "95": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    "97": [0, 0.44444, 0.09426, 0, 0.59111],\n    "98": [0, 0.69444, 0.07861, 0, 0.53222],\n    "99": [0, 0.44444, 0.05222, 0, 0.53222],\n    "100": [0, 0.69444, 0.10861, 0, 0.59111],\n    "101": [0, 0.44444, 0.085, 0, 0.53222],\n    "102": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    "103": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    "104": [0, 0.69444, 0.09426, 0, 0.59111],\n    "105": [0, 0.69326, 0.11387, 0, 0.35555],\n    "106": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    "107": [0, 0.69444, 0.11111, 0, 0.53222],\n    "108": [0, 0.69444, 0.10861, 0, 0.29666],\n    "109": [0, 0.44444, 0.09426, 0, 0.94444],\n    "110": [0, 0.44444, 0.09426, 0, 0.64999],\n    "111": [0, 0.44444, 0.07861, 0, 0.59111],\n    "112": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    "113": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    "114": [0, 0.44444, 0.11111, 0, 0.50167],\n    "115": [0, 0.44444, 0.08167, 0, 0.48694],\n    "116": [0, 0.63492, 0.09639, 0, 0.385],\n    "117": [0, 0.44444, 0.09426, 0, 0.62055],\n    "118": [0, 0.44444, 0.11111, 0, 0.53222],\n    "119": [0, 0.44444, 0.11111, 0, 0.76777],\n    "120": [0, 0.44444, 0.12583, 0, 0.56055],\n    "121": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    "122": [0, 0.44444, 0.13889, 0, 0.49055],\n    "126": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    "163": [0, 0.69444, 0, 0, 0.86853],\n    "168": [0, 0.69444, 0.11473, 0, 0.59111],\n    "176": [0, 0.69444, 0, 0, 0.94888],\n    "184": [0.17014, 0, 0, 0, 0.53222],\n    "198": [0, 0.68611, 0.11431, 0, 1.02277],\n    "216": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    "223": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    "230": [0, 0.44444, 0.085, 0, 0.82666],\n    "248": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    "305": [0, 0.44444, 0.09426, 0, 0.35555],\n    "338": [0, 0.68611, 0.11431, 0, 1.14054],\n    "339": [0, 0.44444, 0.085, 0, 0.82666],\n    "567": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    "710": [0, 0.69444, 0.06709, 0, 0.59111],\n    "711": [0, 0.63194, 0.08271, 0, 0.59111],\n    "713": [0, 0.59444, 0.10444, 0, 0.59111],\n    "714": [0, 0.69444, 0.08528, 0, 0.59111],\n    "715": [0, 0.69444, 0, 0, 0.59111],\n    "728": [0, 0.69444, 0.10333, 0, 0.59111],\n    "729": [0, 0.69444, 0.12945, 0, 0.35555],\n    "730": [0, 0.69444, 0, 0, 0.94888],\n    "732": [0, 0.69444, 0.11472, 0, 0.59111],\n    "733": [0, 0.69444, 0.11472, 0, 0.59111],\n    "915": [0, 0.68611, 0.12903, 0, 0.69777],\n    "916": [0, 0.68611, 0, 0, 0.94444],\n    "920": [0, 0.68611, 0.09062, 0, 0.88555],\n    "923": [0, 0.68611, 0, 0, 0.80666],\n    "926": [0, 0.68611, 0.15092, 0, 0.76777],\n    "928": [0, 0.68611, 0.17208, 0, 0.8961],\n    "931": [0, 0.68611, 0.11431, 0, 0.82666],\n    "933": [0, 0.68611, 0.10778, 0, 0.88555],\n    "934": [0, 0.68611, 0.05632, 0, 0.82666],\n    "936": [0, 0.68611, 0.10778, 0, 0.88555],\n    "937": [0, 0.68611, 0.0992, 0, 0.82666],\n    "8211": [0, 0.44444, 0.09811, 0, 0.59111],\n    "8212": [0, 0.44444, 0.09811, 0, 1.18221],\n    "8216": [0, 0.69444, 0.12945, 0, 0.35555],\n    "8217": [0, 0.69444, 0.12945, 0, 0.35555],\n    "8220": [0, 0.69444, 0.16772, 0, 0.62055],\n    "8221": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  "Main-Italic": {\n    "33": [0, 0.69444, 0.12417, 0, 0.30667],\n    "34": [0, 0.69444, 0.06961, 0, 0.51444],\n    "35": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    "37": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    "38": [0, 0.69444, 0.09694, 0, 0.76666],\n    "39": [0, 0.69444, 0.12417, 0, 0.30667],\n    "40": [0.25, 0.75, 0.16194, 0, 0.40889],\n    "41": [0.25, 0.75, 0.03694, 0, 0.40889],\n    "42": [0, 0.75, 0.14917, 0, 0.51111],\n    "43": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    "44": [0.19444, 0.10556, 0, 0, 0.30667],\n    "45": [0, 0.43056, 0.02826, 0, 0.35778],\n    "46": [0, 0.10556, 0, 0, 0.30667],\n    "47": [0.25, 0.75, 0.16194, 0, 0.51111],\n    "48": [0, 0.64444, 0.13556, 0, 0.51111],\n    "49": [0, 0.64444, 0.13556, 0, 0.51111],\n    "50": [0, 0.64444, 0.13556, 0, 0.51111],\n    "51": [0, 0.64444, 0.13556, 0, 0.51111],\n    "52": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    "53": [0, 0.64444, 0.13556, 0, 0.51111],\n    "54": [0, 0.64444, 0.13556, 0, 0.51111],\n    "55": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    "56": [0, 0.64444, 0.13556, 0, 0.51111],\n    "57": [0, 0.64444, 0.13556, 0, 0.51111],\n    "58": [0, 0.43056, 0.0582, 0, 0.30667],\n    "59": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    "61": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    "63": [0, 0.69444, 0.1225, 0, 0.51111],\n    "64": [0, 0.69444, 0.09597, 0, 0.76666],\n    "65": [0, 0.68333, 0, 0, 0.74333],\n    "66": [0, 0.68333, 0.10257, 0, 0.70389],\n    "67": [0, 0.68333, 0.14528, 0, 0.71555],\n    "68": [0, 0.68333, 0.09403, 0, 0.755],\n    "69": [0, 0.68333, 0.12028, 0, 0.67833],\n    "70": [0, 0.68333, 0.13305, 0, 0.65277],\n    "71": [0, 0.68333, 0.08722, 0, 0.77361],\n    "72": [0, 0.68333, 0.16389, 0, 0.74333],\n    "73": [0, 0.68333, 0.15806, 0, 0.38555],\n    "74": [0, 0.68333, 0.14028, 0, 0.525],\n    "75": [0, 0.68333, 0.14528, 0, 0.76888],\n    "76": [0, 0.68333, 0, 0, 0.62722],\n    "77": [0, 0.68333, 0.16389, 0, 0.89666],\n    "78": [0, 0.68333, 0.16389, 0, 0.74333],\n    "79": [0, 0.68333, 0.09403, 0, 0.76666],\n    "80": [0, 0.68333, 0.10257, 0, 0.67833],\n    "81": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    "82": [0, 0.68333, 0.03868, 0, 0.72944],\n    "83": [0, 0.68333, 0.11972, 0, 0.56222],\n    "84": [0, 0.68333, 0.13305, 0, 0.71555],\n    "85": [0, 0.68333, 0.16389, 0, 0.74333],\n    "86": [0, 0.68333, 0.18361, 0, 0.74333],\n    "87": [0, 0.68333, 0.18361, 0, 0.99888],\n    "88": [0, 0.68333, 0.15806, 0, 0.74333],\n    "89": [0, 0.68333, 0.19383, 0, 0.74333],\n    "90": [0, 0.68333, 0.14528, 0, 0.61333],\n    "91": [0.25, 0.75, 0.1875, 0, 0.30667],\n    "93": [0.25, 0.75, 0.10528, 0, 0.30667],\n    "94": [0, 0.69444, 0.06646, 0, 0.51111],\n    "95": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    "97": [0, 0.43056, 0.07671, 0, 0.51111],\n    "98": [0, 0.69444, 0.06312, 0, 0.46],\n    "99": [0, 0.43056, 0.05653, 0, 0.46],\n    "100": [0, 0.69444, 0.10333, 0, 0.51111],\n    "101": [0, 0.43056, 0.07514, 0, 0.46],\n    "102": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    "103": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    "104": [0, 0.69444, 0.07671, 0, 0.51111],\n    "105": [0, 0.65536, 0.1019, 0, 0.30667],\n    "106": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    "107": [0, 0.69444, 0.10764, 0, 0.46],\n    "108": [0, 0.69444, 0.10333, 0, 0.25555],\n    "109": [0, 0.43056, 0.07671, 0, 0.81777],\n    "110": [0, 0.43056, 0.07671, 0, 0.56222],\n    "111": [0, 0.43056, 0.06312, 0, 0.51111],\n    "112": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    "113": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    "114": [0, 0.43056, 0.10764, 0, 0.42166],\n    "115": [0, 0.43056, 0.08208, 0, 0.40889],\n    "116": [0, 0.61508, 0.09486, 0, 0.33222],\n    "117": [0, 0.43056, 0.07671, 0, 0.53666],\n    "118": [0, 0.43056, 0.10764, 0, 0.46],\n    "119": [0, 0.43056, 0.10764, 0, 0.66444],\n    "120": [0, 0.43056, 0.12042, 0, 0.46389],\n    "121": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    "122": [0, 0.43056, 0.12292, 0, 0.40889],\n    "126": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    "163": [0, 0.69444, 0, 0, 0.76909],\n    "168": [0, 0.66786, 0.10474, 0, 0.51111],\n    "176": [0, 0.69444, 0, 0, 0.83129],\n    "184": [0.17014, 0, 0, 0, 0.46],\n    "198": [0, 0.68333, 0.12028, 0, 0.88277],\n    "216": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    "223": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    "230": [0, 0.43056, 0.07514, 0, 0.71555],\n    "248": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    "305": [0, 0.43056, 0, 0.02778, 0.32246],\n    "338": [0, 0.68333, 0.12028, 0, 0.98499],\n    "339": [0, 0.43056, 0.07514, 0, 0.71555],\n    "567": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n    "710": [0, 0.69444, 0.06646, 0, 0.51111],\n    "711": [0, 0.62847, 0.08295, 0, 0.51111],\n    "713": [0, 0.56167, 0.10333, 0, 0.51111],\n    "714": [0, 0.69444, 0.09694, 0, 0.51111],\n    "715": [0, 0.69444, 0, 0, 0.51111],\n    "728": [0, 0.69444, 0.10806, 0, 0.51111],\n    "729": [0, 0.66786, 0.11752, 0, 0.30667],\n    "730": [0, 0.69444, 0, 0, 0.83129],\n    "732": [0, 0.66786, 0.11585, 0, 0.51111],\n    "733": [0, 0.69444, 0.1225, 0, 0.51111],\n    "915": [0, 0.68333, 0.13305, 0, 0.62722],\n    "916": [0, 0.68333, 0, 0, 0.81777],\n    "920": [0, 0.68333, 0.09403, 0, 0.76666],\n    "923": [0, 0.68333, 0, 0, 0.69222],\n    "926": [0, 0.68333, 0.15294, 0, 0.66444],\n    "928": [0, 0.68333, 0.16389, 0, 0.74333],\n    "931": [0, 0.68333, 0.12028, 0, 0.71555],\n    "933": [0, 0.68333, 0.11111, 0, 0.76666],\n    "934": [0, 0.68333, 0.05986, 0, 0.71555],\n    "936": [0, 0.68333, 0.11111, 0, 0.76666],\n    "937": [0, 0.68333, 0.10257, 0, 0.71555],\n    "8211": [0, 0.43056, 0.09208, 0, 0.51111],\n    "8212": [0, 0.43056, 0.09208, 0, 1.02222],\n    "8216": [0, 0.69444, 0.12417, 0, 0.30667],\n    "8217": [0, 0.69444, 0.12417, 0, 0.30667],\n    "8220": [0, 0.69444, 0.1685, 0, 0.51444],\n    "8221": [0, 0.69444, 0.06961, 0, 0.51444],\n    "8463": [0, 0.68889, 0, 0, 0.54028]\n  },\n  "Main-Regular": {\n    "32": [0, 0, 0, 0, 0.25],\n    "33": [0, 0.69444, 0, 0, 0.27778],\n    "34": [0, 0.69444, 0, 0, 0.5],\n    "35": [0.19444, 0.69444, 0, 0, 0.83334],\n    "36": [0.05556, 0.75, 0, 0, 0.5],\n    "37": [0.05556, 0.75, 0, 0, 0.83334],\n    "38": [0, 0.69444, 0, 0, 0.77778],\n    "39": [0, 0.69444, 0, 0, 0.27778],\n    "40": [0.25, 0.75, 0, 0, 0.38889],\n    "41": [0.25, 0.75, 0, 0, 0.38889],\n    "42": [0, 0.75, 0, 0, 0.5],\n    "43": [0.08333, 0.58333, 0, 0, 0.77778],\n    "44": [0.19444, 0.10556, 0, 0, 0.27778],\n    "45": [0, 0.43056, 0, 0, 0.33333],\n    "46": [0, 0.10556, 0, 0, 0.27778],\n    "47": [0.25, 0.75, 0, 0, 0.5],\n    "48": [0, 0.64444, 0, 0, 0.5],\n    "49": [0, 0.64444, 0, 0, 0.5],\n    "50": [0, 0.64444, 0, 0, 0.5],\n    "51": [0, 0.64444, 0, 0, 0.5],\n    "52": [0, 0.64444, 0, 0, 0.5],\n    "53": [0, 0.64444, 0, 0, 0.5],\n    "54": [0, 0.64444, 0, 0, 0.5],\n    "55": [0, 0.64444, 0, 0, 0.5],\n    "56": [0, 0.64444, 0, 0, 0.5],\n    "57": [0, 0.64444, 0, 0, 0.5],\n    "58": [0, 0.43056, 0, 0, 0.27778],\n    "59": [0.19444, 0.43056, 0, 0, 0.27778],\n    "60": [0.0391, 0.5391, 0, 0, 0.77778],\n    "61": [-0.13313, 0.36687, 0, 0, 0.77778],\n    "62": [0.0391, 0.5391, 0, 0, 0.77778],\n    "63": [0, 0.69444, 0, 0, 0.47222],\n    "64": [0, 0.69444, 0, 0, 0.77778],\n    "65": [0, 0.68333, 0, 0, 0.75],\n    "66": [0, 0.68333, 0, 0, 0.70834],\n    "67": [0, 0.68333, 0, 0, 0.72222],\n    "68": [0, 0.68333, 0, 0, 0.76389],\n    "69": [0, 0.68333, 0, 0, 0.68056],\n    "70": [0, 0.68333, 0, 0, 0.65278],\n    "71": [0, 0.68333, 0, 0, 0.78472],\n    "72": [0, 0.68333, 0, 0, 0.75],\n    "73": [0, 0.68333, 0, 0, 0.36111],\n    "74": [0, 0.68333, 0, 0, 0.51389],\n    "75": [0, 0.68333, 0, 0, 0.77778],\n    "76": [0, 0.68333, 0, 0, 0.625],\n    "77": [0, 0.68333, 0, 0, 0.91667],\n    "78": [0, 0.68333, 0, 0, 0.75],\n    "79": [0, 0.68333, 0, 0, 0.77778],\n    "80": [0, 0.68333, 0, 0, 0.68056],\n    "81": [0.19444, 0.68333, 0, 0, 0.77778],\n    "82": [0, 0.68333, 0, 0, 0.73611],\n    "83": [0, 0.68333, 0, 0, 0.55556],\n    "84": [0, 0.68333, 0, 0, 0.72222],\n    "85": [0, 0.68333, 0, 0, 0.75],\n    "86": [0, 0.68333, 0.01389, 0, 0.75],\n    "87": [0, 0.68333, 0.01389, 0, 1.02778],\n    "88": [0, 0.68333, 0, 0, 0.75],\n    "89": [0, 0.68333, 0.025, 0, 0.75],\n    "90": [0, 0.68333, 0, 0, 0.61111],\n    "91": [0.25, 0.75, 0, 0, 0.27778],\n    "92": [0.25, 0.75, 0, 0, 0.5],\n    "93": [0.25, 0.75, 0, 0, 0.27778],\n    "94": [0, 0.69444, 0, 0, 0.5],\n    "95": [0.31, 0.12056, 0.02778, 0, 0.5],\n    "97": [0, 0.43056, 0, 0, 0.5],\n    "98": [0, 0.69444, 0, 0, 0.55556],\n    "99": [0, 0.43056, 0, 0, 0.44445],\n    "100": [0, 0.69444, 0, 0, 0.55556],\n    "101": [0, 0.43056, 0, 0, 0.44445],\n    "102": [0, 0.69444, 0.07778, 0, 0.30556],\n    "103": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    "104": [0, 0.69444, 0, 0, 0.55556],\n    "105": [0, 0.66786, 0, 0, 0.27778],\n    "106": [0.19444, 0.66786, 0, 0, 0.30556],\n    "107": [0, 0.69444, 0, 0, 0.52778],\n    "108": [0, 0.69444, 0, 0, 0.27778],\n    "109": [0, 0.43056, 0, 0, 0.83334],\n    "110": [0, 0.43056, 0, 0, 0.55556],\n    "111": [0, 0.43056, 0, 0, 0.5],\n    "112": [0.19444, 0.43056, 0, 0, 0.55556],\n    "113": [0.19444, 0.43056, 0, 0, 0.52778],\n    "114": [0, 0.43056, 0, 0, 0.39167],\n    "115": [0, 0.43056, 0, 0, 0.39445],\n    "116": [0, 0.61508, 0, 0, 0.38889],\n    "117": [0, 0.43056, 0, 0, 0.55556],\n    "118": [0, 0.43056, 0.01389, 0, 0.52778],\n    "119": [0, 0.43056, 0.01389, 0, 0.72222],\n    "120": [0, 0.43056, 0, 0, 0.52778],\n    "121": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    "122": [0, 0.43056, 0, 0, 0.44445],\n    "123": [0.25, 0.75, 0, 0, 0.5],\n    "124": [0.25, 0.75, 0, 0, 0.27778],\n    "125": [0.25, 0.75, 0, 0, 0.5],\n    "126": [0.35, 0.31786, 0, 0, 0.5],\n    "160": [0, 0, 0, 0, 0.25],\n    "167": [0.19444, 0.69444, 0, 0, 0.44445],\n    "168": [0, 0.66786, 0, 0, 0.5],\n    "172": [0, 0.43056, 0, 0, 0.66667],\n    "176": [0, 0.69444, 0, 0, 0.75],\n    "177": [0.08333, 0.58333, 0, 0, 0.77778],\n    "182": [0.19444, 0.69444, 0, 0, 0.61111],\n    "184": [0.17014, 0, 0, 0, 0.44445],\n    "198": [0, 0.68333, 0, 0, 0.90278],\n    "215": [0.08333, 0.58333, 0, 0, 0.77778],\n    "216": [0.04861, 0.73194, 0, 0, 0.77778],\n    "223": [0, 0.69444, 0, 0, 0.5],\n    "230": [0, 0.43056, 0, 0, 0.72222],\n    "247": [0.08333, 0.58333, 0, 0, 0.77778],\n    "248": [0.09722, 0.52778, 0, 0, 0.5],\n    "305": [0, 0.43056, 0, 0, 0.27778],\n    "338": [0, 0.68333, 0, 0, 1.01389],\n    "339": [0, 0.43056, 0, 0, 0.77778],\n    "567": [0.19444, 0.43056, 0, 0, 0.30556],\n    "710": [0, 0.69444, 0, 0, 0.5],\n    "711": [0, 0.62847, 0, 0, 0.5],\n    "713": [0, 0.56778, 0, 0, 0.5],\n    "714": [0, 0.69444, 0, 0, 0.5],\n    "715": [0, 0.69444, 0, 0, 0.5],\n    "728": [0, 0.69444, 0, 0, 0.5],\n    "729": [0, 0.66786, 0, 0, 0.27778],\n    "730": [0, 0.69444, 0, 0, 0.75],\n    "732": [0, 0.66786, 0, 0, 0.5],\n    "733": [0, 0.69444, 0, 0, 0.5],\n    "915": [0, 0.68333, 0, 0, 0.625],\n    "916": [0, 0.68333, 0, 0, 0.83334],\n    "920": [0, 0.68333, 0, 0, 0.77778],\n    "923": [0, 0.68333, 0, 0, 0.69445],\n    "926": [0, 0.68333, 0, 0, 0.66667],\n    "928": [0, 0.68333, 0, 0, 0.75],\n    "931": [0, 0.68333, 0, 0, 0.72222],\n    "933": [0, 0.68333, 0, 0, 0.77778],\n    "934": [0, 0.68333, 0, 0, 0.72222],\n    "936": [0, 0.68333, 0, 0, 0.77778],\n    "937": [0, 0.68333, 0, 0, 0.72222],\n    "8211": [0, 0.43056, 0.02778, 0, 0.5],\n    "8212": [0, 0.43056, 0.02778, 0, 1.0],\n    "8216": [0, 0.69444, 0, 0, 0.27778],\n    "8217": [0, 0.69444, 0, 0, 0.27778],\n    "8220": [0, 0.69444, 0, 0, 0.5],\n    "8221": [0, 0.69444, 0, 0, 0.5],\n    "8224": [0.19444, 0.69444, 0, 0, 0.44445],\n    "8225": [0.19444, 0.69444, 0, 0, 0.44445],\n    "8230": [0, 0.12, 0, 0, 1.172],\n    "8242": [0, 0.55556, 0, 0, 0.275],\n    "8407": [0, 0.71444, 0.15382, 0, 0.5],\n    "8463": [0, 0.68889, 0, 0, 0.54028],\n    "8465": [0, 0.69444, 0, 0, 0.72222],\n    "8467": [0, 0.69444, 0, 0.11111, 0.41667],\n    "8472": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    "8476": [0, 0.69444, 0, 0, 0.72222],\n    "8501": [0, 0.69444, 0, 0, 0.61111],\n    "8592": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8593": [0.19444, 0.69444, 0, 0, 0.5],\n    "8594": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8595": [0.19444, 0.69444, 0, 0, 0.5],\n    "8596": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8597": [0.25, 0.75, 0, 0, 0.5],\n    "8598": [0.19444, 0.69444, 0, 0, 1.0],\n    "8599": [0.19444, 0.69444, 0, 0, 1.0],\n    "8600": [0.19444, 0.69444, 0, 0, 1.0],\n    "8601": [0.19444, 0.69444, 0, 0, 1.0],\n    "8614": [0.011, 0.511, 0, 0, 1.0],\n    "8617": [0.011, 0.511, 0, 0, 1.126],\n    "8618": [0.011, 0.511, 0, 0, 1.126],\n    "8636": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8637": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8640": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8641": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8652": [0.011, 0.671, 0, 0, 1.0],\n    "8656": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8657": [0.19444, 0.69444, 0, 0, 0.61111],\n    "8658": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8659": [0.19444, 0.69444, 0, 0, 0.61111],\n    "8660": [-0.13313, 0.36687, 0, 0, 1.0],\n    "8661": [0.25, 0.75, 0, 0, 0.61111],\n    "8704": [0, 0.69444, 0, 0, 0.55556],\n    "8706": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    "8707": [0, 0.69444, 0, 0, 0.55556],\n    "8709": [0.05556, 0.75, 0, 0, 0.5],\n    "8711": [0, 0.68333, 0, 0, 0.83334],\n    "8712": [0.0391, 0.5391, 0, 0, 0.66667],\n    "8715": [0.0391, 0.5391, 0, 0, 0.66667],\n    "8722": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8723": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8725": [0.25, 0.75, 0, 0, 0.5],\n    "8726": [0.25, 0.75, 0, 0, 0.5],\n    "8727": [-0.03472, 0.46528, 0, 0, 0.5],\n    "8728": [-0.05555, 0.44445, 0, 0, 0.5],\n    "8729": [-0.05555, 0.44445, 0, 0, 0.5],\n    "8730": [0.2, 0.8, 0, 0, 0.83334],\n    "8733": [0, 0.43056, 0, 0, 0.77778],\n    "8734": [0, 0.43056, 0, 0, 1.0],\n    "8736": [0, 0.69224, 0, 0, 0.72222],\n    "8739": [0.25, 0.75, 0, 0, 0.27778],\n    "8741": [0.25, 0.75, 0, 0, 0.5],\n    "8743": [0, 0.55556, 0, 0, 0.66667],\n    "8744": [0, 0.55556, 0, 0, 0.66667],\n    "8745": [0, 0.55556, 0, 0, 0.66667],\n    "8746": [0, 0.55556, 0, 0, 0.66667],\n    "8747": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    "8764": [-0.13313, 0.36687, 0, 0, 0.77778],\n    "8768": [0.19444, 0.69444, 0, 0, 0.27778],\n    "8771": [-0.03625, 0.46375, 0, 0, 0.77778],\n    "8773": [-0.022, 0.589, 0, 0, 1.0],\n    "8776": [-0.01688, 0.48312, 0, 0, 0.77778],\n    "8781": [-0.03625, 0.46375, 0, 0, 0.77778],\n    "8784": [-0.133, 0.67, 0, 0, 0.778],\n    "8801": [-0.03625, 0.46375, 0, 0, 0.77778],\n    "8804": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8805": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8810": [0.0391, 0.5391, 0, 0, 1.0],\n    "8811": [0.0391, 0.5391, 0, 0, 1.0],\n    "8826": [0.0391, 0.5391, 0, 0, 0.77778],\n    "8827": [0.0391, 0.5391, 0, 0, 0.77778],\n    "8834": [0.0391, 0.5391, 0, 0, 0.77778],\n    "8835": [0.0391, 0.5391, 0, 0, 0.77778],\n    "8838": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8839": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8846": [0, 0.55556, 0, 0, 0.66667],\n    "8849": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8850": [0.13597, 0.63597, 0, 0, 0.77778],\n    "8851": [0, 0.55556, 0, 0, 0.66667],\n    "8852": [0, 0.55556, 0, 0, 0.66667],\n    "8853": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8854": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8855": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8856": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8857": [0.08333, 0.58333, 0, 0, 0.77778],\n    "8866": [0, 0.69444, 0, 0, 0.61111],\n    "8867": [0, 0.69444, 0, 0, 0.61111],\n    "8868": [0, 0.69444, 0, 0, 0.77778],\n    "8869": [0, 0.69444, 0, 0, 0.77778],\n    "8872": [0.249, 0.75, 0, 0, 0.867],\n    "8900": [-0.05555, 0.44445, 0, 0, 0.5],\n    "8901": [-0.05555, 0.44445, 0, 0, 0.27778],\n    "8902": [-0.03472, 0.46528, 0, 0, 0.5],\n    "8904": [0.005, 0.505, 0, 0, 0.9],\n    "8942": [0.03, 0.9, 0, 0, 0.278],\n    "8943": [-0.19, 0.31, 0, 0, 1.172],\n    "8945": [-0.1, 0.82, 0, 0, 1.282],\n    "8968": [0.25, 0.75, 0, 0, 0.44445],\n    "8969": [0.25, 0.75, 0, 0, 0.44445],\n    "8970": [0.25, 0.75, 0, 0, 0.44445],\n    "8971": [0.25, 0.75, 0, 0, 0.44445],\n    "8994": [-0.14236, 0.35764, 0, 0, 1.0],\n    "8995": [-0.14236, 0.35764, 0, 0, 1.0],\n    "9136": [0.244, 0.744, 0, 0, 0.412],\n    "9137": [0.244, 0.744, 0, 0, 0.412],\n    "9651": [0.19444, 0.69444, 0, 0, 0.88889],\n    "9657": [-0.03472, 0.46528, 0, 0, 0.5],\n    "9661": [0.19444, 0.69444, 0, 0, 0.88889],\n    "9667": [-0.03472, 0.46528, 0, 0, 0.5],\n    "9711": [0.19444, 0.69444, 0, 0, 1.0],\n    "9824": [0.12963, 0.69444, 0, 0, 0.77778],\n    "9825": [0.12963, 0.69444, 0, 0, 0.77778],\n    "9826": [0.12963, 0.69444, 0, 0, 0.77778],\n    "9827": [0.12963, 0.69444, 0, 0, 0.77778],\n    "9837": [0, 0.75, 0, 0, 0.38889],\n    "9838": [0.19444, 0.69444, 0, 0, 0.38889],\n    "9839": [0.19444, 0.69444, 0, 0, 0.38889],\n    "10216": [0.25, 0.75, 0, 0, 0.38889],\n    "10217": [0.25, 0.75, 0, 0, 0.38889],\n    "10222": [0.244, 0.744, 0, 0, 0.412],\n    "10223": [0.244, 0.744, 0, 0, 0.412],\n    "10229": [0.011, 0.511, 0, 0, 1.609],\n    "10230": [0.011, 0.511, 0, 0, 1.638],\n    "10231": [0.011, 0.511, 0, 0, 1.859],\n    "10232": [0.024, 0.525, 0, 0, 1.609],\n    "10233": [0.024, 0.525, 0, 0, 1.638],\n    "10234": [0.024, 0.525, 0, 0, 1.858],\n    "10236": [0.011, 0.511, 0, 0, 1.638],\n    "10815": [0, 0.68333, 0, 0, 0.75],\n    "10927": [0.13597, 0.63597, 0, 0, 0.77778],\n    "10928": [0.13597, 0.63597, 0, 0, 0.77778],\n    "57376": [0.19444, 0.69444, 0, 0, 0]\n  },\n  "Math-BoldItalic": {\n    "65": [0, 0.68611, 0, 0, 0.86944],\n    "66": [0, 0.68611, 0.04835, 0, 0.8664],\n    "67": [0, 0.68611, 0.06979, 0, 0.81694],\n    "68": [0, 0.68611, 0.03194, 0, 0.93812],\n    "69": [0, 0.68611, 0.05451, 0, 0.81007],\n    "70": [0, 0.68611, 0.15972, 0, 0.68889],\n    "71": [0, 0.68611, 0, 0, 0.88673],\n    "72": [0, 0.68611, 0.08229, 0, 0.98229],\n    "73": [0, 0.68611, 0.07778, 0, 0.51111],\n    "74": [0, 0.68611, 0.10069, 0, 0.63125],\n    "75": [0, 0.68611, 0.06979, 0, 0.97118],\n    "76": [0, 0.68611, 0, 0, 0.75555],\n    "77": [0, 0.68611, 0.11424, 0, 1.14201],\n    "78": [0, 0.68611, 0.11424, 0, 0.95034],\n    "79": [0, 0.68611, 0.03194, 0, 0.83666],\n    "80": [0, 0.68611, 0.15972, 0, 0.72309],\n    "81": [0.19444, 0.68611, 0, 0, 0.86861],\n    "82": [0, 0.68611, 0.00421, 0, 0.87235],\n    "83": [0, 0.68611, 0.05382, 0, 0.69271],\n    "84": [0, 0.68611, 0.15972, 0, 0.63663],\n    "85": [0, 0.68611, 0.11424, 0, 0.80027],\n    "86": [0, 0.68611, 0.25555, 0, 0.67778],\n    "87": [0, 0.68611, 0.15972, 0, 1.09305],\n    "88": [0, 0.68611, 0.07778, 0, 0.94722],\n    "89": [0, 0.68611, 0.25555, 0, 0.67458],\n    "90": [0, 0.68611, 0.06979, 0, 0.77257],\n    "97": [0, 0.44444, 0, 0, 0.63287],\n    "98": [0, 0.69444, 0, 0, 0.52083],\n    "99": [0, 0.44444, 0, 0, 0.51342],\n    "100": [0, 0.69444, 0, 0, 0.60972],\n    "101": [0, 0.44444, 0, 0, 0.55361],\n    "102": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    "103": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    "104": [0, 0.69444, 0, 0, 0.66759],\n    "105": [0, 0.69326, 0, 0, 0.4048],\n    "106": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    "107": [0, 0.69444, 0.01852, 0, 0.6037],\n    "108": [0, 0.69444, 0.0088, 0, 0.34815],\n    "109": [0, 0.44444, 0, 0, 1.0324],\n    "110": [0, 0.44444, 0, 0, 0.71296],\n    "111": [0, 0.44444, 0, 0, 0.58472],\n    "112": [0.19444, 0.44444, 0, 0, 0.60092],\n    "113": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    "114": [0, 0.44444, 0.03194, 0, 0.5287],\n    "115": [0, 0.44444, 0, 0, 0.53125],\n    "116": [0, 0.63492, 0, 0, 0.41528],\n    "117": [0, 0.44444, 0, 0, 0.68102],\n    "118": [0, 0.44444, 0.03704, 0, 0.56666],\n    "119": [0, 0.44444, 0.02778, 0, 0.83148],\n    "120": [0, 0.44444, 0, 0, 0.65903],\n    "121": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    "122": [0, 0.44444, 0.04213, 0, 0.55509],\n    "915": [0, 0.68611, 0.15972, 0, 0.65694],\n    "916": [0, 0.68611, 0, 0, 0.95833],\n    "920": [0, 0.68611, 0.03194, 0, 0.86722],\n    "923": [0, 0.68611, 0, 0, 0.80555],\n    "926": [0, 0.68611, 0.07458, 0, 0.84125],\n    "928": [0, 0.68611, 0.08229, 0, 0.98229],\n    "931": [0, 0.68611, 0.05451, 0, 0.88507],\n    "933": [0, 0.68611, 0.15972, 0, 0.67083],\n    "934": [0, 0.68611, 0, 0, 0.76666],\n    "936": [0, 0.68611, 0.11653, 0, 0.71402],\n    "937": [0, 0.68611, 0.04835, 0, 0.8789],\n    "945": [0, 0.44444, 0, 0, 0.76064],\n    "946": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    "947": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    "948": [0, 0.69444, 0.03819, 0, 0.52222],\n    "949": [0, 0.44444, 0, 0, 0.52882],\n    "950": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    "951": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    "952": [0, 0.69444, 0.03194, 0, 0.5618],\n    "953": [0, 0.44444, 0, 0, 0.41204],\n    "954": [0, 0.44444, 0, 0, 0.66759],\n    "955": [0, 0.69444, 0, 0, 0.67083],\n    "956": [0.19444, 0.44444, 0, 0, 0.70787],\n    "957": [0, 0.44444, 0.06898, 0, 0.57685],\n    "958": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    "959": [0, 0.44444, 0, 0, 0.58472],\n    "960": [0, 0.44444, 0.03704, 0, 0.68241],\n    "961": [0.19444, 0.44444, 0, 0, 0.6118],\n    "962": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    "963": [0, 0.44444, 0.03704, 0, 0.68588],\n    "964": [0, 0.44444, 0.13472, 0, 0.52083],\n    "965": [0, 0.44444, 0.03704, 0, 0.63055],\n    "966": [0.19444, 0.44444, 0, 0, 0.74722],\n    "967": [0.19444, 0.44444, 0, 0, 0.71805],\n    "968": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    "969": [0, 0.44444, 0.03704, 0, 0.71782],\n    "977": [0, 0.69444, 0, 0, 0.69155],\n    "981": [0.19444, 0.69444, 0, 0, 0.7125],\n    "982": [0, 0.44444, 0.03194, 0, 0.975],\n    "1009": [0.19444, 0.44444, 0, 0, 0.6118],\n    "1013": [0, 0.44444, 0, 0, 0.48333]\n  },\n  "Math-Italic": {\n    "65": [0, 0.68333, 0, 0.13889, 0.75],\n    "66": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    "67": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    "68": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    "69": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    "70": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    "71": [0, 0.68333, 0, 0.08334, 0.78625],\n    "72": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    "73": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    "74": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    "75": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    "76": [0, 0.68333, 0, 0.02778, 0.68056],\n    "77": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    "78": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    "79": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    "80": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    "81": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    "82": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    "83": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    "84": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    "85": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    "86": [0, 0.68333, 0.22222, 0, 0.58333],\n    "87": [0, 0.68333, 0.13889, 0, 0.94445],\n    "88": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    "89": [0, 0.68333, 0.22222, 0, 0.58056],\n    "90": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    "97": [0, 0.43056, 0, 0, 0.52859],\n    "98": [0, 0.69444, 0, 0, 0.42917],\n    "99": [0, 0.43056, 0, 0.05556, 0.43276],\n    "100": [0, 0.69444, 0, 0.16667, 0.52049],\n    "101": [0, 0.43056, 0, 0.05556, 0.46563],\n    "102": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    "103": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    "104": [0, 0.69444, 0, 0, 0.57616],\n    "105": [0, 0.65952, 0, 0, 0.34451],\n    "106": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    "107": [0, 0.69444, 0.03148, 0, 0.5206],\n    "108": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    "109": [0, 0.43056, 0, 0, 0.87801],\n    "110": [0, 0.43056, 0, 0, 0.60023],\n    "111": [0, 0.43056, 0, 0.05556, 0.48472],\n    "112": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    "113": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    "114": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    "115": [0, 0.43056, 0, 0.05556, 0.46875],\n    "116": [0, 0.61508, 0, 0.08334, 0.36111],\n    "117": [0, 0.43056, 0, 0.02778, 0.57246],\n    "118": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    "119": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    "120": [0, 0.43056, 0, 0.02778, 0.57153],\n    "121": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    "122": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    "915": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    "916": [0, 0.68333, 0, 0.16667, 0.83334],\n    "920": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    "923": [0, 0.68333, 0, 0.16667, 0.69445],\n    "926": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    "928": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    "931": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    "933": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    "934": [0, 0.68333, 0, 0.08334, 0.66667],\n    "936": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    "937": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    "945": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    "946": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    "947": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    "948": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    "949": [0, 0.43056, 0, 0.08334, 0.46632],\n    "950": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    "951": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    "952": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    "953": [0, 0.43056, 0, 0.05556, 0.35394],\n    "954": [0, 0.43056, 0, 0, 0.57616],\n    "955": [0, 0.69444, 0, 0, 0.58334],\n    "956": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    "957": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    "958": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    "959": [0, 0.43056, 0, 0.05556, 0.48472],\n    "960": [0, 0.43056, 0.03588, 0, 0.57003],\n    "961": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    "962": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    "963": [0, 0.43056, 0.03588, 0, 0.57141],\n    "964": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    "965": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    "966": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    "967": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    "968": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    "969": [0, 0.43056, 0.03588, 0, 0.62245],\n    "977": [0, 0.69444, 0, 0.08334, 0.59144],\n    "981": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    "982": [0, 0.43056, 0.02778, 0, 0.82813],\n    "1009": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    "1013": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  "Math-Regular": {\n    "65": [0, 0.68333, 0, 0.13889, 0.75],\n    "66": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    "67": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    "68": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    "69": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    "70": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    "71": [0, 0.68333, 0, 0.08334, 0.78625],\n    "72": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    "73": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    "74": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    "75": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    "76": [0, 0.68333, 0, 0.02778, 0.68056],\n    "77": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    "78": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    "79": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    "80": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    "81": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    "82": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    "83": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    "84": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    "85": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    "86": [0, 0.68333, 0.22222, 0, 0.58333],\n    "87": [0, 0.68333, 0.13889, 0, 0.94445],\n    "88": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    "89": [0, 0.68333, 0.22222, 0, 0.58056],\n    "90": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    "97": [0, 0.43056, 0, 0, 0.52859],\n    "98": [0, 0.69444, 0, 0, 0.42917],\n    "99": [0, 0.43056, 0, 0.05556, 0.43276],\n    "100": [0, 0.69444, 0, 0.16667, 0.52049],\n    "101": [0, 0.43056, 0, 0.05556, 0.46563],\n    "102": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    "103": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    "104": [0, 0.69444, 0, 0, 0.57616],\n    "105": [0, 0.65952, 0, 0, 0.34451],\n    "106": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    "107": [0, 0.69444, 0.03148, 0, 0.5206],\n    "108": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    "109": [0, 0.43056, 0, 0, 0.87801],\n    "110": [0, 0.43056, 0, 0, 0.60023],\n    "111": [0, 0.43056, 0, 0.05556, 0.48472],\n    "112": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    "113": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    "114": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    "115": [0, 0.43056, 0, 0.05556, 0.46875],\n    "116": [0, 0.61508, 0, 0.08334, 0.36111],\n    "117": [0, 0.43056, 0, 0.02778, 0.57246],\n    "118": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    "119": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    "120": [0, 0.43056, 0, 0.02778, 0.57153],\n    "121": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    "122": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    "915": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    "916": [0, 0.68333, 0, 0.16667, 0.83334],\n    "920": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    "923": [0, 0.68333, 0, 0.16667, 0.69445],\n    "926": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    "928": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    "931": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    "933": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    "934": [0, 0.68333, 0, 0.08334, 0.66667],\n    "936": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    "937": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    "945": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    "946": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    "947": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    "948": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    "949": [0, 0.43056, 0, 0.08334, 0.46632],\n    "950": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    "951": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    "952": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    "953": [0, 0.43056, 0, 0.05556, 0.35394],\n    "954": [0, 0.43056, 0, 0, 0.57616],\n    "955": [0, 0.69444, 0, 0, 0.58334],\n    "956": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    "957": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    "958": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    "959": [0, 0.43056, 0, 0.05556, 0.48472],\n    "960": [0, 0.43056, 0.03588, 0, 0.57003],\n    "961": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    "962": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    "963": [0, 0.43056, 0.03588, 0, 0.57141],\n    "964": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    "965": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    "966": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    "967": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    "968": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    "969": [0, 0.43056, 0.03588, 0, 0.62245],\n    "977": [0, 0.69444, 0, 0.08334, 0.59144],\n    "981": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    "982": [0, 0.43056, 0.02778, 0, 0.82813],\n    "1009": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    "1013": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  "SansSerif-Bold": {\n    "33": [0, 0.69444, 0, 0, 0.36667],\n    "34": [0, 0.69444, 0, 0, 0.55834],\n    "35": [0.19444, 0.69444, 0, 0, 0.91667],\n    "36": [0.05556, 0.75, 0, 0, 0.55],\n    "37": [0.05556, 0.75, 0, 0, 1.02912],\n    "38": [0, 0.69444, 0, 0, 0.83056],\n    "39": [0, 0.69444, 0, 0, 0.30556],\n    "40": [0.25, 0.75, 0, 0, 0.42778],\n    "41": [0.25, 0.75, 0, 0, 0.42778],\n    "42": [0, 0.75, 0, 0, 0.55],\n    "43": [0.11667, 0.61667, 0, 0, 0.85556],\n    "44": [0.10556, 0.13056, 0, 0, 0.30556],\n    "45": [0, 0.45833, 0, 0, 0.36667],\n    "46": [0, 0.13056, 0, 0, 0.30556],\n    "47": [0.25, 0.75, 0, 0, 0.55],\n    "48": [0, 0.69444, 0, 0, 0.55],\n    "49": [0, 0.69444, 0, 0, 0.55],\n    "50": [0, 0.69444, 0, 0, 0.55],\n    "51": [0, 0.69444, 0, 0, 0.55],\n    "52": [0, 0.69444, 0, 0, 0.55],\n    "53": [0, 0.69444, 0, 0, 0.55],\n    "54": [0, 0.69444, 0, 0, 0.55],\n    "55": [0, 0.69444, 0, 0, 0.55],\n    "56": [0, 0.69444, 0, 0, 0.55],\n    "57": [0, 0.69444, 0, 0, 0.55],\n    "58": [0, 0.45833, 0, 0, 0.30556],\n    "59": [0.10556, 0.45833, 0, 0, 0.30556],\n    "61": [-0.09375, 0.40625, 0, 0, 0.85556],\n    "63": [0, 0.69444, 0, 0, 0.51945],\n    "64": [0, 0.69444, 0, 0, 0.73334],\n    "65": [0, 0.69444, 0, 0, 0.73334],\n    "66": [0, 0.69444, 0, 0, 0.73334],\n    "67": [0, 0.69444, 0, 0, 0.70278],\n    "68": [0, 0.69444, 0, 0, 0.79445],\n    "69": [0, 0.69444, 0, 0, 0.64167],\n    "70": [0, 0.69444, 0, 0, 0.61111],\n    "71": [0, 0.69444, 0, 0, 0.73334],\n    "72": [0, 0.69444, 0, 0, 0.79445],\n    "73": [0, 0.69444, 0, 0, 0.33056],\n    "74": [0, 0.69444, 0, 0, 0.51945],\n    "75": [0, 0.69444, 0, 0, 0.76389],\n    "76": [0, 0.69444, 0, 0, 0.58056],\n    "77": [0, 0.69444, 0, 0, 0.97778],\n    "78": [0, 0.69444, 0, 0, 0.79445],\n    "79": [0, 0.69444, 0, 0, 0.79445],\n    "80": [0, 0.69444, 0, 0, 0.70278],\n    "81": [0.10556, 0.69444, 0, 0, 0.79445],\n    "82": [0, 0.69444, 0, 0, 0.70278],\n    "83": [0, 0.69444, 0, 0, 0.61111],\n    "84": [0, 0.69444, 0, 0, 0.73334],\n    "85": [0, 0.69444, 0, 0, 0.76389],\n    "86": [0, 0.69444, 0.01528, 0, 0.73334],\n    "87": [0, 0.69444, 0.01528, 0, 1.03889],\n    "88": [0, 0.69444, 0, 0, 0.73334],\n    "89": [0, 0.69444, 0.0275, 0, 0.73334],\n    "90": [0, 0.69444, 0, 0, 0.67223],\n    "91": [0.25, 0.75, 0, 0, 0.34306],\n    "93": [0.25, 0.75, 0, 0, 0.34306],\n    "94": [0, 0.69444, 0, 0, 0.55],\n    "95": [0.35, 0.10833, 0.03056, 0, 0.55],\n    "97": [0, 0.45833, 0, 0, 0.525],\n    "98": [0, 0.69444, 0, 0, 0.56111],\n    "99": [0, 0.45833, 0, 0, 0.48889],\n    "100": [0, 0.69444, 0, 0, 0.56111],\n    "101": [0, 0.45833, 0, 0, 0.51111],\n    "102": [0, 0.69444, 0.07639, 0, 0.33611],\n    "103": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    "104": [0, 0.69444, 0, 0, 0.56111],\n    "105": [0, 0.69444, 0, 0, 0.25556],\n    "106": [0.19444, 0.69444, 0, 0, 0.28611],\n    "107": [0, 0.69444, 0, 0, 0.53056],\n    "108": [0, 0.69444, 0, 0, 0.25556],\n    "109": [0, 0.45833, 0, 0, 0.86667],\n    "110": [0, 0.45833, 0, 0, 0.56111],\n    "111": [0, 0.45833, 0, 0, 0.55],\n    "112": [0.19444, 0.45833, 0, 0, 0.56111],\n    "113": [0.19444, 0.45833, 0, 0, 0.56111],\n    "114": [0, 0.45833, 0.01528, 0, 0.37222],\n    "115": [0, 0.45833, 0, 0, 0.42167],\n    "116": [0, 0.58929, 0, 0, 0.40417],\n    "117": [0, 0.45833, 0, 0, 0.56111],\n    "118": [0, 0.45833, 0.01528, 0, 0.5],\n    "119": [0, 0.45833, 0.01528, 0, 0.74445],\n    "120": [0, 0.45833, 0, 0, 0.5],\n    "121": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    "122": [0, 0.45833, 0, 0, 0.47639],\n    "126": [0.35, 0.34444, 0, 0, 0.55],\n    "168": [0, 0.69444, 0, 0, 0.55],\n    "176": [0, 0.69444, 0, 0, 0.73334],\n    "180": [0, 0.69444, 0, 0, 0.55],\n    "184": [0.17014, 0, 0, 0, 0.48889],\n    "305": [0, 0.45833, 0, 0, 0.25556],\n    "567": [0.19444, 0.45833, 0, 0, 0.28611],\n    "710": [0, 0.69444, 0, 0, 0.55],\n    "711": [0, 0.63542, 0, 0, 0.55],\n    "713": [0, 0.63778, 0, 0, 0.55],\n    "728": [0, 0.69444, 0, 0, 0.55],\n    "729": [0, 0.69444, 0, 0, 0.30556],\n    "730": [0, 0.69444, 0, 0, 0.73334],\n    "732": [0, 0.69444, 0, 0, 0.55],\n    "733": [0, 0.69444, 0, 0, 0.55],\n    "915": [0, 0.69444, 0, 0, 0.58056],\n    "916": [0, 0.69444, 0, 0, 0.91667],\n    "920": [0, 0.69444, 0, 0, 0.85556],\n    "923": [0, 0.69444, 0, 0, 0.67223],\n    "926": [0, 0.69444, 0, 0, 0.73334],\n    "928": [0, 0.69444, 0, 0, 0.79445],\n    "931": [0, 0.69444, 0, 0, 0.79445],\n    "933": [0, 0.69444, 0, 0, 0.85556],\n    "934": [0, 0.69444, 0, 0, 0.79445],\n    "936": [0, 0.69444, 0, 0, 0.85556],\n    "937": [0, 0.69444, 0, 0, 0.79445],\n    "8211": [0, 0.45833, 0.03056, 0, 0.55],\n    "8212": [0, 0.45833, 0.03056, 0, 1.10001],\n    "8216": [0, 0.69444, 0, 0, 0.30556],\n    "8217": [0, 0.69444, 0, 0, 0.30556],\n    "8220": [0, 0.69444, 0, 0, 0.55834],\n    "8221": [0, 0.69444, 0, 0, 0.55834]\n  },\n  "SansSerif-Italic": {\n    "33": [0, 0.69444, 0.05733, 0, 0.31945],\n    "34": [0, 0.69444, 0.00316, 0, 0.5],\n    "35": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    "36": [0.05556, 0.75, 0.11156, 0, 0.5],\n    "37": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    "38": [0, 0.69444, 0.03058, 0, 0.75834],\n    "39": [0, 0.69444, 0.07816, 0, 0.27778],\n    "40": [0.25, 0.75, 0.13164, 0, 0.38889],\n    "41": [0.25, 0.75, 0.02536, 0, 0.38889],\n    "42": [0, 0.75, 0.11775, 0, 0.5],\n    "43": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    "44": [0.125, 0.08333, 0, 0, 0.27778],\n    "45": [0, 0.44444, 0.01946, 0, 0.33333],\n    "46": [0, 0.08333, 0, 0, 0.27778],\n    "47": [0.25, 0.75, 0.13164, 0, 0.5],\n    "48": [0, 0.65556, 0.11156, 0, 0.5],\n    "49": [0, 0.65556, 0.11156, 0, 0.5],\n    "50": [0, 0.65556, 0.11156, 0, 0.5],\n    "51": [0, 0.65556, 0.11156, 0, 0.5],\n    "52": [0, 0.65556, 0.11156, 0, 0.5],\n    "53": [0, 0.65556, 0.11156, 0, 0.5],\n    "54": [0, 0.65556, 0.11156, 0, 0.5],\n    "55": [0, 0.65556, 0.11156, 0, 0.5],\n    "56": [0, 0.65556, 0.11156, 0, 0.5],\n    "57": [0, 0.65556, 0.11156, 0, 0.5],\n    "58": [0, 0.44444, 0.02502, 0, 0.27778],\n    "59": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    "61": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    "63": [0, 0.69444, 0.11809, 0, 0.47222],\n    "64": [0, 0.69444, 0.07555, 0, 0.66667],\n    "65": [0, 0.69444, 0, 0, 0.66667],\n    "66": [0, 0.69444, 0.08293, 0, 0.66667],\n    "67": [0, 0.69444, 0.11983, 0, 0.63889],\n    "68": [0, 0.69444, 0.07555, 0, 0.72223],\n    "69": [0, 0.69444, 0.11983, 0, 0.59722],\n    "70": [0, 0.69444, 0.13372, 0, 0.56945],\n    "71": [0, 0.69444, 0.11983, 0, 0.66667],\n    "72": [0, 0.69444, 0.08094, 0, 0.70834],\n    "73": [0, 0.69444, 0.13372, 0, 0.27778],\n    "74": [0, 0.69444, 0.08094, 0, 0.47222],\n    "75": [0, 0.69444, 0.11983, 0, 0.69445],\n    "76": [0, 0.69444, 0, 0, 0.54167],\n    "77": [0, 0.69444, 0.08094, 0, 0.875],\n    "78": [0, 0.69444, 0.08094, 0, 0.70834],\n    "79": [0, 0.69444, 0.07555, 0, 0.73611],\n    "80": [0, 0.69444, 0.08293, 0, 0.63889],\n    "81": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    "82": [0, 0.69444, 0.08293, 0, 0.64584],\n    "83": [0, 0.69444, 0.09205, 0, 0.55556],\n    "84": [0, 0.69444, 0.13372, 0, 0.68056],\n    "85": [0, 0.69444, 0.08094, 0, 0.6875],\n    "86": [0, 0.69444, 0.1615, 0, 0.66667],\n    "87": [0, 0.69444, 0.1615, 0, 0.94445],\n    "88": [0, 0.69444, 0.13372, 0, 0.66667],\n    "89": [0, 0.69444, 0.17261, 0, 0.66667],\n    "90": [0, 0.69444, 0.11983, 0, 0.61111],\n    "91": [0.25, 0.75, 0.15942, 0, 0.28889],\n    "93": [0.25, 0.75, 0.08719, 0, 0.28889],\n    "94": [0, 0.69444, 0.0799, 0, 0.5],\n    "95": [0.35, 0.09444, 0.08616, 0, 0.5],\n    "97": [0, 0.44444, 0.00981, 0, 0.48056],\n    "98": [0, 0.69444, 0.03057, 0, 0.51667],\n    "99": [0, 0.44444, 0.08336, 0, 0.44445],\n    "100": [0, 0.69444, 0.09483, 0, 0.51667],\n    "101": [0, 0.44444, 0.06778, 0, 0.44445],\n    "102": [0, 0.69444, 0.21705, 0, 0.30556],\n    "103": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    "104": [0, 0.69444, 0.01778, 0, 0.51667],\n    "105": [0, 0.67937, 0.09718, 0, 0.23889],\n    "106": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    "107": [0, 0.69444, 0.08336, 0, 0.48889],\n    "108": [0, 0.69444, 0.09483, 0, 0.23889],\n    "109": [0, 0.44444, 0.01778, 0, 0.79445],\n    "110": [0, 0.44444, 0.01778, 0, 0.51667],\n    "111": [0, 0.44444, 0.06613, 0, 0.5],\n    "112": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    "113": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    "114": [0, 0.44444, 0.10836, 0, 0.34167],\n    "115": [0, 0.44444, 0.0778, 0, 0.38333],\n    "116": [0, 0.57143, 0.07225, 0, 0.36111],\n    "117": [0, 0.44444, 0.04169, 0, 0.51667],\n    "118": [0, 0.44444, 0.10836, 0, 0.46111],\n    "119": [0, 0.44444, 0.10836, 0, 0.68334],\n    "120": [0, 0.44444, 0.09169, 0, 0.46111],\n    "121": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    "122": [0, 0.44444, 0.08752, 0, 0.43472],\n    "126": [0.35, 0.32659, 0.08826, 0, 0.5],\n    "168": [0, 0.67937, 0.06385, 0, 0.5],\n    "176": [0, 0.69444, 0, 0, 0.73752],\n    "184": [0.17014, 0, 0, 0, 0.44445],\n    "305": [0, 0.44444, 0.04169, 0, 0.23889],\n    "567": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    "710": [0, 0.69444, 0.0799, 0, 0.5],\n    "711": [0, 0.63194, 0.08432, 0, 0.5],\n    "713": [0, 0.60889, 0.08776, 0, 0.5],\n    "714": [0, 0.69444, 0.09205, 0, 0.5],\n    "715": [0, 0.69444, 0, 0, 0.5],\n    "728": [0, 0.69444, 0.09483, 0, 0.5],\n    "729": [0, 0.67937, 0.07774, 0, 0.27778],\n    "730": [0, 0.69444, 0, 0, 0.73752],\n    "732": [0, 0.67659, 0.08826, 0, 0.5],\n    "733": [0, 0.69444, 0.09205, 0, 0.5],\n    "915": [0, 0.69444, 0.13372, 0, 0.54167],\n    "916": [0, 0.69444, 0, 0, 0.83334],\n    "920": [0, 0.69444, 0.07555, 0, 0.77778],\n    "923": [0, 0.69444, 0, 0, 0.61111],\n    "926": [0, 0.69444, 0.12816, 0, 0.66667],\n    "928": [0, 0.69444, 0.08094, 0, 0.70834],\n    "931": [0, 0.69444, 0.11983, 0, 0.72222],\n    "933": [0, 0.69444, 0.09031, 0, 0.77778],\n    "934": [0, 0.69444, 0.04603, 0, 0.72222],\n    "936": [0, 0.69444, 0.09031, 0, 0.77778],\n    "937": [0, 0.69444, 0.08293, 0, 0.72222],\n    "8211": [0, 0.44444, 0.08616, 0, 0.5],\n    "8212": [0, 0.44444, 0.08616, 0, 1.0],\n    "8216": [0, 0.69444, 0.07816, 0, 0.27778],\n    "8217": [0, 0.69444, 0.07816, 0, 0.27778],\n    "8220": [0, 0.69444, 0.14205, 0, 0.5],\n    "8221": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  "SansSerif-Regular": {\n    "33": [0, 0.69444, 0, 0, 0.31945],\n    "34": [0, 0.69444, 0, 0, 0.5],\n    "35": [0.19444, 0.69444, 0, 0, 0.83334],\n    "36": [0.05556, 0.75, 0, 0, 0.5],\n    "37": [0.05556, 0.75, 0, 0, 0.83334],\n    "38": [0, 0.69444, 0, 0, 0.75834],\n    "39": [0, 0.69444, 0, 0, 0.27778],\n    "40": [0.25, 0.75, 0, 0, 0.38889],\n    "41": [0.25, 0.75, 0, 0, 0.38889],\n    "42": [0, 0.75, 0, 0, 0.5],\n    "43": [0.08333, 0.58333, 0, 0, 0.77778],\n    "44": [0.125, 0.08333, 0, 0, 0.27778],\n    "45": [0, 0.44444, 0, 0, 0.33333],\n    "46": [0, 0.08333, 0, 0, 0.27778],\n    "47": [0.25, 0.75, 0, 0, 0.5],\n    "48": [0, 0.65556, 0, 0, 0.5],\n    "49": [0, 0.65556, 0, 0, 0.5],\n    "50": [0, 0.65556, 0, 0, 0.5],\n    "51": [0, 0.65556, 0, 0, 0.5],\n    "52": [0, 0.65556, 0, 0, 0.5],\n    "53": [0, 0.65556, 0, 0, 0.5],\n    "54": [0, 0.65556, 0, 0, 0.5],\n    "55": [0, 0.65556, 0, 0, 0.5],\n    "56": [0, 0.65556, 0, 0, 0.5],\n    "57": [0, 0.65556, 0, 0, 0.5],\n    "58": [0, 0.44444, 0, 0, 0.27778],\n    "59": [0.125, 0.44444, 0, 0, 0.27778],\n    "61": [-0.13, 0.37, 0, 0, 0.77778],\n    "63": [0, 0.69444, 0, 0, 0.47222],\n    "64": [0, 0.69444, 0, 0, 0.66667],\n    "65": [0, 0.69444, 0, 0, 0.66667],\n    "66": [0, 0.69444, 0, 0, 0.66667],\n    "67": [0, 0.69444, 0, 0, 0.63889],\n    "68": [0, 0.69444, 0, 0, 0.72223],\n    "69": [0, 0.69444, 0, 0, 0.59722],\n    "70": [0, 0.69444, 0, 0, 0.56945],\n    "71": [0, 0.69444, 0, 0, 0.66667],\n    "72": [0, 0.69444, 0, 0, 0.70834],\n    "73": [0, 0.69444, 0, 0, 0.27778],\n    "74": [0, 0.69444, 0, 0, 0.47222],\n    "75": [0, 0.69444, 0, 0, 0.69445],\n    "76": [0, 0.69444, 0, 0, 0.54167],\n    "77": [0, 0.69444, 0, 0, 0.875],\n    "78": [0, 0.69444, 0, 0, 0.70834],\n    "79": [0, 0.69444, 0, 0, 0.73611],\n    "80": [0, 0.69444, 0, 0, 0.63889],\n    "81": [0.125, 0.69444, 0, 0, 0.73611],\n    "82": [0, 0.69444, 0, 0, 0.64584],\n    "83": [0, 0.69444, 0, 0, 0.55556],\n    "84": [0, 0.69444, 0, 0, 0.68056],\n    "85": [0, 0.69444, 0, 0, 0.6875],\n    "86": [0, 0.69444, 0.01389, 0, 0.66667],\n    "87": [0, 0.69444, 0.01389, 0, 0.94445],\n    "88": [0, 0.69444, 0, 0, 0.66667],\n    "89": [0, 0.69444, 0.025, 0, 0.66667],\n    "90": [0, 0.69444, 0, 0, 0.61111],\n    "91": [0.25, 0.75, 0, 0, 0.28889],\n    "93": [0.25, 0.75, 0, 0, 0.28889],\n    "94": [0, 0.69444, 0, 0, 0.5],\n    "95": [0.35, 0.09444, 0.02778, 0, 0.5],\n    "97": [0, 0.44444, 0, 0, 0.48056],\n    "98": [0, 0.69444, 0, 0, 0.51667],\n    "99": [0, 0.44444, 0, 0, 0.44445],\n    "100": [0, 0.69444, 0, 0, 0.51667],\n    "101": [0, 0.44444, 0, 0, 0.44445],\n    "102": [0, 0.69444, 0.06944, 0, 0.30556],\n    "103": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    "104": [0, 0.69444, 0, 0, 0.51667],\n    "105": [0, 0.67937, 0, 0, 0.23889],\n    "106": [0.19444, 0.67937, 0, 0, 0.26667],\n    "107": [0, 0.69444, 0, 0, 0.48889],\n    "108": [0, 0.69444, 0, 0, 0.23889],\n    "109": [0, 0.44444, 0, 0, 0.79445],\n    "110": [0, 0.44444, 0, 0, 0.51667],\n    "111": [0, 0.44444, 0, 0, 0.5],\n    "112": [0.19444, 0.44444, 0, 0, 0.51667],\n    "113": [0.19444, 0.44444, 0, 0, 0.51667],\n    "114": [0, 0.44444, 0.01389, 0, 0.34167],\n    "115": [0, 0.44444, 0, 0, 0.38333],\n    "116": [0, 0.57143, 0, 0, 0.36111],\n    "117": [0, 0.44444, 0, 0, 0.51667],\n    "118": [0, 0.44444, 0.01389, 0, 0.46111],\n    "119": [0, 0.44444, 0.01389, 0, 0.68334],\n    "120": [0, 0.44444, 0, 0, 0.46111],\n    "121": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    "122": [0, 0.44444, 0, 0, 0.43472],\n    "126": [0.35, 0.32659, 0, 0, 0.5],\n    "168": [0, 0.67937, 0, 0, 0.5],\n    "176": [0, 0.69444, 0, 0, 0.66667],\n    "184": [0.17014, 0, 0, 0, 0.44445],\n    "305": [0, 0.44444, 0, 0, 0.23889],\n    "567": [0.19444, 0.44444, 0, 0, 0.26667],\n    "710": [0, 0.69444, 0, 0, 0.5],\n    "711": [0, 0.63194, 0, 0, 0.5],\n    "713": [0, 0.60889, 0, 0, 0.5],\n    "714": [0, 0.69444, 0, 0, 0.5],\n    "715": [0, 0.69444, 0, 0, 0.5],\n    "728": [0, 0.69444, 0, 0, 0.5],\n    "729": [0, 0.67937, 0, 0, 0.27778],\n    "730": [0, 0.69444, 0, 0, 0.66667],\n    "732": [0, 0.67659, 0, 0, 0.5],\n    "733": [0, 0.69444, 0, 0, 0.5],\n    "915": [0, 0.69444, 0, 0, 0.54167],\n    "916": [0, 0.69444, 0, 0, 0.83334],\n    "920": [0, 0.69444, 0, 0, 0.77778],\n    "923": [0, 0.69444, 0, 0, 0.61111],\n    "926": [0, 0.69444, 0, 0, 0.66667],\n    "928": [0, 0.69444, 0, 0, 0.70834],\n    "931": [0, 0.69444, 0, 0, 0.72222],\n    "933": [0, 0.69444, 0, 0, 0.77778],\n    "934": [0, 0.69444, 0, 0, 0.72222],\n    "936": [0, 0.69444, 0, 0, 0.77778],\n    "937": [0, 0.69444, 0, 0, 0.72222],\n    "8211": [0, 0.44444, 0.02778, 0, 0.5],\n    "8212": [0, 0.44444, 0.02778, 0, 1.0],\n    "8216": [0, 0.69444, 0, 0, 0.27778],\n    "8217": [0, 0.69444, 0, 0, 0.27778],\n    "8220": [0, 0.69444, 0, 0, 0.5],\n    "8221": [0, 0.69444, 0, 0, 0.5]\n  },\n  "Script-Regular": {\n    "65": [0, 0.7, 0.22925, 0, 0.80253],\n    "66": [0, 0.7, 0.04087, 0, 0.90757],\n    "67": [0, 0.7, 0.1689, 0, 0.66619],\n    "68": [0, 0.7, 0.09371, 0, 0.77443],\n    "69": [0, 0.7, 0.18583, 0, 0.56162],\n    "70": [0, 0.7, 0.13634, 0, 0.89544],\n    "71": [0, 0.7, 0.17322, 0, 0.60961],\n    "72": [0, 0.7, 0.29694, 0, 0.96919],\n    "73": [0, 0.7, 0.19189, 0, 0.80907],\n    "74": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    "75": [0, 0.7, 0.31259, 0, 0.91364],\n    "76": [0, 0.7, 0.19189, 0, 0.87373],\n    "77": [0, 0.7, 0.15981, 0, 1.08031],\n    "78": [0, 0.7, 0.3525, 0, 0.9015],\n    "79": [0, 0.7, 0.08078, 0, 0.73787],\n    "80": [0, 0.7, 0.08078, 0, 1.01262],\n    "81": [0, 0.7, 0.03305, 0, 0.88282],\n    "82": [0, 0.7, 0.06259, 0, 0.85],\n    "83": [0, 0.7, 0.19189, 0, 0.86767],\n    "84": [0, 0.7, 0.29087, 0, 0.74697],\n    "85": [0, 0.7, 0.25815, 0, 0.79996],\n    "86": [0, 0.7, 0.27523, 0, 0.62204],\n    "87": [0, 0.7, 0.27523, 0, 0.80532],\n    "88": [0, 0.7, 0.26006, 0, 0.94445],\n    "89": [0, 0.7, 0.2939, 0, 0.70961],\n    "90": [0, 0.7, 0.24037, 0, 0.8212]\n  },\n  "Size1-Regular": {\n    "40": [0.35001, 0.85, 0, 0, 0.45834],\n    "41": [0.35001, 0.85, 0, 0, 0.45834],\n    "47": [0.35001, 0.85, 0, 0, 0.57778],\n    "91": [0.35001, 0.85, 0, 0, 0.41667],\n    "92": [0.35001, 0.85, 0, 0, 0.57778],\n    "93": [0.35001, 0.85, 0, 0, 0.41667],\n    "123": [0.35001, 0.85, 0, 0, 0.58334],\n    "125": [0.35001, 0.85, 0, 0, 0.58334],\n    "710": [0, 0.72222, 0, 0, 0.55556],\n    "732": [0, 0.72222, 0, 0, 0.55556],\n    "770": [0, 0.72222, 0, 0, 0.55556],\n    "771": [0, 0.72222, 0, 0, 0.55556],\n    "8214": [-0.00099, 0.601, 0, 0, 0.77778],\n    "8593": [1e-05, 0.6, 0, 0, 0.66667],\n    "8595": [1e-05, 0.6, 0, 0, 0.66667],\n    "8657": [1e-05, 0.6, 0, 0, 0.77778],\n    "8659": [1e-05, 0.6, 0, 0, 0.77778],\n    "8719": [0.25001, 0.75, 0, 0, 0.94445],\n    "8720": [0.25001, 0.75, 0, 0, 0.94445],\n    "8721": [0.25001, 0.75, 0, 0, 1.05556],\n    "8730": [0.35001, 0.85, 0, 0, 1.0],\n    "8739": [-0.00599, 0.606, 0, 0, 0.33333],\n    "8741": [-0.00599, 0.606, 0, 0, 0.55556],\n    "8747": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    "8748": [0.306, 0.805, 0.19445, 0, 0.47222],\n    "8749": [0.306, 0.805, 0.19445, 0, 0.47222],\n    "8750": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    "8896": [0.25001, 0.75, 0, 0, 0.83334],\n    "8897": [0.25001, 0.75, 0, 0, 0.83334],\n    "8898": [0.25001, 0.75, 0, 0, 0.83334],\n    "8899": [0.25001, 0.75, 0, 0, 0.83334],\n    "8968": [0.35001, 0.85, 0, 0, 0.47222],\n    "8969": [0.35001, 0.85, 0, 0, 0.47222],\n    "8970": [0.35001, 0.85, 0, 0, 0.47222],\n    "8971": [0.35001, 0.85, 0, 0, 0.47222],\n    "9168": [-0.00099, 0.601, 0, 0, 0.66667],\n    "10216": [0.35001, 0.85, 0, 0, 0.47222],\n    "10217": [0.35001, 0.85, 0, 0, 0.47222],\n    "10752": [0.25001, 0.75, 0, 0, 1.11111],\n    "10753": [0.25001, 0.75, 0, 0, 1.11111],\n    "10754": [0.25001, 0.75, 0, 0, 1.11111],\n    "10756": [0.25001, 0.75, 0, 0, 0.83334],\n    "10758": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  "Size2-Regular": {\n    "40": [0.65002, 1.15, 0, 0, 0.59722],\n    "41": [0.65002, 1.15, 0, 0, 0.59722],\n    "47": [0.65002, 1.15, 0, 0, 0.81111],\n    "91": [0.65002, 1.15, 0, 0, 0.47222],\n    "92": [0.65002, 1.15, 0, 0, 0.81111],\n    "93": [0.65002, 1.15, 0, 0, 0.47222],\n    "123": [0.65002, 1.15, 0, 0, 0.66667],\n    "125": [0.65002, 1.15, 0, 0, 0.66667],\n    "710": [0, 0.75, 0, 0, 1.0],\n    "732": [0, 0.75, 0, 0, 1.0],\n    "770": [0, 0.75, 0, 0, 1.0],\n    "771": [0, 0.75, 0, 0, 1.0],\n    "8719": [0.55001, 1.05, 0, 0, 1.27778],\n    "8720": [0.55001, 1.05, 0, 0, 1.27778],\n    "8721": [0.55001, 1.05, 0, 0, 1.44445],\n    "8730": [0.65002, 1.15, 0, 0, 1.0],\n    "8747": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    "8748": [0.862, 1.36, 0.44445, 0, 0.55556],\n    "8749": [0.862, 1.36, 0.44445, 0, 0.55556],\n    "8750": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    "8896": [0.55001, 1.05, 0, 0, 1.11111],\n    "8897": [0.55001, 1.05, 0, 0, 1.11111],\n    "8898": [0.55001, 1.05, 0, 0, 1.11111],\n    "8899": [0.55001, 1.05, 0, 0, 1.11111],\n    "8968": [0.65002, 1.15, 0, 0, 0.52778],\n    "8969": [0.65002, 1.15, 0, 0, 0.52778],\n    "8970": [0.65002, 1.15, 0, 0, 0.52778],\n    "8971": [0.65002, 1.15, 0, 0, 0.52778],\n    "10216": [0.65002, 1.15, 0, 0, 0.61111],\n    "10217": [0.65002, 1.15, 0, 0, 0.61111],\n    "10752": [0.55001, 1.05, 0, 0, 1.51112],\n    "10753": [0.55001, 1.05, 0, 0, 1.51112],\n    "10754": [0.55001, 1.05, 0, 0, 1.51112],\n    "10756": [0.55001, 1.05, 0, 0, 1.11111],\n    "10758": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  "Size3-Regular": {\n    "40": [0.95003, 1.45, 0, 0, 0.73611],\n    "41": [0.95003, 1.45, 0, 0, 0.73611],\n    "47": [0.95003, 1.45, 0, 0, 1.04445],\n    "91": [0.95003, 1.45, 0, 0, 0.52778],\n    "92": [0.95003, 1.45, 0, 0, 1.04445],\n    "93": [0.95003, 1.45, 0, 0, 0.52778],\n    "123": [0.95003, 1.45, 0, 0, 0.75],\n    "125": [0.95003, 1.45, 0, 0, 0.75],\n    "710": [0, 0.75, 0, 0, 1.44445],\n    "732": [0, 0.75, 0, 0, 1.44445],\n    "770": [0, 0.75, 0, 0, 1.44445],\n    "771": [0, 0.75, 0, 0, 1.44445],\n    "8730": [0.95003, 1.45, 0, 0, 1.0],\n    "8968": [0.95003, 1.45, 0, 0, 0.58334],\n    "8969": [0.95003, 1.45, 0, 0, 0.58334],\n    "8970": [0.95003, 1.45, 0, 0, 0.58334],\n    "8971": [0.95003, 1.45, 0, 0, 0.58334],\n    "10216": [0.95003, 1.45, 0, 0, 0.75],\n    "10217": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  "Size4-Regular": {\n    "40": [1.25003, 1.75, 0, 0, 0.79167],\n    "41": [1.25003, 1.75, 0, 0, 0.79167],\n    "47": [1.25003, 1.75, 0, 0, 1.27778],\n    "91": [1.25003, 1.75, 0, 0, 0.58334],\n    "92": [1.25003, 1.75, 0, 0, 1.27778],\n    "93": [1.25003, 1.75, 0, 0, 0.58334],\n    "123": [1.25003, 1.75, 0, 0, 0.80556],\n    "125": [1.25003, 1.75, 0, 0, 0.80556],\n    "710": [0, 0.825, 0, 0, 1.8889],\n    "732": [0, 0.825, 0, 0, 1.8889],\n    "770": [0, 0.825, 0, 0, 1.8889],\n    "771": [0, 0.825, 0, 0, 1.8889],\n    "8730": [1.25003, 1.75, 0, 0, 1.0],\n    "8968": [1.25003, 1.75, 0, 0, 0.63889],\n    "8969": [1.25003, 1.75, 0, 0, 0.63889],\n    "8970": [1.25003, 1.75, 0, 0, 0.63889],\n    "8971": [1.25003, 1.75, 0, 0, 0.63889],\n    "9115": [0.64502, 1.155, 0, 0, 0.875],\n    "9116": [1e-05, 0.6, 0, 0, 0.875],\n    "9117": [0.64502, 1.155, 0, 0, 0.875],\n    "9118": [0.64502, 1.155, 0, 0, 0.875],\n    "9119": [1e-05, 0.6, 0, 0, 0.875],\n    "9120": [0.64502, 1.155, 0, 0, 0.875],\n    "9121": [0.64502, 1.155, 0, 0, 0.66667],\n    "9122": [-0.00099, 0.601, 0, 0, 0.66667],\n    "9123": [0.64502, 1.155, 0, 0, 0.66667],\n    "9124": [0.64502, 1.155, 0, 0, 0.66667],\n    "9125": [-0.00099, 0.601, 0, 0, 0.66667],\n    "9126": [0.64502, 1.155, 0, 0, 0.66667],\n    "9127": [1e-05, 0.9, 0, 0, 0.88889],\n    "9128": [0.65002, 1.15, 0, 0, 0.88889],\n    "9129": [0.90001, 0, 0, 0, 0.88889],\n    "9130": [0, 0.3, 0, 0, 0.88889],\n    "9131": [1e-05, 0.9, 0, 0, 0.88889],\n    "9132": [0.65002, 1.15, 0, 0, 0.88889],\n    "9133": [0.90001, 0, 0, 0, 0.88889],\n    "9143": [0.88502, 0.915, 0, 0, 1.05556],\n    "10216": [1.25003, 1.75, 0, 0, 0.80556],\n    "10217": [1.25003, 1.75, 0, 0, 0.80556],\n    "57344": [-0.00499, 0.605, 0, 0, 1.05556],\n    "57345": [-0.00499, 0.605, 0, 0, 1.05556],\n    "57680": [0, 0.12, 0, 0, 0.45],\n    "57681": [0, 0.12, 0, 0, 0.45],\n    "57682": [0, 0.12, 0, 0, 0.45],\n    "57683": [0, 0.12, 0, 0, 0.45]\n  },\n  "Typewriter-Regular": {\n    "32": [0, 0, 0, 0, 0.525],\n    "33": [0, 0.61111, 0, 0, 0.525],\n    "34": [0, 0.61111, 0, 0, 0.525],\n    "35": [0, 0.61111, 0, 0, 0.525],\n    "36": [0.08333, 0.69444, 0, 0, 0.525],\n    "37": [0.08333, 0.69444, 0, 0, 0.525],\n    "38": [0, 0.61111, 0, 0, 0.525],\n    "39": [0, 0.61111, 0, 0, 0.525],\n    "40": [0.08333, 0.69444, 0, 0, 0.525],\n    "41": [0.08333, 0.69444, 0, 0, 0.525],\n    "42": [0, 0.52083, 0, 0, 0.525],\n    "43": [-0.08056, 0.53055, 0, 0, 0.525],\n    "44": [0.13889, 0.125, 0, 0, 0.525],\n    "45": [-0.08056, 0.53055, 0, 0, 0.525],\n    "46": [0, 0.125, 0, 0, 0.525],\n    "47": [0.08333, 0.69444, 0, 0, 0.525],\n    "48": [0, 0.61111, 0, 0, 0.525],\n    "49": [0, 0.61111, 0, 0, 0.525],\n    "50": [0, 0.61111, 0, 0, 0.525],\n    "51": [0, 0.61111, 0, 0, 0.525],\n    "52": [0, 0.61111, 0, 0, 0.525],\n    "53": [0, 0.61111, 0, 0, 0.525],\n    "54": [0, 0.61111, 0, 0, 0.525],\n    "55": [0, 0.61111, 0, 0, 0.525],\n    "56": [0, 0.61111, 0, 0, 0.525],\n    "57": [0, 0.61111, 0, 0, 0.525],\n    "58": [0, 0.43056, 0, 0, 0.525],\n    "59": [0.13889, 0.43056, 0, 0, 0.525],\n    "60": [-0.05556, 0.55556, 0, 0, 0.525],\n    "61": [-0.19549, 0.41562, 0, 0, 0.525],\n    "62": [-0.05556, 0.55556, 0, 0, 0.525],\n    "63": [0, 0.61111, 0, 0, 0.525],\n    "64": [0, 0.61111, 0, 0, 0.525],\n    "65": [0, 0.61111, 0, 0, 0.525],\n    "66": [0, 0.61111, 0, 0, 0.525],\n    "67": [0, 0.61111, 0, 0, 0.525],\n    "68": [0, 0.61111, 0, 0, 0.525],\n    "69": [0, 0.61111, 0, 0, 0.525],\n    "70": [0, 0.61111, 0, 0, 0.525],\n    "71": [0, 0.61111, 0, 0, 0.525],\n    "72": [0, 0.61111, 0, 0, 0.525],\n    "73": [0, 0.61111, 0, 0, 0.525],\n    "74": [0, 0.61111, 0, 0, 0.525],\n    "75": [0, 0.61111, 0, 0, 0.525],\n    "76": [0, 0.61111, 0, 0, 0.525],\n    "77": [0, 0.61111, 0, 0, 0.525],\n    "78": [0, 0.61111, 0, 0, 0.525],\n    "79": [0, 0.61111, 0, 0, 0.525],\n    "80": [0, 0.61111, 0, 0, 0.525],\n    "81": [0.13889, 0.61111, 0, 0, 0.525],\n    "82": [0, 0.61111, 0, 0, 0.525],\n    "83": [0, 0.61111, 0, 0, 0.525],\n    "84": [0, 0.61111, 0, 0, 0.525],\n    "85": [0, 0.61111, 0, 0, 0.525],\n    "86": [0, 0.61111, 0, 0, 0.525],\n    "87": [0, 0.61111, 0, 0, 0.525],\n    "88": [0, 0.61111, 0, 0, 0.525],\n    "89": [0, 0.61111, 0, 0, 0.525],\n    "90": [0, 0.61111, 0, 0, 0.525],\n    "91": [0.08333, 0.69444, 0, 0, 0.525],\n    "92": [0.08333, 0.69444, 0, 0, 0.525],\n    "93": [0.08333, 0.69444, 0, 0, 0.525],\n    "94": [0, 0.61111, 0, 0, 0.525],\n    "95": [0.09514, 0, 0, 0, 0.525],\n    "96": [0, 0.61111, 0, 0, 0.525],\n    "97": [0, 0.43056, 0, 0, 0.525],\n    "98": [0, 0.61111, 0, 0, 0.525],\n    "99": [0, 0.43056, 0, 0, 0.525],\n    "100": [0, 0.61111, 0, 0, 0.525],\n    "101": [0, 0.43056, 0, 0, 0.525],\n    "102": [0, 0.61111, 0, 0, 0.525],\n    "103": [0.22222, 0.43056, 0, 0, 0.525],\n    "104": [0, 0.61111, 0, 0, 0.525],\n    "105": [0, 0.61111, 0, 0, 0.525],\n    "106": [0.22222, 0.61111, 0, 0, 0.525],\n    "107": [0, 0.61111, 0, 0, 0.525],\n    "108": [0, 0.61111, 0, 0, 0.525],\n    "109": [0, 0.43056, 0, 0, 0.525],\n    "110": [0, 0.43056, 0, 0, 0.525],\n    "111": [0, 0.43056, 0, 0, 0.525],\n    "112": [0.22222, 0.43056, 0, 0, 0.525],\n    "113": [0.22222, 0.43056, 0, 0, 0.525],\n    "114": [0, 0.43056, 0, 0, 0.525],\n    "115": [0, 0.43056, 0, 0, 0.525],\n    "116": [0, 0.55358, 0, 0, 0.525],\n    "117": [0, 0.43056, 0, 0, 0.525],\n    "118": [0, 0.43056, 0, 0, 0.525],\n    "119": [0, 0.43056, 0, 0, 0.525],\n    "120": [0, 0.43056, 0, 0, 0.525],\n    "121": [0.22222, 0.43056, 0, 0, 0.525],\n    "122": [0, 0.43056, 0, 0, 0.525],\n    "123": [0.08333, 0.69444, 0, 0, 0.525],\n    "124": [0.08333, 0.69444, 0, 0, 0.525],\n    "125": [0.08333, 0.69444, 0, 0, 0.525],\n    "126": [0, 0.61111, 0, 0, 0.525],\n    "127": [0, 0.61111, 0, 0, 0.525],\n    "160": [0, 0, 0, 0, 0.525],\n    "176": [0, 0.61111, 0, 0, 0.525],\n    "184": [0.19445, 0, 0, 0, 0.525],\n    "305": [0, 0.43056, 0, 0, 0.525],\n    "567": [0.22222, 0.43056, 0, 0, 0.525],\n    "711": [0, 0.56597, 0, 0, 0.525],\n    "713": [0, 0.56555, 0, 0, 0.525],\n    "714": [0, 0.61111, 0, 0, 0.525],\n    "715": [0, 0.61111, 0, 0, 0.525],\n    "728": [0, 0.61111, 0, 0, 0.525],\n    "730": [0, 0.61111, 0, 0, 0.525],\n    "770": [0, 0.61111, 0, 0, 0.525],\n    "771": [0, 0.61111, 0, 0, 0.525],\n    "776": [0, 0.61111, 0, 0, 0.525],\n    "915": [0, 0.61111, 0, 0, 0.525],\n    "916": [0, 0.61111, 0, 0, 0.525],\n    "920": [0, 0.61111, 0, 0, 0.525],\n    "923": [0, 0.61111, 0, 0, 0.525],\n    "926": [0, 0.61111, 0, 0, 0.525],\n    "928": [0, 0.61111, 0, 0, 0.525],\n    "931": [0, 0.61111, 0, 0, 0.525],\n    "933": [0, 0.61111, 0, 0, 0.525],\n    "934": [0, 0.61111, 0, 0, 0.525],\n    "936": [0, 0.61111, 0, 0, 0.525],\n    "937": [0, 0.61111, 0, 0, 0.525],\n    "8216": [0, 0.61111, 0, 0, 0.525],\n    "8217": [0, 0.61111, 0, 0, 0.525],\n    "8242": [0, 0.61111, 0, 0, 0.525],\n    "9251": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n});\n// CONCATENATED MODULE: ./src/fontMetrics.js\n\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     \'\\documentclass{article}\\usepackage{amsmath}\\begin{document}\' \\\n//     \'$a$ \\expandafter\\show\\the\\textfont2\' \\\n//     \'\\expandafter\\show\\the\\scriptfont2\' \\\n//     \'\\expandafter\\show\\the\\scriptscriptfont2\' \\\n//     \'\\stop\'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we\'d use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn\'t scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2]\n}; // This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n // These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nvar extraCharacterMap = {\n  // Latin-1\n  \'Å\': \'A\',\n  \'Ç\': \'C\',\n  \'Ð\': \'D\',\n  \'Þ\': \'o\',\n  \'å\': \'a\',\n  \'ç\': \'c\',\n  \'ð\': \'d\',\n  \'þ\': \'o\',\n  // Cyrillic\n  \'А\': \'A\',\n  \'Б\': \'B\',\n  \'В\': \'B\',\n  \'Г\': \'F\',\n  \'Д\': \'A\',\n  \'Е\': \'E\',\n  \'Ж\': \'K\',\n  \'З\': \'3\',\n  \'И\': \'N\',\n  \'Й\': \'N\',\n  \'К\': \'K\',\n  \'Л\': \'N\',\n  \'М\': \'M\',\n  \'Н\': \'H\',\n  \'О\': \'O\',\n  \'П\': \'N\',\n  \'Р\': \'P\',\n  \'С\': \'C\',\n  \'Т\': \'T\',\n  \'У\': \'y\',\n  \'Ф\': \'O\',\n  \'Х\': \'X\',\n  \'Ц\': \'U\',\n  \'Ч\': \'h\',\n  \'Ш\': \'W\',\n  \'Щ\': \'W\',\n  \'Ъ\': \'B\',\n  \'Ы\': \'X\',\n  \'Ь\': \'B\',\n  \'Э\': \'3\',\n  \'Ю\': \'X\',\n  \'Я\': \'R\',\n  \'а\': \'a\',\n  \'б\': \'b\',\n  \'в\': \'a\',\n  \'г\': \'r\',\n  \'д\': \'y\',\n  \'е\': \'e\',\n  \'ж\': \'m\',\n  \'з\': \'e\',\n  \'и\': \'n\',\n  \'й\': \'n\',\n  \'к\': \'n\',\n  \'л\': \'n\',\n  \'м\': \'m\',\n  \'н\': \'n\',\n  \'о\': \'o\',\n  \'п\': \'n\',\n  \'р\': \'p\',\n  \'с\': \'c\',\n  \'т\': \'o\',\n  \'у\': \'y\',\n  \'ф\': \'b\',\n  \'х\': \'x\',\n  \'ц\': \'n\',\n  \'ч\': \'n\',\n  \'ш\': \'w\',\n  \'щ\': \'w\',\n  \'ъ\': \'a\',\n  \'ы\': \'m\',\n  \'ь\': \'a\',\n  \'э\': \'e\',\n  \'ю\': \'m\',\n  \'я\': \'r\'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn\'t\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error("Font metrics not found for font: " + font + ".");\n  }\n\n  var ch = character.charCodeAt(0);\n\n  if (character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n  }\n\n  var metrics = fontMetricsData[font][ch];\n\n  if (!metrics && mode === \'text\') {\n    // We don\'t typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don\'t have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for \'M\'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nvar fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  var sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (var key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n// CONCATENATED MODULE: ./src/symbols.js\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like \'a\' or \';\').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either "main" (the\n     normal font), or "ams" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     "textord", "mathord", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. "\\phi" has a replace value of "\\u03d5", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. "math" or "text").\n */\n// Some of these have a "-token" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nvar ATOMS = {\n  "bin": 1,\n  "close": 1,\n  "inner": 1,\n  "open": 1,\n  "punct": 1,\n  "rel": 1\n};\nvar NON_ATOMS = {\n  "accent-token": 1,\n  "mathord": 1,\n  "op-token": 1,\n  "spacing": 1,\n  "textord": 1\n};\nvar symbols = {\n  "math": {},\n  "text": {}\n};\n/* harmony default export */ var src_symbols = (symbols);\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font: font,\n    group: group,\n    replace: replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nvar symbols_math = "math";\nvar symbols_text = "text"; // fonts:\n\nvar main = "main";\nvar ams = "ams"; // groups:\n\nvar symbols_accent = "accent-token";\nvar bin = "bin";\nvar symbols_close = "close";\nvar symbols_inner = "inner";\nvar mathord = "mathord";\nvar op = "op-token";\nvar symbols_open = "open";\nvar punct = "punct";\nvar rel = "rel";\nvar spacing = "spacing";\nvar symbols_textord = "textord"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(symbols_math, main, rel, "\\u2261", "\\\\equiv", true);\ndefineSymbol(symbols_math, main, rel, "\\u227A", "\\\\prec", true);\ndefineSymbol(symbols_math, main, rel, "\\u227B", "\\\\succ", true);\ndefineSymbol(symbols_math, main, rel, "\\u223C", "\\\\sim", true);\ndefineSymbol(symbols_math, main, rel, "\\u22A5", "\\\\perp");\ndefineSymbol(symbols_math, main, rel, "\\u2AAF", "\\\\preceq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2AB0", "\\\\succeq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2243", "\\\\simeq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2223", "\\\\mid", true);\ndefineSymbol(symbols_math, main, rel, "\\u226A", "\\\\ll", true);\ndefineSymbol(symbols_math, main, rel, "\\u226B", "\\\\gg", true);\ndefineSymbol(symbols_math, main, rel, "\\u224D", "\\\\asymp", true);\ndefineSymbol(symbols_math, main, rel, "\\u2225", "\\\\parallel");\ndefineSymbol(symbols_math, main, rel, "\\u22C8", "\\\\bowtie", true);\ndefineSymbol(symbols_math, main, rel, "\\u2323", "\\\\smile", true);\ndefineSymbol(symbols_math, main, rel, "\\u2291", "\\\\sqsubseteq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2292", "\\\\sqsupseteq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2250", "\\\\doteq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2322", "\\\\frown", true);\ndefineSymbol(symbols_math, main, rel, "\\u220B", "\\\\ni", true);\ndefineSymbol(symbols_math, main, rel, "\\u221D", "\\\\propto", true);\ndefineSymbol(symbols_math, main, rel, "\\u22A2", "\\\\vdash", true);\ndefineSymbol(symbols_math, main, rel, "\\u22A3", "\\\\dashv", true);\ndefineSymbol(symbols_math, main, rel, "\\u220B", "\\\\owns"); // Punctuation\n\ndefineSymbol(symbols_math, main, punct, ".", "\\\\ldotp");\ndefineSymbol(symbols_math, main, punct, "\\u22C5", "\\\\cdotp"); // Misc Symbols\n\ndefineSymbol(symbols_math, main, symbols_textord, "#", "\\\\#");\ndefineSymbol(symbols_text, main, symbols_textord, "#", "\\\\#");\ndefineSymbol(symbols_math, main, symbols_textord, "&", "\\\\&");\ndefineSymbol(symbols_text, main, symbols_textord, "&", "\\\\&");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2135", "\\\\aleph", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2200", "\\\\forall", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u210F", "\\\\hbar", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2203", "\\\\exists", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2207", "\\\\nabla", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u266D", "\\\\flat", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2113", "\\\\ell", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u266E", "\\\\natural", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2663", "\\\\clubsuit", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2118", "\\\\wp", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u266F", "\\\\sharp", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2662", "\\\\diamondsuit", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u211C", "\\\\Re", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2661", "\\\\heartsuit", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2111", "\\\\Im", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2660", "\\\\spadesuit", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xA7", "\\\\S", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xB6", "\\\\P", true); // Math and Text\n\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2020", "\\\\dag");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2020", "\\\\dag");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2020", "\\\\textdagger");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2021", "\\\\ddag");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2021", "\\\\ddag");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2021", "\\\\textdaggerdbl"); // Large Delimiters\n\ndefineSymbol(symbols_math, main, symbols_close, "\\u23B1", "\\\\rmoustache", true);\ndefineSymbol(symbols_math, main, symbols_open, "\\u23B0", "\\\\lmoustache", true);\ndefineSymbol(symbols_math, main, symbols_close, "\\u27EF", "\\\\rgroup", true);\ndefineSymbol(symbols_math, main, symbols_open, "\\u27EE", "\\\\lgroup", true); // Binary Operators\n\ndefineSymbol(symbols_math, main, bin, "\\u2213", "\\\\mp", true);\ndefineSymbol(symbols_math, main, bin, "\\u2296", "\\\\ominus", true);\ndefineSymbol(symbols_math, main, bin, "\\u228E", "\\\\uplus", true);\ndefineSymbol(symbols_math, main, bin, "\\u2293", "\\\\sqcap", true);\ndefineSymbol(symbols_math, main, bin, "\\u2217", "\\\\ast");\ndefineSymbol(symbols_math, main, bin, "\\u2294", "\\\\sqcup", true);\ndefineSymbol(symbols_math, main, bin, "\\u25EF", "\\\\bigcirc");\ndefineSymbol(symbols_math, main, bin, "\\u2219", "\\\\bullet");\ndefineSymbol(symbols_math, main, bin, "\\u2021", "\\\\ddagger");\ndefineSymbol(symbols_math, main, bin, "\\u2240", "\\\\wr", true);\ndefineSymbol(symbols_math, main, bin, "\\u2A3F", "\\\\amalg");\ndefineSymbol(symbols_math, main, bin, "&", "\\\\And"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(symbols_math, main, rel, "\\u27F5", "\\\\longleftarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21D0", "\\\\Leftarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u27F8", "\\\\Longleftarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u27F6", "\\\\longrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21D2", "\\\\Rightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u27F9", "\\\\Longrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u2194", "\\\\leftrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u27F7", "\\\\longleftrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21D4", "\\\\Leftrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u27FA", "\\\\Longleftrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21A6", "\\\\mapsto", true);\ndefineSymbol(symbols_math, main, rel, "\\u27FC", "\\\\longmapsto", true);\ndefineSymbol(symbols_math, main, rel, "\\u2197", "\\\\nearrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21A9", "\\\\hookleftarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21AA", "\\\\hookrightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u2198", "\\\\searrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21BC", "\\\\leftharpoonup", true);\ndefineSymbol(symbols_math, main, rel, "\\u21C0", "\\\\rightharpoonup", true);\ndefineSymbol(symbols_math, main, rel, "\\u2199", "\\\\swarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21BD", "\\\\leftharpoondown", true);\ndefineSymbol(symbols_math, main, rel, "\\u21C1", "\\\\rightharpoondown", true);\ndefineSymbol(symbols_math, main, rel, "\\u2196", "\\\\nwarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21CC", "\\\\rightleftharpoons", true); // AMS Negated Binary Relations\n\ndefineSymbol(symbols_math, ams, rel, "\\u226E", "\\\\nless", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE010", "\\\\nleqslant");\ndefineSymbol(symbols_math, ams, rel, "\\uE011", "\\\\nleqq");\ndefineSymbol(symbols_math, ams, rel, "\\u2A87", "\\\\lneq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2268", "\\\\lneqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE00C", "\\\\lvertneqq");\ndefineSymbol(symbols_math, ams, rel, "\\u22E6", "\\\\lnsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A89", "\\\\lnapprox", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2280", "\\\\nprec", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We\'ll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, "\\u22E0", "\\\\npreceq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22E8", "\\\\precnsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2AB9", "\\\\precnapprox", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2241", "\\\\nsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE006", "\\\\nshortmid");\ndefineSymbol(symbols_math, ams, rel, "\\u2224", "\\\\nmid", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22AC", "\\\\nvdash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22AD", "\\\\nvDash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22EA", "\\\\ntriangleleft");\ndefineSymbol(symbols_math, ams, rel, "\\u22EC", "\\\\ntrianglelefteq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u228A", "\\\\subsetneq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE01A", "\\\\varsubsetneq");\ndefineSymbol(symbols_math, ams, rel, "\\u2ACB", "\\\\subsetneqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE017", "\\\\varsubsetneqq");\ndefineSymbol(symbols_math, ams, rel, "\\u226F", "\\\\ngtr", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE00F", "\\\\ngeqslant");\ndefineSymbol(symbols_math, ams, rel, "\\uE00E", "\\\\ngeqq");\ndefineSymbol(symbols_math, ams, rel, "\\u2A88", "\\\\gneq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2269", "\\\\gneqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE00D", "\\\\gvertneqq");\ndefineSymbol(symbols_math, ams, rel, "\\u22E7", "\\\\gnsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A8A", "\\\\gnapprox", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2281", "\\\\nsucc", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We\'ll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, "\\u22E1", "\\\\nsucceq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22E9", "\\\\succnsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2ABA", "\\\\succnapprox", true); // unicode-math maps \\u2246 to \\simneqq. We\'ll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, "\\u2246", "\\\\ncong", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE007", "\\\\nshortparallel");\ndefineSymbol(symbols_math, ams, rel, "\\u2226", "\\\\nparallel", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22AF", "\\\\nVDash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22EB", "\\\\ntriangleright");\ndefineSymbol(symbols_math, ams, rel, "\\u22ED", "\\\\ntrianglerighteq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE018", "\\\\nsupseteqq");\ndefineSymbol(symbols_math, ams, rel, "\\u228B", "\\\\supsetneq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE01B", "\\\\varsupsetneq");\ndefineSymbol(symbols_math, ams, rel, "\\u2ACC", "\\\\supsetneqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE019", "\\\\varsupsetneqq");\ndefineSymbol(symbols_math, ams, rel, "\\u22AE", "\\\\nVdash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2AB5", "\\\\precneqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2AB6", "\\\\succneqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\uE016", "\\\\nsubseteqq");\ndefineSymbol(symbols_math, ams, bin, "\\u22B4", "\\\\unlhd");\ndefineSymbol(symbols_math, ams, bin, "\\u22B5", "\\\\unrhd"); // AMS Negated Arrows\n\ndefineSymbol(symbols_math, ams, rel, "\\u219A", "\\\\nleftarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u219B", "\\\\nrightarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21CD", "\\\\nLeftarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21CF", "\\\\nRightarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21AE", "\\\\nleftrightarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21CE", "\\\\nLeftrightarrow", true); // AMS Misc\n\ndefineSymbol(symbols_math, ams, rel, "\\u25B3", "\\\\vartriangle");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u210F", "\\\\hslash");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25BD", "\\\\triangledown");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25CA", "\\\\lozenge");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u24C8", "\\\\circledS");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\xAE", "\\\\circledR");\ndefineSymbol(symbols_text, ams, symbols_textord, "\\xAE", "\\\\circledR");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2221", "\\\\measuredangle", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2204", "\\\\nexists");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2127", "\\\\mho");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2132", "\\\\Finv", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2141", "\\\\Game", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "k", "\\\\Bbbk");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2035", "\\\\backprime");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25B2", "\\\\blacktriangle");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25BC", "\\\\blacktriangledown");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25A0", "\\\\blacksquare");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u29EB", "\\\\blacklozenge");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2605", "\\\\bigstar");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2222", "\\\\sphericalangle", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2201", "\\\\complement", true); // unicode-math maps U+F0 (ð) to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(symbols_math, ams, symbols_textord, "\\xF0", "\\\\eth", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2571", "\\\\diagup");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2572", "\\\\diagdown");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25A1", "\\\\square");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25A1", "\\\\Box");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u25CA", "\\\\Diamond"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(symbols_math, ams, symbols_textord, "\\xA5", "\\\\yen", true);\ndefineSymbol(symbols_text, ams, symbols_textord, "\\xA5", "\\\\yen", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2713", "\\\\checkmark", true);\ndefineSymbol(symbols_text, ams, symbols_textord, "\\u2713", "\\\\checkmark"); // AMS Hebrew\n\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2136", "\\\\beth", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2138", "\\\\daleth", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2137", "\\\\gimel", true); // AMS Greek\n\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u03DD", "\\\\digamma");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u03F0", "\\\\varkappa"); // AMS Delimiters\n\ndefineSymbol(symbols_math, ams, symbols_open, "\\u250C", "\\\\ulcorner", true);\ndefineSymbol(symbols_math, ams, symbols_close, "\\u2510", "\\\\urcorner", true);\ndefineSymbol(symbols_math, ams, symbols_open, "\\u2514", "\\\\llcorner", true);\ndefineSymbol(symbols_math, ams, symbols_close, "\\u2518", "\\\\lrcorner", true); // AMS Binary Relations\n\ndefineSymbol(symbols_math, ams, rel, "\\u2266", "\\\\leqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A7D", "\\\\leqslant", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A95", "\\\\eqslantless", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2272", "\\\\lesssim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A85", "\\\\lessapprox", true);\ndefineSymbol(symbols_math, ams, rel, "\\u224A", "\\\\approxeq", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22D6", "\\\\lessdot");\ndefineSymbol(symbols_math, ams, rel, "\\u22D8", "\\\\lll", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2276", "\\\\lessgtr", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22DA", "\\\\lesseqgtr", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A8B", "\\\\lesseqqgtr", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2251", "\\\\doteqdot");\ndefineSymbol(symbols_math, ams, rel, "\\u2253", "\\\\risingdotseq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2252", "\\\\fallingdotseq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u223D", "\\\\backsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22CD", "\\\\backsimeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2AC5", "\\\\subseteqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22D0", "\\\\Subset", true);\ndefineSymbol(symbols_math, ams, rel, "\\u228F", "\\\\sqsubset", true);\ndefineSymbol(symbols_math, ams, rel, "\\u227C", "\\\\preccurlyeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22DE", "\\\\curlyeqprec", true);\ndefineSymbol(symbols_math, ams, rel, "\\u227E", "\\\\precsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2AB7", "\\\\precapprox", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22B2", "\\\\vartriangleleft");\ndefineSymbol(symbols_math, ams, rel, "\\u22B4", "\\\\trianglelefteq");\ndefineSymbol(symbols_math, ams, rel, "\\u22A8", "\\\\vDash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22AA", "\\\\Vvdash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2323", "\\\\smallsmile");\ndefineSymbol(symbols_math, ams, rel, "\\u2322", "\\\\smallfrown");\ndefineSymbol(symbols_math, ams, rel, "\\u224F", "\\\\bumpeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u224E", "\\\\Bumpeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2267", "\\\\geqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A7E", "\\\\geqslant", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A96", "\\\\eqslantgtr", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2273", "\\\\gtrsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A86", "\\\\gtrapprox", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22D7", "\\\\gtrdot");\ndefineSymbol(symbols_math, ams, rel, "\\u22D9", "\\\\ggg", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2277", "\\\\gtrless", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22DB", "\\\\gtreqless", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2A8C", "\\\\gtreqqless", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2256", "\\\\eqcirc", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2257", "\\\\circeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u225C", "\\\\triangleq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u223C", "\\\\thicksim");\ndefineSymbol(symbols_math, ams, rel, "\\u2248", "\\\\thickapprox");\ndefineSymbol(symbols_math, ams, rel, "\\u2AC6", "\\\\supseteqq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22D1", "\\\\Supset", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2290", "\\\\sqsupset", true);\ndefineSymbol(symbols_math, ams, rel, "\\u227D", "\\\\succcurlyeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22DF", "\\\\curlyeqsucc", true);\ndefineSymbol(symbols_math, ams, rel, "\\u227F", "\\\\succsim", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2AB8", "\\\\succapprox", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22B3", "\\\\vartriangleright");\ndefineSymbol(symbols_math, ams, rel, "\\u22B5", "\\\\trianglerighteq");\ndefineSymbol(symbols_math, ams, rel, "\\u22A9", "\\\\Vdash", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2223", "\\\\shortmid");\ndefineSymbol(symbols_math, ams, rel, "\\u2225", "\\\\shortparallel");\ndefineSymbol(symbols_math, ams, rel, "\\u226C", "\\\\between", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22D4", "\\\\pitchfork", true);\ndefineSymbol(symbols_math, ams, rel, "\\u221D", "\\\\varpropto");\ndefineSymbol(symbols_math, ams, rel, "\\u25C0", "\\\\blacktriangleleft"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(symbols_math, ams, rel, "\\u2234", "\\\\therefore", true);\ndefineSymbol(symbols_math, ams, rel, "\\u220D", "\\\\backepsilon");\ndefineSymbol(symbols_math, ams, rel, "\\u25B6", "\\\\blacktriangleright"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(symbols_math, ams, rel, "\\u2235", "\\\\because", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22D8", "\\\\llless");\ndefineSymbol(symbols_math, ams, rel, "\\u22D9", "\\\\gggtr");\ndefineSymbol(symbols_math, ams, bin, "\\u22B2", "\\\\lhd");\ndefineSymbol(symbols_math, ams, bin, "\\u22B3", "\\\\rhd");\ndefineSymbol(symbols_math, ams, rel, "\\u2242", "\\\\eqsim", true);\ndefineSymbol(symbols_math, main, rel, "\\u22C8", "\\\\Join");\ndefineSymbol(symbols_math, ams, rel, "\\u2251", "\\\\Doteq", true); // AMS Binary Operators\n\ndefineSymbol(symbols_math, ams, bin, "\\u2214", "\\\\dotplus", true);\ndefineSymbol(symbols_math, ams, bin, "\\u2216", "\\\\smallsetminus");\ndefineSymbol(symbols_math, ams, bin, "\\u22D2", "\\\\Cap", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22D3", "\\\\Cup", true);\ndefineSymbol(symbols_math, ams, bin, "\\u2A5E", "\\\\doublebarwedge", true);\ndefineSymbol(symbols_math, ams, bin, "\\u229F", "\\\\boxminus", true);\ndefineSymbol(symbols_math, ams, bin, "\\u229E", "\\\\boxplus", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22C7", "\\\\divideontimes", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22C9", "\\\\ltimes", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22CA", "\\\\rtimes", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22CB", "\\\\leftthreetimes", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22CC", "\\\\rightthreetimes", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22CF", "\\\\curlywedge", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22CE", "\\\\curlyvee", true);\ndefineSymbol(symbols_math, ams, bin, "\\u229D", "\\\\circleddash", true);\ndefineSymbol(symbols_math, ams, bin, "\\u229B", "\\\\circledast", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22C5", "\\\\centerdot");\ndefineSymbol(symbols_math, ams, bin, "\\u22BA", "\\\\intercal", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22D2", "\\\\doublecap");\ndefineSymbol(symbols_math, ams, bin, "\\u22D3", "\\\\doublecup");\ndefineSymbol(symbols_math, ams, bin, "\\u22A0", "\\\\boxtimes", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We\'ll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(symbols_math, ams, rel, "\\u21E2", "\\\\dashrightarrow", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We\'ll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, "\\u21E0", "\\\\dashleftarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C7", "\\\\leftleftarrows", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C6", "\\\\leftrightarrows", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21DA", "\\\\Lleftarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u219E", "\\\\twoheadleftarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21A2", "\\\\leftarrowtail", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21AB", "\\\\looparrowleft", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21CB", "\\\\leftrightharpoons", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21B6", "\\\\curvearrowleft", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We\'ll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, "\\u21BA", "\\\\circlearrowleft", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21B0", "\\\\Lsh", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C8", "\\\\upuparrows", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21BF", "\\\\upharpoonleft", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C3", "\\\\downharpoonleft", true);\ndefineSymbol(symbols_math, ams, rel, "\\u22B8", "\\\\multimap", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21AD", "\\\\leftrightsquigarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C9", "\\\\rightrightarrows", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C4", "\\\\rightleftarrows", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21A0", "\\\\twoheadrightarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21A3", "\\\\rightarrowtail", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21AC", "\\\\looparrowright", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21B7", "\\\\curvearrowright", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We\'ll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, "\\u21BB", "\\\\circlearrowright", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21B1", "\\\\Rsh", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21CA", "\\\\downdownarrows", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21BE", "\\\\upharpoonright", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21C2", "\\\\downharpoonright", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21DD", "\\\\rightsquigarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21DD", "\\\\leadsto");\ndefineSymbol(symbols_math, ams, rel, "\\u21DB", "\\\\Rrightarrow", true);\ndefineSymbol(symbols_math, ams, rel, "\\u21BE", "\\\\restriction");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2018", "`");\ndefineSymbol(symbols_math, main, symbols_textord, "$", "\\\\$");\ndefineSymbol(symbols_text, main, symbols_textord, "$", "\\\\$");\ndefineSymbol(symbols_text, main, symbols_textord, "$", "\\\\textdollar");\ndefineSymbol(symbols_math, main, symbols_textord, "%", "\\\\%");\ndefineSymbol(symbols_text, main, symbols_textord, "%", "\\\\%");\ndefineSymbol(symbols_math, main, symbols_textord, "_", "\\\\_");\ndefineSymbol(symbols_text, main, symbols_textord, "_", "\\\\_");\ndefineSymbol(symbols_text, main, symbols_textord, "_", "\\\\textunderscore");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2220", "\\\\angle", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u221E", "\\\\infty", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2032", "\\\\prime");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u25B3", "\\\\triangle");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u0393", "\\\\Gamma", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u0394", "\\\\Delta", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u0398", "\\\\Theta", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u039B", "\\\\Lambda", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u039E", "\\\\Xi", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u03A0", "\\\\Pi", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u03A3", "\\\\Sigma", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u03A5", "\\\\Upsilon", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u03A6", "\\\\Phi", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u03A8", "\\\\Psi", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u03A9", "\\\\Omega", true);\ndefineSymbol(symbols_math, main, symbols_textord, "A", "\\u0391");\ndefineSymbol(symbols_math, main, symbols_textord, "B", "\\u0392");\ndefineSymbol(symbols_math, main, symbols_textord, "E", "\\u0395");\ndefineSymbol(symbols_math, main, symbols_textord, "Z", "\\u0396");\ndefineSymbol(symbols_math, main, symbols_textord, "H", "\\u0397");\ndefineSymbol(symbols_math, main, symbols_textord, "I", "\\u0399");\ndefineSymbol(symbols_math, main, symbols_textord, "K", "\\u039A");\ndefineSymbol(symbols_math, main, symbols_textord, "M", "\\u039C");\ndefineSymbol(symbols_math, main, symbols_textord, "N", "\\u039D");\ndefineSymbol(symbols_math, main, symbols_textord, "O", "\\u039F");\ndefineSymbol(symbols_math, main, symbols_textord, "P", "\\u03A1");\ndefineSymbol(symbols_math, main, symbols_textord, "T", "\\u03A4");\ndefineSymbol(symbols_math, main, symbols_textord, "X", "\\u03A7");\ndefineSymbol(symbols_math, main, symbols_textord, "\\xAC", "\\\\neg", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\xAC", "\\\\lnot");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u22A4", "\\\\top");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u22A5", "\\\\bot");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2205", "\\\\emptyset");\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2205", "\\\\varnothing");\ndefineSymbol(symbols_math, main, mathord, "\\u03B1", "\\\\alpha", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B2", "\\\\beta", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B3", "\\\\gamma", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B4", "\\\\delta", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03F5", "\\\\epsilon", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B6", "\\\\zeta", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B7", "\\\\eta", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B8", "\\\\theta", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B9", "\\\\iota", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03BA", "\\\\kappa", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03BB", "\\\\lambda", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03BC", "\\\\mu", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03BD", "\\\\nu", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03BE", "\\\\xi", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03BF", "\\\\omicron", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C0", "\\\\pi", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C1", "\\\\rho", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C3", "\\\\sigma", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C4", "\\\\tau", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C5", "\\\\upsilon", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03D5", "\\\\phi", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C7", "\\\\chi", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C8", "\\\\psi", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C9", "\\\\omega", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03B5", "\\\\varepsilon", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03D1", "\\\\vartheta", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03D6", "\\\\varpi", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03F1", "\\\\varrho", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C2", "\\\\varsigma", true);\ndefineSymbol(symbols_math, main, mathord, "\\u03C6", "\\\\varphi", true);\ndefineSymbol(symbols_math, main, bin, "\\u2217", "*");\ndefineSymbol(symbols_math, main, bin, "+", "+");\ndefineSymbol(symbols_math, main, bin, "\\u2212", "-");\ndefineSymbol(symbols_math, main, bin, "\\u22C5", "\\\\cdot", true);\ndefineSymbol(symbols_math, main, bin, "\\u2218", "\\\\circ");\ndefineSymbol(symbols_math, main, bin, "\\xF7", "\\\\div", true);\ndefineSymbol(symbols_math, main, bin, "\\xB1", "\\\\pm", true);\ndefineSymbol(symbols_math, main, bin, "\\xD7", "\\\\times", true);\ndefineSymbol(symbols_math, main, bin, "\\u2229", "\\\\cap", true);\ndefineSymbol(symbols_math, main, bin, "\\u222A", "\\\\cup", true);\ndefineSymbol(symbols_math, main, bin, "\\u2216", "\\\\setminus");\ndefineSymbol(symbols_math, main, bin, "\\u2227", "\\\\land");\ndefineSymbol(symbols_math, main, bin, "\\u2228", "\\\\lor");\ndefineSymbol(symbols_math, main, bin, "\\u2227", "\\\\wedge", true);\ndefineSymbol(symbols_math, main, bin, "\\u2228", "\\\\vee", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u221A", "\\\\surd");\ndefineSymbol(symbols_math, main, symbols_open, "(", "(");\ndefineSymbol(symbols_math, main, symbols_open, "[", "[");\ndefineSymbol(symbols_math, main, symbols_open, "\\u27E8", "\\\\langle", true);\ndefineSymbol(symbols_math, main, symbols_open, "\\u2223", "\\\\lvert");\ndefineSymbol(symbols_math, main, symbols_open, "\\u2225", "\\\\lVert");\ndefineSymbol(symbols_math, main, symbols_close, ")", ")");\ndefineSymbol(symbols_math, main, symbols_close, "]", "]");\ndefineSymbol(symbols_math, main, symbols_close, "?", "?");\ndefineSymbol(symbols_math, main, symbols_close, "!", "!");\ndefineSymbol(symbols_math, main, symbols_close, "\\u27E9", "\\\\rangle", true);\ndefineSymbol(symbols_math, main, symbols_close, "\\u2223", "\\\\rvert");\ndefineSymbol(symbols_math, main, symbols_close, "\\u2225", "\\\\rVert");\ndefineSymbol(symbols_math, main, rel, "=", "=");\ndefineSymbol(symbols_math, main, rel, "<", "<");\ndefineSymbol(symbols_math, main, rel, ">", ">");\ndefineSymbol(symbols_math, main, rel, ":", ":");\ndefineSymbol(symbols_math, main, rel, "\\u2248", "\\\\approx", true);\ndefineSymbol(symbols_math, main, rel, "\\u2245", "\\\\cong", true);\ndefineSymbol(symbols_math, main, rel, "\\u2265", "\\\\ge");\ndefineSymbol(symbols_math, main, rel, "\\u2265", "\\\\geq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2190", "\\\\gets");\ndefineSymbol(symbols_math, main, rel, ">", "\\\\gt");\ndefineSymbol(symbols_math, main, rel, "\\u2208", "\\\\in", true);\ndefineSymbol(symbols_math, main, rel, "\\uE020", "\\\\@not");\ndefineSymbol(symbols_math, main, rel, "\\u2282", "\\\\subset", true);\ndefineSymbol(symbols_math, main, rel, "\\u2283", "\\\\supset", true);\ndefineSymbol(symbols_math, main, rel, "\\u2286", "\\\\subseteq", true);\ndefineSymbol(symbols_math, main, rel, "\\u2287", "\\\\supseteq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2288", "\\\\nsubseteq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2289", "\\\\nsupseteq", true);\ndefineSymbol(symbols_math, main, rel, "\\u22A8", "\\\\models");\ndefineSymbol(symbols_math, main, rel, "\\u2190", "\\\\leftarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u2264", "\\\\le");\ndefineSymbol(symbols_math, main, rel, "\\u2264", "\\\\leq", true);\ndefineSymbol(symbols_math, main, rel, "<", "\\\\lt");\ndefineSymbol(symbols_math, main, rel, "\\u2192", "\\\\rightarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u2192", "\\\\to");\ndefineSymbol(symbols_math, ams, rel, "\\u2271", "\\\\ngeq", true);\ndefineSymbol(symbols_math, ams, rel, "\\u2270", "\\\\nleq", true);\ndefineSymbol(symbols_math, main, spacing, "\\xA0", "\\\\ ");\ndefineSymbol(symbols_math, main, spacing, "\\xA0", "~");\ndefineSymbol(symbols_math, main, spacing, "\\xA0", "\\\\space"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(symbols_math, main, spacing, "\\xA0", "\\\\nobreakspace");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", "\\\\ ");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", "~");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", "\\\\space");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", "\\\\nobreakspace");\ndefineSymbol(symbols_math, main, spacing, null, "\\\\nobreak");\ndefineSymbol(symbols_math, main, spacing, null, "\\\\allowbreak");\ndefineSymbol(symbols_math, main, punct, ",", ",");\ndefineSymbol(symbols_math, main, punct, ";", ";");\ndefineSymbol(symbols_math, ams, bin, "\\u22BC", "\\\\barwedge", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22BB", "\\\\veebar", true);\ndefineSymbol(symbols_math, main, bin, "\\u2299", "\\\\odot", true);\ndefineSymbol(symbols_math, main, bin, "\\u2295", "\\\\oplus", true);\ndefineSymbol(symbols_math, main, bin, "\\u2297", "\\\\otimes", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2202", "\\\\partial", true);\ndefineSymbol(symbols_math, main, bin, "\\u2298", "\\\\oslash", true);\ndefineSymbol(symbols_math, ams, bin, "\\u229A", "\\\\circledcirc", true);\ndefineSymbol(symbols_math, ams, bin, "\\u22A1", "\\\\boxdot", true);\ndefineSymbol(symbols_math, main, bin, "\\u25B3", "\\\\bigtriangleup");\ndefineSymbol(symbols_math, main, bin, "\\u25BD", "\\\\bigtriangledown");\ndefineSymbol(symbols_math, main, bin, "\\u2020", "\\\\dagger");\ndefineSymbol(symbols_math, main, bin, "\\u22C4", "\\\\diamond");\ndefineSymbol(symbols_math, main, bin, "\\u22C6", "\\\\star");\ndefineSymbol(symbols_math, main, bin, "\\u25C3", "\\\\triangleleft");\ndefineSymbol(symbols_math, main, bin, "\\u25B9", "\\\\triangleright");\ndefineSymbol(symbols_math, main, symbols_open, "{", "\\\\{");\ndefineSymbol(symbols_text, main, symbols_textord, "{", "\\\\{");\ndefineSymbol(symbols_text, main, symbols_textord, "{", "\\\\textbraceleft");\ndefineSymbol(symbols_math, main, symbols_close, "}", "\\\\}");\ndefineSymbol(symbols_text, main, symbols_textord, "}", "\\\\}");\ndefineSymbol(symbols_text, main, symbols_textord, "}", "\\\\textbraceright");\ndefineSymbol(symbols_math, main, symbols_open, "{", "\\\\lbrace");\ndefineSymbol(symbols_math, main, symbols_close, "}", "\\\\rbrace");\ndefineSymbol(symbols_math, main, symbols_open, "[", "\\\\lbrack");\ndefineSymbol(symbols_text, main, symbols_textord, "[", "\\\\lbrack");\ndefineSymbol(symbols_math, main, symbols_close, "]", "\\\\rbrack");\ndefineSymbol(symbols_text, main, symbols_textord, "]", "\\\\rbrack");\ndefineSymbol(symbols_math, main, symbols_open, "(", "\\\\lparen");\ndefineSymbol(symbols_math, main, symbols_close, ")", "\\\\rparen");\ndefineSymbol(symbols_text, main, symbols_textord, "<", "\\\\textless"); // in T1 fontenc\n\ndefineSymbol(symbols_text, main, symbols_textord, ">", "\\\\textgreater"); // in T1 fontenc\n\ndefineSymbol(symbols_math, main, symbols_open, "\\u230A", "\\\\lfloor", true);\ndefineSymbol(symbols_math, main, symbols_close, "\\u230B", "\\\\rfloor", true);\ndefineSymbol(symbols_math, main, symbols_open, "\\u2308", "\\\\lceil", true);\ndefineSymbol(symbols_math, main, symbols_close, "\\u2309", "\\\\rceil", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\\\", "\\\\backslash");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2223", "|");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2223", "\\\\vert");\ndefineSymbol(symbols_text, main, symbols_textord, "|", "\\\\textbar"); // in T1 fontenc\n\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2225", "\\\\|");\ndefineSymbol(symbols_math, main, symbols_textord, "\\u2225", "\\\\Vert");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2225", "\\\\textbardbl");\ndefineSymbol(symbols_text, main, symbols_textord, "~", "\\\\textasciitilde");\ndefineSymbol(symbols_text, main, symbols_textord, "\\\\", "\\\\textbackslash");\ndefineSymbol(symbols_text, main, symbols_textord, "^", "\\\\textasciicircum");\ndefineSymbol(symbols_math, main, rel, "\\u2191", "\\\\uparrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21D1", "\\\\Uparrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u2193", "\\\\downarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21D3", "\\\\Downarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u2195", "\\\\updownarrow", true);\ndefineSymbol(symbols_math, main, rel, "\\u21D5", "\\\\Updownarrow", true);\ndefineSymbol(symbols_math, main, op, "\\u2210", "\\\\coprod");\ndefineSymbol(symbols_math, main, op, "\\u22C1", "\\\\bigvee");\ndefineSymbol(symbols_math, main, op, "\\u22C0", "\\\\bigwedge");\ndefineSymbol(symbols_math, main, op, "\\u2A04", "\\\\biguplus");\ndefineSymbol(symbols_math, main, op, "\\u22C2", "\\\\bigcap");\ndefineSymbol(symbols_math, main, op, "\\u22C3", "\\\\bigcup");\ndefineSymbol(symbols_math, main, op, "\\u222B", "\\\\int");\ndefineSymbol(symbols_math, main, op, "\\u222B", "\\\\intop");\ndefineSymbol(symbols_math, main, op, "\\u222C", "\\\\iint");\ndefineSymbol(symbols_math, main, op, "\\u222D", "\\\\iiint");\ndefineSymbol(symbols_math, main, op, "\\u220F", "\\\\prod");\ndefineSymbol(symbols_math, main, op, "\\u2211", "\\\\sum");\ndefineSymbol(symbols_math, main, op, "\\u2A02", "\\\\bigotimes");\ndefineSymbol(symbols_math, main, op, "\\u2A01", "\\\\bigoplus");\ndefineSymbol(symbols_math, main, op, "\\u2A00", "\\\\bigodot");\ndefineSymbol(symbols_math, main, op, "\\u222E", "\\\\oint");\ndefineSymbol(symbols_math, main, op, "\\u222F", "\\\\oiint");\ndefineSymbol(symbols_math, main, op, "\\u2230", "\\\\oiiint");\ndefineSymbol(symbols_math, main, op, "\\u2A06", "\\\\bigsqcup");\ndefineSymbol(symbols_math, main, op, "\\u222B", "\\\\smallint");\ndefineSymbol(symbols_text, main, symbols_inner, "\\u2026", "\\\\textellipsis");\ndefineSymbol(symbols_math, main, symbols_inner, "\\u2026", "\\\\mathellipsis");\ndefineSymbol(symbols_text, main, symbols_inner, "\\u2026", "\\\\ldots", true);\ndefineSymbol(symbols_math, main, symbols_inner, "\\u2026", "\\\\ldots", true);\ndefineSymbol(symbols_math, main, symbols_inner, "\\u22EF", "\\\\@cdots", true);\ndefineSymbol(symbols_math, main, symbols_inner, "\\u22F1", "\\\\ddots", true);\ndefineSymbol(symbols_math, main, symbols_textord, "\\u22EE", "\\\\varvdots"); // \\vdots is a macro\n\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02CA", "\\\\acute");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02CB", "\\\\grave");\ndefineSymbol(symbols_math, main, symbols_accent, "\\xA8", "\\\\ddot");\ndefineSymbol(symbols_math, main, symbols_accent, "~", "\\\\tilde");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02C9", "\\\\bar");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02D8", "\\\\breve");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02C7", "\\\\check");\ndefineSymbol(symbols_math, main, symbols_accent, "^", "\\\\hat");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u20D7", "\\\\vec");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02D9", "\\\\dot");\ndefineSymbol(symbols_math, main, symbols_accent, "\\u02DA", "\\\\mathring");\ndefineSymbol(symbols_math, main, mathord, "\\u0131", "\\\\imath", true);\ndefineSymbol(symbols_math, main, mathord, "\\u0237", "\\\\jmath", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\u0131", "\\\\i", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\u0237", "\\\\j", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xDF", "\\\\ss", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xE6", "\\\\ae", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xE6", "\\\\ae", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\u0153", "\\\\oe", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xF8", "\\\\o", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xC6", "\\\\AE", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\u0152", "\\\\OE", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xD8", "\\\\O", true);\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02CA", "\\\\\'"); // acute\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02CB", "\\\\`"); // grave\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02C6", "\\\\^"); // circumflex\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02DC", "\\\\~"); // tilde\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02C9", "\\\\="); // macron\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02D8", "\\\\u"); // breve\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02D9", "\\\\."); // dot above\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02DA", "\\\\r"); // ring above\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02C7", "\\\\v"); // caron\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\xA8", \'\\\\"\'); // diaresis\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u02DD", "\\\\H"); // double acute\n\ndefineSymbol(symbols_text, main, symbols_accent, "\\u25EF", "\\\\textcircled"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js\'s `formLigatures`.\n\nvar ligatures = {\n  "--": true,\n  "---": true,\n  "``": true,\n  "\'\'": true\n};\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2013", "--");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2013", "\\\\textendash");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2014", "---");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2014", "\\\\textemdash");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2018", "`");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2018", "\\\\textquoteleft");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2019", "\'");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2019", "\\\\textquoteright");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u201C", "``");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u201C", "\\\\textquotedblleft");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u201D", "\'\'");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u201D", "\\\\textquotedblright"); //  \\degree from gensymb package\n\ndefineSymbol(symbols_math, main, symbols_textord, "\\xB0", "\\\\degree", true);\ndefineSymbol(symbols_text, main, symbols_textord, "\\xB0", "\\\\degree"); // \\textdegree from inputenc package\n\ndefineSymbol(symbols_text, main, symbols_textord, "\\xB0", "\\\\textdegree", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character "163".\n\ndefineSymbol(symbols_math, main, mathord, "\\xA3", "\\\\pounds");\ndefineSymbol(symbols_math, main, mathord, "\\xA3", "\\\\mathsterling", true);\ndefineSymbol(symbols_text, main, mathord, "\\xA3", "\\\\pounds");\ndefineSymbol(symbols_text, main, mathord, "\\xA3", "\\\\textsterling", true);\ndefineSymbol(symbols_math, ams, symbols_textord, "\\u2720", "\\\\maltese");\ndefineSymbol(symbols_text, ams, symbols_textord, "\\u2720", "\\\\maltese");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", "\\\\ ");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", " ");\ndefineSymbol(symbols_text, main, spacing, "\\xA0", "~"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nvar mathTextSymbols = "0123456789/@.\\"";\n\nfor (var symbols_i = 0; symbols_i < mathTextSymbols.length; symbols_i++) {\n  var symbols_ch = mathTextSymbols.charAt(symbols_i);\n  defineSymbol(symbols_math, main, symbols_textord, symbols_ch, symbols_ch);\n} // All of these are textords in text mode\n\n\nvar textSymbols = "0123456789!@*()-=+[]<>|\\";:?/.,";\n\nfor (var src_symbols_i = 0; src_symbols_i < textSymbols.length; src_symbols_i++) {\n  var _ch = textSymbols.charAt(src_symbols_i);\n\n  defineSymbol(symbols_text, main, symbols_textord, _ch, _ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nvar letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";\n\nfor (var symbols_i2 = 0; symbols_i2 < letters.length; symbols_i2++) {\n  var _ch2 = letters.charAt(symbols_i2);\n\n  defineSymbol(symbols_math, main, mathord, _ch2, _ch2);\n  defineSymbol(symbols_text, main, symbols_textord, _ch2, _ch2);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(symbols_math, ams, symbols_textord, "C", "\\u2102"); // blackboard bold\n\ndefineSymbol(symbols_text, ams, symbols_textord, "C", "\\u2102");\ndefineSymbol(symbols_math, ams, symbols_textord, "H", "\\u210D");\ndefineSymbol(symbols_text, ams, symbols_textord, "H", "\\u210D");\ndefineSymbol(symbols_math, ams, symbols_textord, "N", "\\u2115");\ndefineSymbol(symbols_text, ams, symbols_textord, "N", "\\u2115");\ndefineSymbol(symbols_math, ams, symbols_textord, "P", "\\u2119");\ndefineSymbol(symbols_text, ams, symbols_textord, "P", "\\u2119");\ndefineSymbol(symbols_math, ams, symbols_textord, "Q", "\\u211A");\ndefineSymbol(symbols_text, ams, symbols_textord, "Q", "\\u211A");\ndefineSymbol(symbols_math, ams, symbols_textord, "R", "\\u211D");\ndefineSymbol(symbols_text, ams, symbols_textord, "R", "\\u211D");\ndefineSymbol(symbols_math, ams, symbols_textord, "Z", "\\u2124");\ndefineSymbol(symbols_text, ams, symbols_textord, "Z", "\\u2124");\ndefineSymbol(symbols_math, main, mathord, "h", "\\u210E"); // italic h, Planck constant\n\ndefineSymbol(symbols_text, main, mathord, "h", "\\u210E"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don\'t write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nvar symbols_wideChar = "";\n\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n  var _ch3 = letters.charAt(_i3); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fractur\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n  if (_i3 < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // "k" is the only double struck lower case letter in the KaTeX fonts.\n\n\nsymbols_wideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(symbols_math, main, mathord, "k", symbols_wideChar);\ndefineSymbol(symbols_text, main, symbols_textord, "k", symbols_wideChar); // Next, some wide character numerals\n\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n  var _ch4 = _i4.toString();\n\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nvar extraLatin = "ÇÐÞçþ";\n\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n  var _ch5 = extraLatin.charAt(_i5);\n\n  defineSymbol(symbols_math, main, mathord, _ch5, _ch5);\n  defineSymbol(symbols_text, main, symbols_textord, _ch5, _ch5);\n}\n\ndefineSymbol(symbols_text, main, symbols_textord, "ð", "ð"); // Unicode versions of existing characters\n\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2013", "–");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2014", "—");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2018", "‘");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u2019", "’");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u201C", "“");\ndefineSymbol(symbols_text, main, symbols_textord, "\\u201D", "”");\n// CONCATENATED MODULE: ./src/wide-character.js\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nvar wideLatinLetterData = [["mathbf", "textbf", "Main-Bold"], // A-Z bold upright\n["mathbf", "textbf", "Main-Bold"], // a-z bold upright\n["mathdefault", "textit", "Math-Italic"], // A-Z italic\n["mathdefault", "textit", "Math-Italic"], // a-z italic\n["boldsymbol", "boldsymbol", "Main-BoldItalic"], // A-Z bold italic\n["boldsymbol", "boldsymbol", "Main-BoldItalic"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n["mathscr", "textscr", "Script-Regular"], // A-Z script\n["", "", ""], // a-z script.  No font\n["", "", ""], // A-Z bold script. No font\n["", "", ""], // a-z bold script. No font\n["mathfrak", "textfrak", "Fraktur-Regular"], // A-Z Fraktur\n["mathfrak", "textfrak", "Fraktur-Regular"], // a-z Fraktur\n["mathbb", "textbb", "AMS-Regular"], // A-Z double-struck\n["mathbb", "textbb", "AMS-Regular"], // k double-struck\n["", "", ""], // A-Z bold Fraktur No font metrics\n["", "", ""], // a-z bold Fraktur.   No font.\n["mathsf", "textsf", "SansSerif-Regular"], // A-Z sans-serif\n["mathsf", "textsf", "SansSerif-Regular"], // a-z sans-serif\n["mathboldsf", "textboldsf", "SansSerif-Bold"], // A-Z bold sans-serif\n["mathboldsf", "textboldsf", "SansSerif-Bold"], // a-z bold sans-serif\n["mathitsf", "textitsf", "SansSerif-Italic"], // A-Z italic sans-serif\n["mathitsf", "textitsf", "SansSerif-Italic"], // a-z italic sans-serif\n["", "", ""], // A-Z bold italic sans. No font\n["", "", ""], // a-z bold italic sans. No font\n["mathtt", "texttt", "Typewriter-Regular"], // A-Z monospace\n["mathtt", "texttt", "Typewriter-Regular"]];\nvar wideNumeralData = [["mathbf", "textbf", "Main-Bold"], // 0-9 bold\n["", "", ""], // 0-9 double-struck. No KaTeX font.\n["mathsf", "textsf", "SansSerif-Regular"], // 0-9 sans-serif\n["mathboldsf", "textboldsf", "SansSerif-Bold"], // 0-9 bold sans-serif\n["mathtt", "texttt", "Typewriter-Regular"]];\nvar wide_character_wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn\'t support codePointAt(). So work with the surrogate pair.\n  var H = wideChar.charCodeAt(0); // high surrogate\n\n  var L = wideChar.charCodeAt(1); // low surrogate\n\n  var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  var j = mode === "math" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    var i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n\n    return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return ["", ""];\n  } else {\n    // We don\'t support any wide characters outside 1D400–1D7FF.\n    throw new src_ParseError("Unsupported character: " + wideChar);\n  }\n};\n// CONCATENATED MODULE: ./src/Options.js\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\nvar sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\nvar sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n};\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nvar Options_Options =\n/*#__PURE__*/\nfunction () {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  function Options(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || "";\n    this.fontFamily = data.fontFamily || "";\n    this.fontWeight = data.fontWeight || \'\';\n    this.fontShape = data.fontShape || \'\';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as "this".  Properties\n   * from "extension" will be copied to the new options object.\n   */\n\n\n  var _proto = Options.prototype;\n\n  _proto.extend = function extend(extension) {\n    var data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize\n    };\n\n    for (var key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n  ;\n\n  _proto.havingStyle = function havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n  ;\n\n  _proto.havingCrampedStyle = function havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n  ;\n\n  _proto.havingSize = function havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n  ;\n\n  _proto.havingBaseStyle = function havingBaseStyle(style) {\n    style = style || this.style.text();\n    var wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n  ;\n\n  _proto.havingBaseSizing = function havingBaseSizing() {\n    var size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n  ;\n\n  _proto.withColor = function withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with "phantom" set to true.\n   */\n  ;\n\n  _proto.withPhantom = function withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n  ;\n\n  _proto.withFont = function withFont(font) {\n    return this.extend({\n      font: font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n  ;\n\n  _proto.withTextFontFamily = function withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily: fontFamily,\n      font: ""\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n  ;\n\n  _proto.withTextFontWeight = function withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight: fontWeight,\n      font: ""\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n  ;\n\n  _proto.withTextFontShape = function withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape: fontShape,\n      font: ""\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n  ;\n\n  _proto.sizingClasses = function sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return ["sizing", "reset-size" + oldOptions.size, "size" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n  ;\n\n  _proto.baseSizingClasses = function baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return ["sizing", "reset-size" + this.size, "size" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n  ;\n\n  _proto.fontMetrics = function fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * A map of color names to CSS colors.\n   * TODO(emily): Remove this when we have real macros\n   */\n  ;\n\n  /**\n   * Gets the CSS color of the current options object, accounting for the\n   * `colorMap`.\n   */\n  _proto.getColor = function getColor() {\n    if (this.phantom) {\n      return "transparent";\n    } else if (this.color != null && Options.colorMap.hasOwnProperty(this.color)) {\n      return Options.colorMap[this.color];\n    } else {\n      return this.color;\n    }\n  };\n\n  return Options;\n}();\n\nOptions_Options.BASESIZE = 6;\nOptions_Options.colorMap = {\n  "katex-blue": "#6495ed",\n  "katex-orange": "#ffa500",\n  "katex-pink": "#ff00af",\n  "katex-red": "#df0030",\n  "katex-green": "#28ae7b",\n  "katex-gray": "gray",\n  "katex-purple": "#9d38bd",\n  "katex-blueA": "#ccfaff",\n  "katex-blueB": "#80f6ff",\n  "katex-blueC": "#63d9ea",\n  "katex-blueD": "#11accd",\n  "katex-blueE": "#0c7f99",\n  "katex-tealA": "#94fff5",\n  "katex-tealB": "#26edd5",\n  "katex-tealC": "#01d1c1",\n  "katex-tealD": "#01a995",\n  "katex-tealE": "#208170",\n  "katex-greenA": "#b6ffb0",\n  "katex-greenB": "#8af281",\n  "katex-greenC": "#74cf70",\n  "katex-greenD": "#1fab54",\n  "katex-greenE": "#0d923f",\n  "katex-goldA": "#ffd0a9",\n  "katex-goldB": "#ffbb71",\n  "katex-goldC": "#ff9c39",\n  "katex-goldD": "#e07d10",\n  "katex-goldE": "#a75a05",\n  "katex-redA": "#fca9a9",\n  "katex-redB": "#ff8482",\n  "katex-redC": "#f9685d",\n  "katex-redD": "#e84d39",\n  "katex-redE": "#bc2612",\n  "katex-maroonA": "#ffbde0",\n  "katex-maroonB": "#ff92c6",\n  "katex-maroonC": "#ed5fa6",\n  "katex-maroonD": "#ca337c",\n  "katex-maroonE": "#9e034e",\n  "katex-purpleA": "#ddd7ff",\n  "katex-purpleB": "#c6b9fc",\n  "katex-purpleC": "#aa87ff",\n  "katex-purpleD": "#7854ab",\n  "katex-purpleE": "#543b78",\n  "katex-mintA": "#f5f9e8",\n  "katex-mintB": "#edf2df",\n  "katex-mintC": "#e0e5cc",\n  "katex-grayA": "#f6f7f7",\n  "katex-grayB": "#f0f1f2",\n  "katex-grayC": "#e3e5e6",\n  "katex-grayD": "#d6d8da",\n  "katex-grayE": "#babec2",\n  "katex-grayF": "#888d93",\n  "katex-grayG": "#626569",\n  "katex-grayH": "#3b3e40",\n  "katex-grayI": "#21242c",\n  "katex-kaBlue": "#314453",\n  "katex-kaGreen": "#71B307"\n};\n/* harmony default export */ var src_Options = (Options_Options);\n// CONCATENATED MODULE: ./src/units.js\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\n // This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nvar ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  "pt": 1,\n  // TeX point\n  "mm": 7227 / 2540,\n  // millimeter\n  "cm": 7227 / 254,\n  // centimeter\n  "in": 72.27,\n  // inch\n  "bp": 803 / 800,\n  // big (PostScript) points\n  "pc": 12,\n  // pica\n  "dd": 1238 / 1157,\n  // didot\n  "cc": 14856 / 1157,\n  // cicero (12 didot)\n  "nd": 685 / 642,\n  // new didot\n  "nc": 1370 / 107,\n  // new cicero (12 new didot)\n  "sp": 1 / 65536,\n  // scaled point (TeX\'s internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  "px": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nvar relativeUnit = {\n  "ex": true,\n  "em": true,\n  "mu": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a "size" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n  if (typeof unit !== "string") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === "ex";\n};\n/*\n * Convert a "size" parse node (with numeric "number" and string "unit" fields,\n * as parsed by functions.js argType "size") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nvar units_calculateSize = function calculateSize(sizeValue, options) {\n  var scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === "mu") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    var unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === "ex") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === "em") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new src_ParseError("Invalid unit: \'" + sizeValue.unit + "\'");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n// CONCATENATED MODULE: ./src/buildCommon.js\n/* eslint no-console:0 */\n\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\n\n\n\n\n\n\n// The following have to be loaded from Main-Italic font, using class mathit\nvar mathitLetters = ["\\\\imath", "ı", // dotless i\n"\\\\jmath", "ȷ", // dotless j\n"\\\\pounds", "\\\\mathsterling", "\\\\textsterling", "£"];\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\n\nvar buildCommon_lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (src_symbols[mode][value] && src_symbols[mode][value].replace) {\n    value = src_symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar buildCommon_makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  var lookup = buildCommon_lookupSymbol(value, fontName, mode);\n  var metrics = lookup.metrics;\n  value = lookup.value;\n  var symbolNode;\n\n  if (metrics) {\n    var italic = metrics.italic;\n\n    if (mode === "text" || options && options.font === "mathit") {\n      italic = 0;\n    }\n\n    symbolNode = new domTree_SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== "undefined" && console.warn("No character metrics for \'" + value + "\' in style \'" + fontName + "\'");\n    symbolNode = new domTree_SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push("mtight");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n *\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar buildCommon_mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options && options.font && options.font === "boldsymbol" && buildCommon_lookupSymbol(value, "Main-Bold", mode).metrics) {\n    return buildCommon_makeSymbol(value, "Main-Bold", mode, options, classes.concat(["mathbf"]));\n  } else if (value === "\\\\" || src_symbols[mode][value].font === "main") {\n    return buildCommon_makeSymbol(value, "Main-Regular", mode, options, classes);\n  } else {\n    return buildCommon_makeSymbol(value, "AMS-Regular", mode, options, classes.concat(["amsrm"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (maindefault or mathit) to use for default math font,\n * depending on the symbol.\n */\n\n\nvar buildCommon_mathdefault = function mathdefault(value, mode, options, classes) {\n  if (/[0-9]/.test(value.charAt(0)) || // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n  // need to use Main-Italic instead\n  utils.contains(mathitLetters, value)) {\n    return {\n      fontName: "Main-Italic",\n      fontClass: "mathit"\n    };\n  } else {\n    return {\n      fontName: "Math-Italic",\n      fontClass: "mathdefault"\n    };\n  }\n};\n/**\n * Determines which of the font names (Main-Italic, Math-Italic, and Caligraphic)\n * and corresponding style tags (mathit, mathdefault, or mathcal) to use for font\n * "mathnormal", depending on the symbol.  Use this function instead of fontMap for\n * font "mathnormal".\n */\n\n\nvar buildCommon_mathnormal = function mathnormal(value, mode, options, classes) {\n  if (utils.contains(mathitLetters, value)) {\n    return {\n      fontName: "Main-Italic",\n      fontClass: "mathit"\n    };\n  } else if (/[0-9]/.test(value.charAt(0))) {\n    return {\n      fontName: "Caligraphic-Regular",\n      fontClass: "mathcal"\n    };\n  } else {\n    return {\n      fontName: "Math-Italic",\n      fontClass: "mathdefault"\n    };\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font "boldsymbol",\n * depending on the symbol.  Use this function instead of fontMap for font\n * "boldsymbol".\n */\n\n\nvar boldsymbol = function boldsymbol(value, mode, options, classes) {\n  if (buildCommon_lookupSymbol(value, "Math-BoldItalic", mode).metrics) {\n    return {\n      fontName: "Math-BoldItalic",\n      fontClass: "boldsymbol"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: "Main-Bold",\n      fontClass: "mathbf"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nvar buildCommon_makeOrd = function makeOrd(group, options, type) {\n  var mode = group.mode;\n  var text = group.text;\n  var classes = ["mord"]; // Math mode or Old font (i.e. \\rm)\n\n  var isFont = mode === "math" || mode === "text" && options.font;\n  var fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    var _wideCharacterFont = wide_character_wideCharacterFont(text, mode),\n        wideFontName = _wideCharacterFont[0],\n        wideFontClass = _wideCharacterFont[1];\n\n    return buildCommon_makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    var fontName;\n    var fontClasses;\n\n    if (fontOrFamily === "boldsymbol" || fontOrFamily === "mathnormal") {\n      var fontData = fontOrFamily === "boldsymbol" ? boldsymbol(text, mode, options, classes) : buildCommon_mathnormal(text, mode, options, classes);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (utils.contains(mathitLetters, text)) {\n      fontName = "Main-Italic";\n      fontClasses = ["mathit"];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (buildCommon_lookupSymbol(text, fontName, mode).metrics) {\n      return buildCommon_makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === "Typewriter") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      var parts = [];\n\n      for (var i = 0; i < text.length; i++) {\n        parts.push(buildCommon_makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return buildCommon_makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === "mathord") {\n    var fontLookup = buildCommon_mathdefault(text, mode, options, classes);\n    return buildCommon_makeSymbol(text, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n  } else if (type === "textord") {\n    var font = src_symbols[mode][text] && src_symbols[mode][text].font;\n\n    if (font === "ams") {\n      var _fontName = retrieveTextFontName("amsrm", options.fontWeight, options.fontShape);\n\n      return buildCommon_makeSymbol(text, _fontName, mode, options, classes.concat("amsrm", options.fontWeight, options.fontShape));\n    } else if (font === "main" || !font) {\n      var _fontName2 = retrieveTextFontName("textrm", options.fontWeight, options.fontShape);\n\n      return buildCommon_makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n\n      return buildCommon_makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error("unexpected type: " + type + " in makeOrd");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nvar buildCommon_canCombine = function canCombine(prev, next) {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  }\n\n  for (var style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (var _style in next.style) {\n    if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consequetive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nvar buildCommon_tryCombineChars = function tryCombineChars(chars) {\n  for (var i = 0; i < chars.length - 1; i++) {\n    var prev = chars[i];\n    var next = chars[i + 1];\n\n    if (prev instanceof domTree_SymbolNode && next instanceof domTree_SymbolNode && buildCommon_canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character\'s italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  var height = 0;\n  var depth = 0;\n  var maxFontSize = 0;\n\n  for (var i = 0; i < elem.children.length; i++) {\n    var child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don\'t pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nvar buildCommon_makeSpan = function makeSpan(classes, children, options, style) {\n  var span = new domTree_Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn\'t require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nvar buildCommon_makeSvgSpan = function makeSvgSpan(classes, children, options, style) {\n  return new domTree_Span(classes, children, options, style);\n};\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n  var line = buildCommon_makeSpan([className], [], options);\n  line.height = thickness || options.fontMetrics().defaultRuleThickness;\n  line.style.borderBottomWidth = line.height + "em";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nvar buildCommon_makeAnchor = function makeAnchor(href, classes, children, options) {\n  var anchor = new domTree_Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nvar buildCommon_makeFragment = function makeFragment(children) {\n  var fragment = new tree_DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it\'s a document fragment, allowing to apply classes\n * and styles\n */\n\n\nvar buildCommon_wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof tree_DocumentFragment) {\n    return buildCommon_makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === "individualShift") {\n    var oldChildren = params.children;\n    var children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n\n    var currPos = _depth;\n\n    for (var i = 1; i < oldChildren.length; i++) {\n      var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: "kern",\n        size: size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children: children,\n      depth: _depth\n    };\n  }\n\n  var depth;\n\n  if (params.positionType === "top") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    var bottom = params.positionData;\n\n    for (var _i = 0; _i < params.children.length; _i++) {\n      var child = params.children[_i];\n      bottom -= child.type === "kern" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === "bottom") {\n    depth = -params.positionData;\n  } else {\n    var firstChild = params.children[0];\n\n    if (firstChild.type !== "elem") {\n      throw new Error(\'First child must have type "elem".\');\n    }\n\n    if (params.positionType === "shift") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === "firstBaseline") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error("Invalid positionType " + params.positionType + ".");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth: depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nvar buildCommon_makeVList = function makeVList(params, options) {\n  var _getVListChildrenAndD = getVListChildrenAndDepth(params),\n      children = _getVListChildrenAndD.children,\n      depth = _getVListChildrenAndD.depth; // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item\'s baseline. Since it has\n  // `overflow:hidden`, the strut\'s top edge will sit on the item\'s line box\'s\n  // top edge and the strut\'s bottom edge will sit on the item\'s baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n\n  var pstrutSize = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (child.type === "elem") {\n      var elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  var pstrut = buildCommon_makeSpan(["pstrut"], []);\n  pstrut.style.height = pstrutSize + "em"; // Create a new list of actual children at the correct offsets\n\n  var realChildren = [];\n  var minPos = depth;\n  var maxPos = depth;\n  var currPos = depth;\n\n  for (var _i2 = 0; _i2 < children.length; _i2++) {\n    var _child = children[_i2];\n\n    if (_child.type === "kern") {\n      currPos += _child.size;\n    } else {\n      var _elem = _child.elem;\n      var classes = _child.wrapperClasses || [];\n      var style = _child.wrapperStyle || {};\n      var childWrap = buildCommon_makeSpan(classes, [pstrut, _elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - _elem.depth + "em";\n\n      if (_child.marginLeft) {\n        childWrap.style.marginLeft = _child.marginLeft;\n      }\n\n      if (_child.marginRight) {\n        childWrap.style.marginRight = _child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += _elem.height + _elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell\'s bottom edge will determine the containing table\'s baseline\n  // without overly expanding the containing line-box.\n\n\n  var vlist = buildCommon_makeSpan(["vlist"], realChildren);\n  vlist.style.height = maxPos + "em"; // A second row is used if necessary to represent the vlist\'s depth.\n\n  var rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    var emptySpan = buildCommon_makeSpan([], []);\n    var depthStrut = buildCommon_makeSpan(["vlist"], [emptySpan]);\n    depthStrut.style.height = -minPos + "em"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    var topStrut = buildCommon_makeSpan(["vlist-s"], [new domTree_SymbolNode("\\u200B")]);\n    rows = [buildCommon_makeSpan(["vlist-r"], [vlist, topStrut]), buildCommon_makeSpan(["vlist-r"], [depthStrut])];\n  } else {\n    rows = [buildCommon_makeSpan(["vlist-r"], [vlist])];\n  }\n\n  var vtable = buildCommon_makeSpan(["vlist-t"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push("vlist-t2");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it\'s\n// static space between elements in a horizontal layout.\n\n\nvar buildCommon_makeGlue = function makeGlue(measurement, options) {\n  // Make an empty span for the space\n  var rule = buildCommon_makeSpan(["mspace"], [], options);\n  var size = units_calculateSize(measurement, options);\n  rule.style.marginRight = size + "em";\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  var baseFontName = "";\n\n  switch (fontFamily) {\n    case "amsrm":\n      baseFontName = "AMS";\n      break;\n\n    case "textrm":\n      baseFontName = "Main";\n      break;\n\n    case "textsf":\n      baseFontName = "SansSerif";\n      break;\n\n    case "texttt":\n      baseFontName = "Typewriter";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  var fontStylesName;\n\n  if (fontWeight === "textbf" && fontShape === "textit") {\n    fontStylesName = "BoldItalic";\n  } else if (fontWeight === "textbf") {\n    fontStylesName = "Bold";\n  } else if (fontWeight === "textit") {\n    fontStylesName = "Italic";\n  } else {\n    fontStylesName = "Regular";\n  }\n\n  return baseFontName + "-" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for "mathvariant" attribute in buildMathML.js\n * - fontName: the "style" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nvar fontMap = {\n  // styles\n  "mathbf": {\n    variant: "bold",\n    fontName: "Main-Bold"\n  },\n  "mathrm": {\n    variant: "normal",\n    fontName: "Main-Regular"\n  },\n  "textit": {\n    variant: "italic",\n    fontName: "Main-Italic"\n  },\n  "mathit": {\n    variant: "italic",\n    fontName: "Main-Italic"\n  },\n  // Default math font, "mathnormal" and "boldsymbol" are missing because they\n  // require the use of several fonts: Main-Italic and Math-Italic for default\n  // math font, Main-Italic, Math-Italic, Caligraphic for "mathnormal", and\n  // Math-BoldItalic and Main-Bold for "boldsymbol".  This is handled by a\n  // special case in makeOrd which ends up calling mathdefault, mathnormal,\n  // and boldsymbol.\n  // families\n  "mathbb": {\n    variant: "double-struck",\n    fontName: "AMS-Regular"\n  },\n  "mathcal": {\n    variant: "script",\n    fontName: "Caligraphic-Regular"\n  },\n  "mathfrak": {\n    variant: "fraktur",\n    fontName: "Fraktur-Regular"\n  },\n  "mathscr": {\n    variant: "script",\n    fontName: "Script-Regular"\n  },\n  "mathsf": {\n    variant: "sans-serif",\n    fontName: "SansSerif-Regular"\n  },\n  "mathtt": {\n    variant: "monospace",\n    fontName: "Typewriter-Regular"\n  }\n};\nvar svgData = {\n  //   path, width, height\n  vec: ["vec", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: ["oiintSize1", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: ["oiintSize2", 1.472, 0.659],\n  oiiintSize1: ["oiiintSize1", 1.304, 0.499],\n  oiiintSize2: ["oiiintSize2", 1.98, 0.659]\n};\n\nvar buildCommon_staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  var _svgData$value = svgData[value],\n      pathName = _svgData$value[0],\n      width = _svgData$value[1],\n      height = _svgData$value[2];\n  var path = new domTree_PathNode(pathName);\n  var svgNode = new SvgNode([path], {\n    "width": width + "em",\n    "height": height + "em",\n    // Override CSS rule `.katex svg { width: 100% }`\n    "style": "width:" + width + "em",\n    "viewBox": "0 0 " + 1000 * width + " " + 1000 * height,\n    "preserveAspectRatio": "xMinYMin"\n  });\n  var span = buildCommon_makeSvgSpan(["overlay"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + "em";\n  span.style.width = width + "em";\n  return span;\n};\n\n/* harmony default export */ var buildCommon = ({\n  fontMap: fontMap,\n  makeSymbol: buildCommon_makeSymbol,\n  mathsym: buildCommon_mathsym,\n  makeSpan: buildCommon_makeSpan,\n  makeSvgSpan: buildCommon_makeSvgSpan,\n  makeLineSpan: makeLineSpan,\n  makeAnchor: buildCommon_makeAnchor,\n  makeFragment: buildCommon_makeFragment,\n  wrapFragment: buildCommon_wrapFragment,\n  makeVList: buildCommon_makeVList,\n  makeOrd: buildCommon_makeOrd,\n  makeGlue: buildCommon_makeGlue,\n  staticSvg: buildCommon_staticSvg,\n  svgData: svgData,\n  tryCombineChars: buildCommon_tryCombineChars\n});\n// CONCATENATED MODULE: ./src/parseNode.js\n\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node\'s type does not match.\n */\nfunction assertNodeType(node, type) {\n  var typedNode = checkNodeType(node, type);\n\n  if (!typedNode) {\n    throw new Error("Expected node of type " + type + ", but got " + (node ? "node of type " + node.type : String(node)));\n  } // $FlowFixMe: Unsure why.\n\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkNodeType(node, type) {\n  if (node && node.type === type) {\n    // The definition of ParseNode<TYPE> doesn\'t communicate to flow that\n    // `type: TYPE` (as that\'s not explicitly mentioned anywhere), though that\n    // happens to be true for all our value types.\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node\'s type does not match.\n */\n\nfunction assertAtomFamily(node, family) {\n  var typedNode = checkAtomFamily(node, family);\n\n  if (!typedNode) {\n    throw new Error("Expected node of type \\"atom\\" and family \\"" + family + "\\", but got " + (node ? node.type === "atom" ? "atom of family " + node.family : "node of type " + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkAtomFamily(node, family) {\n  return node && node.type === "atom" && node.family === family ? node : null;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  var typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error("Expected node of symbol group type, but got " + (node ? "node of type " + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === "atom" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n// CONCATENATED MODULE: ./src/spacingData.js\n/**\n * Describes spaces between different classes of atoms.\n */\nvar thinspace = {\n  number: 3,\n  unit: "mu"\n};\nvar mediumspace = {\n  number: 4,\n  unit: "mu"\n};\nvar thickspace = {\n  number: 5,\n  unit: "mu"\n}; // Making the type below exact with all optional fields doesn\'t work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nvar spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nvar tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n// CONCATENATED MODULE: ./src/defineFunction.js\n\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  var type = _ref.type,\n      nodeType = _ref.nodeType,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of functions\n  var data = {\n    type: type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    greediness: props.greediness === undefined ? 1 : props.greediness,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    consumeMode: props.consumeMode,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _functions should be a type union of all\n    // possible `FunctionSpec<>` possibilities instead of `FunctionSpec<*>`,\n    // which is an existential type.\n    // $FlowFixMe\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function\'s ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  var type = _ref2.type,\n      htmlBuilder = _ref2.htmlBuilder,\n      mathmlBuilder = _ref2.mathmlBuilder;\n  defineFunction({\n    type: type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n    handler: function handler() {\n      throw new Error(\'Should never be called.\');\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n  });\n} // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nvar defineFunction_ordargument = function ordargument(arg) {\n  var node = checkNodeType(arg, "ordgroup");\n  return node ? node.body : [arg];\n};\n// CONCATENATED MODULE: ./src/buildHTML.js\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\n\n\n\n\n\n\n\n\n\nvar buildHTML_makeSpan = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar binLeftCanceller = ["leftmost", "mbin", "mopen", "mrel", "mop", "mpunct"];\nvar binRightCanceller = ["rightmost", "mrel", "mclose", "mpunct"];\nvar buildHTML_styleMap = {\n  "display": src_Style.DISPLAY,\n  "text": src_Style.TEXT,\n  "script": src_Style.SCRIPT,\n  "scriptscript": src_Style.SCRIPTSCRIPT\n};\nvar DomEnum = {\n  mord: "mord",\n  mop: "mop",\n  mbin: "mbin",\n  mrel: "mrel",\n  mopen: "mopen",\n  mclose: "mclose",\n  mpunct: "mpunct",\n  minner: "minner"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildHTML_buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  var groups = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    var output = buildHTML_buildGroup(expression[i], options);\n\n    if (output instanceof tree_DocumentFragment) {\n      var children = output.children;\n      groups.push.apply(groups, children);\n    } else {\n      groups.push(output);\n    }\n  } // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  var glueOptions = options;\n\n  if (expression.length === 1) {\n    var node = checkNodeType(expression[0], "sizing") || checkNodeType(expression[0], "styling");\n\n    if (!node) {// No match.\n    } else if (node.type === "sizing") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === "styling") {\n      glueOptions = options.havingStyle(buildHTML_styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class "leftmost"\n  // or "rightmost", respectively, is used to indicate it.\n\n\n  var dummyPrev = buildHTML_makeSpan([surrounding[0] || "leftmost"], [], options);\n  var dummyNext = buildHTML_makeSpan([surrounding[1] || "rightmost"], [], options); // TODO: These code assumes that a node\'s math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  traverseNonSpaceNodes(groups, function (node, prev) {\n    var prevType = prev.classes[0];\n    var type = node.classes[0];\n\n    if (prevType === "mbin" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = "mord";\n    } else if (type === "mbin" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = "mord";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  traverseNonSpaceNodes(groups, function (node, prev) {\n    var prevType = getTypeOfDomTree(prev);\n    var type = getTypeOfDomTree(node); // \'mtight\' indicates that the node is script or scriptscript style.\n\n    var space = prevType && type ? node.hasClass("mtight") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nvar traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  var i = 0;\n\n  for (; i < nodes.length; i++) {\n    var node = nodes[i];\n    var partialGroup = buildHTML_checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      traverseNonSpaceNodes(partialGroup.children, callback, prev);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    if (node.classes[0] === "mspace") {\n      continue;\n    }\n\n    var result = callback(node, prev.node);\n\n    if (result) {\n      if (prev.insertAfter) {\n        prev.insertAfter(result);\n      } else {\n        // insert at front\n        nodes.unshift(result);\n        i++;\n      }\n    }\n\n    prev.node = node;\n\n    prev.insertAfter = function (index) {\n      return function (n) {\n        nodes.splice(index + 1, 0, n);\n        i++;\n      };\n    }(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nvar buildHTML_checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof tree_DocumentFragment || node instanceof domTree_Anchor) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nvar getOutermostNode = function getOutermostNode(node, side) {\n  var partialGroup = buildHTML_checkPartialGroup(node);\n\n  if (partialGroup) {\n    var children = partialGroup.children;\n\n    if (children.length) {\n      if (side === "right") {\n        return getOutermostNode(children[children.length - 1], "right");\n      } else if (side === "left") {\n        return getOutermostNode(children[0], "left");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  var moreClasses = ["nulldelimiter"].concat(options.baseSizingClasses());\n  return buildHTML_makeSpan(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nvar buildHTML_buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return buildHTML_makeSpan();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    var groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n      var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new src_ParseError("Got group of unknown type: \'" + group.type + "\'");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  var body = buildHTML_makeSpan(["base"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n  // We used to have separate top and bottom struts, where the bottom strut\n  // would like to use `vertical-align: top`, but in IE 9 this lowers the\n  // baseline of the box to the bottom of this strut (instead of staying in\n  // the normal place) so we use an absolute value for vertical-align instead.\n\n  var strut = buildHTML_makeSpan(["strut"]);\n  strut.style.height = body.height + body.depth + "em";\n  strut.style.verticalAlign = -body.depth + "em";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  var tag = null;\n\n  if (tree.length === 1 && tree[0].type === "tag") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  var expression = buildHTML_buildExpression(tree, options, true);\n  var children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says "A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level\'\' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction)."\n\n  var parts = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass("mbin") || expression[i].hasClass("mrel") || expression[i].hasClass("allowbreak")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      var nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass("mspace") && !expression[i + 1].hasClass("newline")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass("nobreak")) {\n          nobreak = true;\n        }\n      } // Don\'t allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass("newline")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  var tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildHTML_buildExpression(tag, options, true));\n    tagChild.classes = ["tag"];\n    children.push(tagChild);\n  }\n\n  var htmlNode = buildHTML_makeSpan(["katex-html"], children);\n  htmlNode.setAttribute("aria-hidden", "true"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    var strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + "em";\n    strut.style.verticalAlign = -htmlNode.depth + "em";\n  }\n\n  return htmlNode;\n}\n// CONCATENATED MODULE: ./src/mathMLTree.js\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we\'re mainly using MathML to improve accessibility, we don\'t manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\n\nfunction newDocumentFragment(children) {\n  return new tree_DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `"mo"` or\n * `"mspace"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nvar mathMLTree_MathNode =\n/*#__PURE__*/\nfunction () {\n  function MathNode(type, children) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  var _proto = MathNode.prototype;\n\n  _proto.setAttribute = function setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n  ;\n\n  _proto.toNode = function toNode() {\n    var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  ;\n\n  _proto.toMarkup = function toMarkup() {\n    var markup = "<" + this.type; // Add the attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += " " + attr + "=\\"";\n        markup += utils.escape(this.attributes[attr]);\n        markup += "\\"";\n      }\n    }\n\n    markup += ">";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += "</" + this.type + ">";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n  ;\n\n  _proto.toText = function toText() {\n    return this.children.map(function (child) {\n      return child.toText();\n    }).join("");\n  };\n\n  return MathNode;\n}();\n/**\n * This node represents a piece of text.\n */\n\nvar mathMLTree_TextNode =\n/*#__PURE__*/\nfunction () {\n  function TextNode(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  var _proto2 = TextNode.prototype;\n\n  _proto2.toNode = function toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n  ;\n\n  _proto2.toMarkup = function toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n  ;\n\n  _proto2.toText = function toText() {\n    return this.text;\n  };\n\n  return TextNode;\n}();\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nvar SpaceNode =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  function SpaceNode(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it\'s not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = "\\u200A"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = "\\u2009"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = "\\u2005"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = "\\u2005\\u200A"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = "\\u200A\\u2063"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = "\\u2009\\u2063"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = "\\u205F\\u2063"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = "\\u2005\\u2063"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  var _proto3 = SpaceNode.prototype;\n\n  _proto3.toNode = function toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");\n      node.setAttribute("width", this.width + "em");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  ;\n\n  _proto3.toMarkup = function toMarkup() {\n    if (this.character) {\n      return "<mtext>" + this.character + "</mtext>";\n    } else {\n      return "<mspace width=\\"" + this.width + "em\\"/>";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n  ;\n\n  _proto3.toText = function toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return " ";\n    }\n  };\n\n  return SpaceNode;\n}();\n\n/* harmony default export */ var mathMLTree = ({\n  MathNode: mathMLTree_MathNode,\n  TextNode: mathMLTree_TextNode,\n  SpaceNode: SpaceNode,\n  newDocumentFragment: newDocumentFragment\n});\n// CONCATENATED MODULE: ./src/buildMathML.js\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar buildMathML_makeText = function makeText(text, mode, options) {\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === "tt" || options.font && options.font.substr(4, 2) === "tt"))) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nvar buildMathML_makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode("mrow", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nvar buildMathML_getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === "texttt") {\n    return "monospace";\n  } else if (options.fontFamily === "textsf") {\n    if (options.fontShape === "textit" && options.fontWeight === "textbf") {\n      return "sans-serif-bold-italic";\n    } else if (options.fontShape === "textit") {\n      return "sans-serif-italic";\n    } else if (options.fontWeight === "textbf") {\n      return "bold-sans-serif";\n    } else {\n      return "sans-serif";\n    }\n  } else if (options.fontShape === "textit" && options.fontWeight === "textbf") {\n    return "bold-italic";\n  } else if (options.fontShape === "textit") {\n    return "italic";\n  } else if (options.fontWeight === "textbf") {\n    return "bold";\n  }\n\n  var font = options.font;\n\n  if (!font || font === "mathnormal") {\n    return null;\n  }\n\n  var mode = group.mode;\n\n  if (font === "mathit") {\n    return "italic";\n  } else if (font === "boldsymbol") {\n    return "bold-italic";\n  }\n\n  var text = group.text;\n\n  if (utils.contains(["\\\\imath", "\\\\jmath"], text)) {\n    return null;\n  }\n\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  var fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nvar buildMathML_buildExpression = function buildExpression(expression, options) {\n  var groups = [];\n  var lastGroup;\n\n  for (var i = 0; i < expression.length; i++) {\n    var group = buildMathML_buildGroup(expression[i], options);\n\n    if (group instanceof mathMLTree_MathNode && lastGroup instanceof mathMLTree_MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (group.type === \'mtext\' && lastGroup.type === \'mtext\' && group.getAttribute(\'mathvariant\') === lastGroup.getAttribute(\'mathvariant\')) {\n        var _lastGroup$children;\n\n        (_lastGroup$children = lastGroup.children).push.apply(_lastGroup$children, group.children);\n\n        continue; // Concatenate adjacent <mn>s\n      } else if (group.type === \'mn\' && lastGroup.type === \'mn\') {\n        var _lastGroup$children2;\n\n        (_lastGroup$children2 = lastGroup.children).push.apply(_lastGroup$children2, group.children);\n\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (group.type === \'mi\' && group.children.length === 1 && lastGroup.type === \'mn\') {\n        var child = group.children[0];\n\n        if (child instanceof mathMLTree_TextNode && child.text === \'.\') {\n          var _lastGroup$children3;\n\n          (_lastGroup$children3 = lastGroup.children).push.apply(_lastGroup$children3, group.children);\n\n          continue;\n        }\n      }\n    }\n\n    groups.push(group);\n    lastGroup = group;\n  } // TODO(kevinb): combine \\\\not with mrels and mords\n\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there\'s more than one.  Returns a single node instead of an array.\n */\n\nvar buildExpressionRow = function buildExpressionRow(expression, options) {\n  return buildMathML_makeRow(buildMathML_buildExpression(expression, options));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nvar buildMathML_buildGroup = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode("mrow");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    var result = _mathmlGroupBuilders[group.type](group, options);\n    return result;\n  } else {\n    throw new src_ParseError("Got group of unknown type: \'" + group.type + "\'");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options) {\n  var expression = buildMathML_buildExpression(tree, options); // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it\'s a single <mrow> or <mtable>.\n\n  var wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof mathMLTree_MathNode && utils.contains(["mrow", "mtable"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode("mrow", expression);\n  } // Build a TeX annotation of the source\n\n\n  var annotation = new mathMLTree.MathNode("annotation", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute("encoding", "application/x-tex");\n  var semantics = new mathMLTree.MathNode("semantics", [wrapper, annotation]);\n  var math = new mathMLTree.MathNode("math", [semantics]); // You can\'t style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don\'t want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n  // $FlowFixMe\n\n  return buildCommon.makeSpan(["katex-mathml"], [math]);\n}\n// CONCATENATED MODULE: ./src/buildTree.js\n\n\n\n\n\n\n\nvar buildTree_optionsFromSettings = function optionsFromSettings(settings) {\n  return new src_Options({\n    style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,\n    maxSize: settings.maxSize\n  });\n};\n\nvar buildTree_displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    var classes = ["katex-display"];\n\n    if (settings.leqno) {\n      classes.push("leqno");\n    }\n\n    if (settings.fleqn) {\n      classes.push("fleqn");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nvar buildTree_buildTree = function buildTree(tree, expression, settings) {\n  var options = buildTree_optionsFromSettings(settings);\n  var mathMLNode = buildMathML(tree, expression, options);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan(["katex"], [mathMLNode, htmlNode]);\n  return buildTree_displayWrap(katexNode, settings);\n};\nvar buildTree_buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  var options = buildTree_optionsFromSettings(settings);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan(["katex"], [htmlNode]);\n  return buildTree_displayWrap(katexNode, settings);\n};\n/* harmony default export */ var src_buildTree = (buildTree_buildTree);\n// CONCATENATED MODULE: ./src/stretchy.js\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\n\n\n\nvar stretchyCodePoint = {\n  widehat: "^",\n  widecheck: "ˇ",\n  widetilde: "~",\n  utilde: "~",\n  overleftarrow: "\\u2190",\n  underleftarrow: "\\u2190",\n  xleftarrow: "\\u2190",\n  overrightarrow: "\\u2192",\n  underrightarrow: "\\u2192",\n  xrightarrow: "\\u2192",\n  underbrace: "\\u23B5",\n  overbrace: "\\u23DE",\n  overleftrightarrow: "\\u2194",\n  underleftrightarrow: "\\u2194",\n  xleftrightarrow: "\\u2194",\n  Overrightarrow: "\\u21D2",\n  xRightarrow: "\\u21D2",\n  overleftharpoon: "\\u21BC",\n  xleftharpoonup: "\\u21BC",\n  overrightharpoon: "\\u21C0",\n  xrightharpoonup: "\\u21C0",\n  xLeftarrow: "\\u21D0",\n  xLeftrightarrow: "\\u21D4",\n  xhookleftarrow: "\\u21A9",\n  xhookrightarrow: "\\u21AA",\n  xmapsto: "\\u21A6",\n  xrightharpoondown: "\\u21C1",\n  xleftharpoondown: "\\u21BD",\n  xrightleftharpoons: "\\u21CC",\n  xleftrightharpoons: "\\u21CB",\n  xtwoheadleftarrow: "\\u219E",\n  xtwoheadrightarrow: "\\u21A0",\n  xlongequal: "=",\n  xtofrom: "\\u21C4",\n  xrightleftarrows: "\\u21C4",\n  xrightequilibrium: "\\u21CC",\n  // Not a perfect match.\n  xleftequilibrium: "\\u21CB" // None better available.\n\n};\n\nvar stretchy_mathMLnode = function mathMLnode(label) {\n  var node = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n  node.setAttribute("stretchy", "true");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span\'s CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second "brush-stroke" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nvar katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],\n  overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],\n  underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],\n  underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],\n  xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"],\n  xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"],\n  Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"],\n  xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"],\n  xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"],\n  overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"],\n  xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"],\n  xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"],\n  overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"],\n  xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"],\n  xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"],\n  xlongequal: [["longequal"], 0.888, 334, "xMinYMin"],\n  xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"],\n  xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"],\n  overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],\n  overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548],\n  underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548],\n  underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],\n  xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522],\n  xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560],\n  xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716],\n  xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716],\n  xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522],\n  xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522],\n  overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],\n  underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],\n  overgroup: [["leftgroup", "rightgroup"], 0.888, 342],\n  undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342],\n  xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522],\n  xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901],\n  xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716],\n  xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n  if (arg.type === "ordgroup") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nvar stretchy_svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    var viewBoxWidth = 400000; // default\n\n    var label = group.label.substr(1);\n\n    if (utils.contains(["widehat", "widecheck", "widetilde", "utilde"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      var grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      var numChars = groupLength(grp.base);\n      var viewBoxHeight;\n      var pathName;\n\n      var _height;\n\n      if (numChars > 5) {\n        if (label === "widehat" || label === "widecheck") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          _height = 0.42;\n          pathName = label + "4";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          _height = 0.34;\n          pathName = "tilde4";\n        }\n      } else {\n        var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === "widehat" || label === "widecheck") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = "tilde" + imgIndex;\n        }\n      }\n\n      var path = new domTree_PathNode(pathName);\n      var svgNode = new SvgNode([path], {\n        "width": "100%",\n        "height": _height + "em",\n        "viewBox": "0 0 " + viewBoxWidth + " " + viewBoxHeight,\n        "preserveAspectRatio": "none"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height: _height\n      };\n    } else {\n      var spans = [];\n      var data = katexImagesData[label];\n      var paths = data[0],\n          _minWidth = data[1],\n          _viewBoxHeight = data[2];\n\n      var _height2 = _viewBoxHeight / 1000;\n\n      var numSvgChildren = paths.length;\n      var widthClasses;\n      var aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        var align1 = data[3];\n        widthClasses = ["hide-tail"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = ["halfarrow-left", "halfarrow-right"];\n        aligns = ["xMinYMin", "xMaxYMin"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = ["brace-left", "brace-center", "brace-right"];\n        aligns = ["xMinYMin", "xMidYMin", "xMaxYMin"];\n      } else {\n        throw new Error("Correct katexImagesData or update code here to support\\n                    " + numSvgChildren + " children.");\n      }\n\n      for (var i = 0; i < numSvgChildren; i++) {\n        var _path = new domTree_PathNode(paths[i]);\n\n        var _svgNode = new SvgNode([_path], {\n          "width": "400em",\n          "height": _height2 + "em",\n          "viewBox": "0 0 " + viewBoxWidth + " " + _viewBoxHeight,\n          "preserveAspectRatio": aligns[i] + " slice"\n        });\n\n        var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span: _span,\n            minWidth: _minWidth,\n            height: _height2\n          };\n        } else {\n          _span.style.height = _height2 + "em";\n          spans.push(_span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan(["stretchy"], spans, options),\n        minWidth: _minWidth,\n        height: _height2\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  var _buildSvgSpan_ = buildSvgSpan_(),\n      span = _buildSvgSpan_.span,\n      minWidth = _buildSvgSpan_.minWidth,\n      height = _buildSvgSpan_.height; // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n  span.height = height;\n  span.style.height = height + "em";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + "em";\n  }\n\n  return span;\n};\n\nvar stretchy_encloseSpan = function encloseSpan(inner, label, pad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n  var img;\n  var totalHeight = inner.height + inner.depth + 2 * pad;\n\n  if (/fbox|color/.test(label)) {\n    img = buildCommon.makeSpan(["stretchy", label], [], options);\n\n    if (label === "fbox") {\n      var color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel\'s SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    var lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        "x1": "0",\n        "y1": "0",\n        "x2": "100%",\n        "y2": "100%",\n        "stroke-width": "0.046em"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        "x1": "0",\n        "y1": "100%",\n        "x2": "100%",\n        "y2": "0",\n        "stroke-width": "0.046em"\n      }));\n    }\n\n    var svgNode = new SvgNode(lines, {\n      "width": "100%",\n      "height": totalHeight + "em"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + "em";\n  return img;\n};\n\n/* harmony default export */ var stretchy = ({\n  encloseSpan: stretchy_encloseSpan,\n  mathMLnode: stretchy_mathMLnode,\n  svgSpan: stretchy_svgSpan\n});\n// CONCATENATED MODULE: ./src/functions/accent.js\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only "accent", but\nvar accent_htmlBuilder = function htmlBuilder(grp, options) {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  var base;\n  var group;\n  var supSub = checkNodeType(grp, "supsub");\n  var supSubGroup;\n\n  if (supSub) {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won\'t be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(supSub.base, "accent"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    supSub.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildHTML_buildGroup(supSub, options)); // reset original base\n\n    supSub.base = group;\n  } else {\n    group = assertNodeType(grp, "accent");\n    base = group.base;\n  } // Build the base group\n\n\n  var body = buildHTML_buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  var mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line "If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font."\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  var skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    var baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    var baseGroup = buildHTML_buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can\'t get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  var clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  var accentBody;\n\n  if (!group.isStretchy) {\n    var accent;\n    var width;\n\n    if (group.label === "\\\\vec") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg("vec", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeSymbol(group.label, "Main-Regular", group.mode, options); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don\'t want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan(["accent-body"], [accent]); // "Full" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    var accentFull = group.label === "\\\\textcircled";\n\n    if (accentFull) {\n      accentBody.classes.push(\'accent-full\');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    var left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn\'t contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + "em"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === "\\\\textcircled") {\n      accentBody.style.top = ".2em";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: body\n      }, {\n        type: "kern",\n        size: -clearance\n      }, {\n        type: "elem",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: body\n      }, {\n        type: "elem",\n        elem: accentBody,\n        wrapperClasses: ["svg-align"],\n        wrapperStyle: skew > 0 ? {\n          width: "calc(100% - " + 2 * skew + "em)",\n          marginLeft: 2 * skew + "em"\n        } : undefined\n      }]\n    }, options);\n  }\n\n  var accentWrap = buildCommon.makeSpan(["mord", "accent"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the "base" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don\'t rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = "mord";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nvar accent_mathmlBuilder = function mathmlBuilder(group, options) {\n  var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode("mo", [buildMathML_makeText(group.label, group.mode)]);\n  var node = new mathMLTree.MathNode("mover", [buildMathML_buildGroup(group.base, options), accentNode]);\n  node.setAttribute("accent", "true");\n  return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp(["\\\\acute", "\\\\grave", "\\\\ddot", "\\\\tilde", "\\\\bar", "\\\\breve", "\\\\check", "\\\\hat", "\\\\vec", "\\\\dot", "\\\\mathring"].map(function (accent) {\n  return "\\\\" + accent;\n}).join("|")); // Accents\n\ndefineFunction({\n  type: "accent",\n  names: ["\\\\acute", "\\\\grave", "\\\\ddot", "\\\\tilde", "\\\\bar", "\\\\breve", "\\\\check", "\\\\hat", "\\\\vec", "\\\\dot", "\\\\mathring", "\\\\widecheck", "\\\\widehat", "\\\\widetilde", "\\\\overrightarrow", "\\\\overleftarrow", "\\\\Overrightarrow", "\\\\overleftrightarrow", "\\\\overgroup", "\\\\overlinesegment", "\\\\overleftharpoon", "\\\\overrightharpoon"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var base = args[0];\n    var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    var isShifty = !isStretchy || context.funcName === "\\\\widehat" || context.funcName === "\\\\widetilde" || context.funcName === "\\\\widecheck";\n    return {\n      type: "accent",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder: accent_htmlBuilder,\n  mathmlBuilder: accent_mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: "accent",\n  names: ["\\\\\'", "\\\\`", "\\\\^", "\\\\~", "\\\\=", "\\\\u", "\\\\.", \'\\\\"\', "\\\\r", "\\\\H", "\\\\v", "\\\\textcircled"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: function handler(context, args) {\n    var base = args[0];\n    return {\n      type: "accent",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder: accent_htmlBuilder,\n  mathmlBuilder: accent_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/accentunder.js\n// Horizontal overlap functions\n\n\n\n\n\n\ndefineFunction({\n  type: "accentUnder",\n  names: ["\\\\underleftarrow", "\\\\underrightarrow", "\\\\underleftrightarrow", "\\\\undergroup", "\\\\underlinesegment", "\\\\utilde"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var base = args[0];\n    return {\n      type: "accentUnder",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Treat under accents much like underlines.\n    var innerGroup = buildHTML_buildGroup(group.base, options);\n    var accentBody = stretchy.svgSpan(group, options);\n    var kern = group.label === "\\\\utilde" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: "bottom",\n      positionData: accentBody.height + kern,\n      children: [{\n        type: "elem",\n        elem: accentBody,\n        wrapperClasses: ["svg-align"]\n      }, {\n        type: "kern",\n        size: kern\n      }, {\n        type: "elem",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan(["mord", "accentunder"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var accentNode = stretchy.mathMLnode(group.label);\n    var node = new mathMLTree.MathNode("munder", [buildMathML_buildGroup(group.base, options), accentNode]);\n    node.setAttribute("accentunder", "true");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/arrow.js\n\n\n\n\n\n\n// Stretchy arrows with an optional argument\ndefineFunction({\n  type: "xArrow",\n  names: ["\\\\xleftarrow", "\\\\xrightarrow", "\\\\xLeftarrow", "\\\\xRightarrow", "\\\\xleftrightarrow", "\\\\xLeftrightarrow", "\\\\xhookleftarrow", "\\\\xhookrightarrow", "\\\\xmapsto", "\\\\xrightharpoondown", "\\\\xrightharpoonup", "\\\\xleftharpoondown", "\\\\xleftharpoonup", "\\\\xrightleftharpoons", "\\\\xleftrightharpoons", "\\\\xlongequal", "\\\\xtwoheadrightarrow", "\\\\xtwoheadleftarrow", "\\\\xtofrom", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  "\\\\xrightleftarrows", "\\\\xrightequilibrium", "\\\\xleftequilibrium"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: "xArrow",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n  // Flow is unable to correctly infer the type of `group`, even though it\'s\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder: function htmlBuilder(group, options) {\n    var style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, newOptions, options), options);\n    upperGroup.classes.push("x-arrow-pad");\n    var lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push("x-arrow-pad");\n    }\n\n    var arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === "\\\\xleftequilibrium") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    var vlist;\n\n    if (lowerGroup) {\n      var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: "individualShift",\n        children: [{\n          type: "elem",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: "elem",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: "elem",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: "individualShift",\n        children: [{\n          type: "elem",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: "elem",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing "svg-align" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push("svg-align");\n    return buildCommon.makeSpan(["mrel", "x-arrow"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var arrowNode = stretchy.mathMLnode(group.label);\n    var node;\n    var lowerNode;\n\n    if (group.body) {\n      var upperNode = buildMathML_buildGroup(group.body, options);\n\n      if (group.below) {\n        lowerNode = buildMathML_buildGroup(group.below, options);\n        node = new mathMLTree.MathNode("munderover", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode("mover", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      lowerNode = buildMathML_buildGroup(group.below, options);\n      node = new mathMLTree.MathNode("munder", [arrowNode, lowerNode]);\n    } else {\n      node = new mathMLTree.MathNode("mover", [arrowNode]);\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/char.js\n\n\n // \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: "textord",\n  names: ["\\\\@char"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var arg = assertNodeType(args[0], "ordgroup");\n    var group = arg.body;\n    var number = "";\n\n    for (var i = 0; i < group.length; i++) {\n      var node = assertNodeType(group[i], "textord");\n      number += node.text;\n    }\n\n    var code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new src_ParseError("\\\\@char has non-numeric argument " + number);\n    }\n\n    return {\n      type: "textord",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/color.js\n\n\n\n\n\n\n\nvar color_htmlBuilder = function htmlBuilder(group, options) {\n  var elements = buildHTML_buildExpression(group.body, options.withColor(group.color), false); // \\color isn\'t supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nvar color_mathmlBuilder = function mathmlBuilder(group, options) {\n  var inner = buildMathML_buildExpression(group.body, options);\n  var node = new mathMLTree.MathNode("mstyle", inner);\n  node.setAttribute("mathcolor", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: "color",\n  names: ["\\\\textcolor"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: ["color", "original"]\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var color = assertNodeType(args[0], "color-token").color;\n    var body = args[1];\n    return {\n      type: "color",\n      mode: parser.mode,\n      color: color,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n}); // TODO(kevinb): define these using macros\n\ndefineFunction({\n  type: "color",\n  names: ["\\\\blue", "\\\\orange", "\\\\pink", "\\\\red", "\\\\green", "\\\\gray", "\\\\purple", "\\\\blueA", "\\\\blueB", "\\\\blueC", "\\\\blueD", "\\\\blueE", "\\\\tealA", "\\\\tealB", "\\\\tealC", "\\\\tealD", "\\\\tealE", "\\\\greenA", "\\\\greenB", "\\\\greenC", "\\\\greenD", "\\\\greenE", "\\\\goldA", "\\\\goldB", "\\\\goldC", "\\\\goldD", "\\\\goldE", "\\\\redA", "\\\\redB", "\\\\redC", "\\\\redD", "\\\\redE", "\\\\maroonA", "\\\\maroonB", "\\\\maroonC", "\\\\maroonD", "\\\\maroonE", "\\\\purpleA", "\\\\purpleB", "\\\\purpleC", "\\\\purpleD", "\\\\purpleE", "\\\\mintA", "\\\\mintB", "\\\\mintC", "\\\\grayA", "\\\\grayB", "\\\\grayC", "\\\\grayD", "\\\\grayE", "\\\\grayF", "\\\\grayG", "\\\\grayH", "\\\\grayI", "\\\\kaBlue", "\\\\kaGreen"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    var body = args[0];\n    return {\n      type: "color",\n      mode: parser.mode,\n      color: "katex-" + funcName.slice(1),\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\ndefineFunction({\n  type: "color",\n  names: ["\\\\color"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: ["color"]\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    var color = assertNodeType(args[0], "color-token").color; // If we see a styling function, parse out the implicit body\n\n    var body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: "color",\n      mode: parser.mode,\n      color: color,\n      body: body\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/cr.js\n// Row breaks within tabular environments, and line breaks at top level\n\n\n\n\n\n // \\\\ is a macro mapping to either \\cr or \\newline.  Because they have the\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we\'re in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n  type: "cr",\n  names: ["\\\\cr", "\\\\newline"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: ["size"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var size = optArgs[0];\n    var newRow = funcName === "\\\\cr";\n    var newLine = false;\n\n    if (!newRow) {\n      if (parser.settings.displayMode && parser.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\\\\\ or \\\\newline " + "does nothing in display mode")) {\n        newLine = false;\n      } else {\n        newLine = true;\n      }\n    }\n\n    return {\n      type: "cr",\n      mode: parser.mode,\n      newLine: newLine,\n      newRow: newRow,\n      size: size && assertNodeType(size, "size").value\n    };\n  },\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.newRow) {\n      throw new src_ParseError("\\\\cr valid only within a tabular/array environment");\n    }\n\n    var span = buildCommon.makeSpan(["mspace"], [], options);\n\n    if (group.newLine) {\n      span.classes.push("newline");\n\n      if (group.size) {\n        span.style.marginTop = units_calculateSize(group.size, options) + "em";\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode("mspace");\n\n    if (group.newLine) {\n      node.setAttribute("linebreak", "newline");\n\n      if (group.size) {\n        node.setAttribute("height", units_calculateSize(group.size, options) + "em");\n      }\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/delimiter.js\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the "Another subroutine sets box\n * x to a specified variable delimiter" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n\n\n\n\n\n\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar delimiter_getMetrics = function getMetrics(symbol, font, mode) {\n  var replace = src_symbols.math[symbol] && src_symbols.math[symbol].replace;\n  var metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error("Unsupported symbol " + symbol + " and font size " + font + ".");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nvar delimiter_styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  var newOptions = options.havingBaseStyle(toStyle);\n  var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n  var newOptions = options.havingBaseStyle(style);\n  var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push("delimcenter");\n  span.style.top = shift + "em";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nvar delimiter_makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  var text = buildCommon.makeSymbol(delim, "Main-Regular", mode, options);\n  var span = delimiter_styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nvar delimiter_mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, "Size" + size + "-Regular", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nvar delimiter_makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  var inner = delimiter_mathrmSize(delim, size, mode, options);\n  var span = delimiter_styleWrap(buildCommon.makeSpan(["delimsizing", "size" + size], [inner], options), src_Style.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, src_Style.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\n\n\nvar delimiter_makeInner = function makeInner(symbol, font, mode) {\n  var sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === "Size1-Regular") {\n    sizeClass = "delim-size1";\n  } else\n    /* if (font === "Size4-Regular") */\n    {\n      sizeClass = "delim-size4";\n    }\n\n  var inner = buildCommon.makeSpan(["delimsizinginner", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: "elem",\n    elem: inner\n  };\n};\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\n\nvar delimiter_makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  var top;\n  var middle;\n  var repeat;\n  var bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  var font = "Size1-Regular"; // We set the parts and font based on the symbol. Note that we use\n  // \'\\u23d0\' instead of \'|\' and \'\\u2016\' instead of \'\\\\|\' for the\n  // repeats of the arrows\n\n  if (delim === "\\\\uparrow") {\n    repeat = bottom = "\\u23D0";\n  } else if (delim === "\\\\Uparrow") {\n    repeat = bottom = "\\u2016";\n  } else if (delim === "\\\\downarrow") {\n    top = repeat = "\\u23D0";\n  } else if (delim === "\\\\Downarrow") {\n    top = repeat = "\\u2016";\n  } else if (delim === "\\\\updownarrow") {\n    top = "\\\\uparrow";\n    repeat = "\\u23D0";\n    bottom = "\\\\downarrow";\n  } else if (delim === "\\\\Updownarrow") {\n    top = "\\\\Uparrow";\n    repeat = "\\u2016";\n    bottom = "\\\\Downarrow";\n  } else if (delim === "[" || delim === "\\\\lbrack") {\n    top = "\\u23A1";\n    repeat = "\\u23A2";\n    bottom = "\\u23A3";\n    font = "Size4-Regular";\n  } else if (delim === "]" || delim === "\\\\rbrack") {\n    top = "\\u23A4";\n    repeat = "\\u23A5";\n    bottom = "\\u23A6";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\lfloor" || delim === "\\u230A") {\n    repeat = top = "\\u23A2";\n    bottom = "\\u23A3";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\lceil" || delim === "\\u2308") {\n    top = "\\u23A1";\n    repeat = bottom = "\\u23A2";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\rfloor" || delim === "\\u230B") {\n    repeat = top = "\\u23A5";\n    bottom = "\\u23A6";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\rceil" || delim === "\\u2309") {\n    top = "\\u23A4";\n    repeat = bottom = "\\u23A5";\n    font = "Size4-Regular";\n  } else if (delim === "(" || delim === "\\\\lparen") {\n    top = "\\u239B";\n    repeat = "\\u239C";\n    bottom = "\\u239D";\n    font = "Size4-Regular";\n  } else if (delim === ")" || delim === "\\\\rparen") {\n    top = "\\u239E";\n    repeat = "\\u239F";\n    bottom = "\\u23A0";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\{" || delim === "\\\\lbrace") {\n    top = "\\u23A7";\n    middle = "\\u23A8";\n    bottom = "\\u23A9";\n    repeat = "\\u23AA";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\}" || delim === "\\\\rbrace") {\n    top = "\\u23AB";\n    middle = "\\u23AC";\n    bottom = "\\u23AD";\n    repeat = "\\u23AA";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\lgroup" || delim === "\\u27EE") {\n    top = "\\u23A7";\n    bottom = "\\u23A9";\n    repeat = "\\u23AA";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\rgroup" || delim === "\\u27EF") {\n    top = "\\u23AB";\n    bottom = "\\u23AD";\n    repeat = "\\u23AA";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\lmoustache" || delim === "\\u23B0") {\n    top = "\\u23A7";\n    bottom = "\\u23AD";\n    repeat = "\\u23AA";\n    font = "Size4-Regular";\n  } else if (delim === "\\\\rmoustache" || delim === "\\u23B1") {\n    top = "\\u23AB";\n    bottom = "\\u23A9";\n    repeat = "\\u23AA";\n    font = "Size4-Regular";\n  } // Get the metrics of the four sections\n\n\n  var topMetrics = delimiter_getMetrics(top, font, mode);\n  var topHeightTotal = topMetrics.height + topMetrics.depth;\n  var repeatMetrics = delimiter_getMetrics(repeat, font, mode);\n  var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  var bottomMetrics = delimiter_getMetrics(bottom, font, mode);\n  var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  var middleHeightTotal = 0;\n  var middleFactor = 1;\n\n  if (middle !== null) {\n    var middleMetrics = delimiter_getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)); // Compute the total height of the delimiter including all the symbols\n\n  var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, "center" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  var axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the inner pieces\n\n  var inners = []; // Add the bottom symbol\n\n  inners.push(delimiter_makeInner(bottom, font, mode));\n\n  if (middle === null) {\n    // Add that many symbols\n    for (var i = 0; i < repeatCount; i++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    for (var _i = 0; _i < repeatCount; _i++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n\n    inners.push(delimiter_makeInner(middle, font, mode));\n\n    for (var _i2 = 0; _i2 < repeatCount; _i2++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n  } // Add the top symbol\n\n\n  inners.push(delimiter_makeInner(top, font, mode)); // Finally, build the vlist\n\n  var newOptions = options.havingBaseStyle(src_Style.TEXT);\n  var inner = buildCommon.makeVList({\n    positionType: "bottom",\n    positionData: depth,\n    children: inners\n  }, newOptions);\n  return delimiter_styleWrap(buildCommon.makeSpan(["delimsizing", "mult"], [inner], newOptions), src_Style.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar delimiter_sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n  var alternate;\n\n  if (sqrtName === "sqrtTall") {\n    // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n    // One path edge has a variable length. It runs from the viniculumn\n    // to a point near (14 units) the bottom of the surd. The viniculum\n    // is 40 units thick. So the length of the line in question is:\n    var vertSegment = viewBoxHeight - 54 - vbPad;\n    alternate = "M702 " + vbPad + "H400000v40H742v" + vertSegment + "l-4 4-4 4c-.667.7\\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 " + vbPad + "H400000v40H742z";\n  }\n\n  var pathNode = new domTree_PathNode(sqrtName, alternate);\n  var svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    "width": "400em",\n    "height": height + "em",\n    "viewBox": "0 0 400000 " + viewBoxHeight,\n    "preserveAspectRatio": "xMinYMin slice"\n  });\n  return buildCommon.makeSvgSpan(["hide-tail"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don\'t pick different a height surd for \\Huge. For it, we scale up.\n  var newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  var delim = traverseSequence("\\\\surd", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  var sizeMultiplier = newOptions.sizeMultiplier; // default\n  // Create a span containing an SVG image of a sqrt symbol.\n\n  var span;\n  var spanHeight = 0;\n  var texHeight = 0;\n  var viewBoxHeight = 0;\n  var advanceWidth; // We create viewBoxes with 80 units of "padding" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === "small") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + emPad) / sizeMultiplier;\n    texHeight = 1.00 / sizeMultiplier;\n    span = delimiter_sqrtSvg("sqrtMain", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = "0.853em";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === "large") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;\n    span = delimiter_sqrtSvg("sqrtSize" + delim.size, spanHeight, viewBoxHeight, options);\n    span.style.minWidth = "1.02em";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We\'ll use a single SVG to accomplish the same thing.\n    spanHeight = height + emPad;\n    texHeight = height;\n    viewBoxHeight = Math.floor(1000 * height) + vbPad;\n    span = delimiter_sqrtSvg("sqrtTall", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = "0.742em";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + "em";\n  return {\n    span: span,\n    advanceWidth: advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nvar stackLargeDelimiters = ["(", "\\\\lparen", ")", "\\\\rparen", "[", "\\\\lbrack", "]", "\\\\rbrack", "\\\\{", "\\\\lbrace", "\\\\}", "\\\\rbrace", "\\\\lfloor", "\\\\rfloor", "\\u230A", "\\u230B", "\\\\lceil", "\\\\rceil", "\\u2308", "\\u2309", "\\\\surd"]; // delimiters that always stack\n\nvar stackAlwaysDelimiters = ["\\\\uparrow", "\\\\downarrow", "\\\\updownarrow", "\\\\Uparrow", "\\\\Downarrow", "\\\\Updownarrow", "|", "\\\\|", "\\\\vert", "\\\\Vert", "\\\\lvert", "\\\\rvert", "\\\\lVert", "\\\\rVert", "\\\\lgroup", "\\\\rgroup", "\\u27EE", "\\u27EF", "\\\\lmoustache", "\\\\rmoustache", "\\u23B0", "\\u23B1"]; // and delimiters that never stack\n\nvar stackNeverDelimiters = ["<", ">", "\\\\langle", "\\\\rangle", "/", "\\\\backslash", "\\\\lt", "\\\\gt"]; // Metrics of the different sizes. Found by looking at TeX\'s output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nvar delimiter_makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === "<" || delim === "\\\\lt" || delim === "\\u27E8") {\n    delim = "\\\\langle";\n  } else if (delim === ">" || delim === "\\\\gt" || delim === "\\u27E9") {\n    delim = "\\\\rangle";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return delimiter_makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return delimiter_makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new src_ParseError("Illegal delimiter: \'" + delim + "\'");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren\'t explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{\n  type: "small",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: "small",\n  style: src_Style.SCRIPT\n}, {\n  type: "small",\n  style: src_Style.TEXT\n}, {\n  type: "large",\n  size: 1\n}, {\n  type: "large",\n  size: 2\n}, {\n  type: "large",\n  size: 3\n}, {\n  type: "large",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nvar stackAlwaysDelimiterSequence = [{\n  type: "small",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: "small",\n  style: src_Style.SCRIPT\n}, {\n  type: "small",\n  style: src_Style.TEXT\n}, {\n  type: "stack"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nvar stackLargeDelimiterSequence = [{\n  type: "small",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: "small",\n  style: src_Style.SCRIPT\n}, {\n  type: "small",\n  style: src_Style.TEXT\n}, {\n  type: "large",\n  size: 1\n}, {\n  type: "large",\n  size: 2\n}, {\n  type: "large",\n  size: 3\n}, {\n  type: "large",\n  size: 4\n}, {\n  type: "stack"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nvar delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === "small") {\n    return "Main-Regular";\n  } else if (type.type === "large") {\n    return "Size" + type.size + "-Regular";\n  } else if (type.type === "stack") {\n    return "Size4-Regular";\n  } else {\n    throw new Error("Add support for delim type \'" + type.type + "\' here.");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  var start = Math.min(2, 3 - options.style.size);\n\n  for (var i = start; i < sequence.length; i++) {\n    if (sequence[i].type === "stack") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    var metrics = delimiter_getMetrics(delim, delimTypeToFont(sequence[i]), "math");\n    var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === "small") {\n      var newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nvar delimiter_makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === "<" || delim === "\\\\lt" || delim === "\\u27E8") {\n    delim = "\\\\langle";\n  } else if (delim === ">" || delim === "\\\\gt" || delim === "\\u27E9") {\n    delim = "\\\\rangle";\n  } // Decide what sequence to use\n\n\n  var sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === "small") {\n    return delimiter_makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === "large") {\n    return delimiter_makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === "stack") */\n    {\n      return delimiter_makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  var delimiterFactor = 901;\n  var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn\'t here, producing different results. If we wanted to\n  // exactly match TeX\'s calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return delimiter_makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\n/* harmony default export */ var delimiter = ({\n  sqrtImage: makeSqrtImage,\n  sizedDelim: delimiter_makeSizedDelim,\n  customSizedDelim: delimiter_makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n});\n// CONCATENATED MODULE: ./src/functions/delimsizing.js\n\n\n\n\n\n\n\n\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n  "\\\\bigl": {\n    mclass: "mopen",\n    size: 1\n  },\n  "\\\\Bigl": {\n    mclass: "mopen",\n    size: 2\n  },\n  "\\\\biggl": {\n    mclass: "mopen",\n    size: 3\n  },\n  "\\\\Biggl": {\n    mclass: "mopen",\n    size: 4\n  },\n  "\\\\bigr": {\n    mclass: "mclose",\n    size: 1\n  },\n  "\\\\Bigr": {\n    mclass: "mclose",\n    size: 2\n  },\n  "\\\\biggr": {\n    mclass: "mclose",\n    size: 3\n  },\n  "\\\\Biggr": {\n    mclass: "mclose",\n    size: 4\n  },\n  "\\\\bigm": {\n    mclass: "mrel",\n    size: 1\n  },\n  "\\\\Bigm": {\n    mclass: "mrel",\n    size: 2\n  },\n  "\\\\biggm": {\n    mclass: "mrel",\n    size: 3\n  },\n  "\\\\Biggm": {\n    mclass: "mrel",\n    size: 4\n  },\n  "\\\\big": {\n    mclass: "mord",\n    size: 1\n  },\n  "\\\\Big": {\n    mclass: "mord",\n    size: 2\n  },\n  "\\\\bigg": {\n    mclass: "mord",\n    size: 3\n  },\n  "\\\\Bigg": {\n    mclass: "mord",\n    size: 4\n  }\n};\nvar delimiters = ["(", "\\\\lparen", ")", "\\\\rparen", "[", "\\\\lbrack", "]", "\\\\rbrack", "\\\\{", "\\\\lbrace", "\\\\}", "\\\\rbrace", "\\\\lfloor", "\\\\rfloor", "\\u230A", "\\u230B", "\\\\lceil", "\\\\rceil", "\\u2308", "\\u2309", "<", ">", "\\\\langle", "\\u27E8", "\\\\rangle", "\\u27E9", "\\\\lt", "\\\\gt", "\\\\lvert", "\\\\rvert", "\\\\lVert", "\\\\rVert", "\\\\lgroup", "\\\\rgroup", "\\u27EE", "\\u27EF", "\\\\lmoustache", "\\\\rmoustache", "\\u23B0", "\\u23B1", "/", "\\\\backslash", "|", "\\\\vert", "\\\\|", "\\\\Vert", "\\\\uparrow", "\\\\Uparrow", "\\\\downarrow", "\\\\Downarrow", "\\\\updownarrow", "\\\\Updownarrow", "."];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  var symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else {\n    throw new src_ParseError("Invalid delimiter: \'" + (symDelim ? symDelim.text : JSON.stringify(delim)) + "\' after \'" + context.funcName + "\'", delim);\n  }\n}\n\ndefineFunction({\n  type: "delimsizing",\n  names: ["\\\\bigl", "\\\\Bigl", "\\\\biggl", "\\\\Biggl", "\\\\bigr", "\\\\Bigr", "\\\\biggr", "\\\\Biggr", "\\\\bigm", "\\\\Bigm", "\\\\biggm", "\\\\Biggm", "\\\\big", "\\\\Big", "\\\\bigg", "\\\\Bigg"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    return {\n      type: "delimsizing",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.delim === ".") {\n      // Empty delimiters still count as elements, even though they don\'t\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: function mathmlBuilder(group) {\n    var children = [];\n\n    if (group.delim !== ".") {\n      children.push(buildMathML_makeText(group.delim, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode("mo", children);\n\n    if (group.mclass === "mopen" || group.mclass === "mclose") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return "mopen" or "mclose" mclass.\n      node.setAttribute("fence", "true");\n    } else {\n      // Explicitly disable fencing if it\'s not a fence, to override the\n      // defaults.\n      node.setAttribute("fence", "false");\n    }\n\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error("Bug: The leftright ParseNode wasn\'t fully parsed.");\n  }\n}\n\ndefineFunction({\n  type: "leftright-right",\n  names: ["\\\\right"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    return {\n      type: "leftright-right",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text\n    };\n  }\n});\ndefineFunction({\n  type: "leftright",\n  names: ["\\\\left"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    var parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before \'\\\\right\'\n\n    var body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect("\\\\right", false);\n    var right = assertNodeType(parser.parseFunction(), "leftright-right");\n    return {\n      type: "leftright",\n      mode: parser.mode,\n      body: body,\n      left: delim.text,\n      right: right.delim\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    assertParsed(group); // Build the inner expression\n\n    var inner = buildHTML_buildExpression(group.body, options, true, ["mopen", "mclose"]);\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false; // Calculate its height and depth\n\n    for (var i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // "middle"\'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    var leftDelim;\n\n    if (group.left === ".") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, ["mopen"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, ["mopen"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (var _i = 1; _i < inner.length; _i++) {\n        var middleDelim = inner[_i]; // Property `isMiddle` not defined on `span`. See comment in\n        // "middle"\'s htmlBuilder.\n        // $FlowFixMe\n\n        var isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    var rightDelim; // Same for the right delimiter\n\n    if (group.right === ".") {\n      rightDelim = makeNullDelimiter(options, ["mclose"]);\n    } else {\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, options, group.mode, ["mclose"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan(["minner"], inner, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    assertParsed(group);\n    var inner = buildMathML_buildExpression(group.body, options);\n\n    if (group.left !== ".") {\n      var leftNode = new mathMLTree.MathNode("mo", [buildMathML_makeText(group.left, group.mode)]);\n      leftNode.setAttribute("fence", "true");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== ".") {\n      var rightNode = new mathMLTree.MathNode("mo", [buildMathML_makeText(group.right, group.mode)]);\n      rightNode.setAttribute("fence", "true");\n      inner.push(rightNode);\n    }\n\n    return buildMathML_makeRow(inner);\n  }\n});\ndefineFunction({\n  type: "middle",\n  names: ["\\\\middle"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new src_ParseError("\\\\middle without preceding \\\\left", delim);\n    }\n\n    return {\n      type: "middle",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var middleDelim;\n\n    if (group.delim === ".") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      var isMiddle = {\n        delim: group.delim,\n        options: options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var middleNode = new mathMLTree.MathNode("mo", [buildMathML_makeText(group.delim, group.mode)]);\n    middleNode.setAttribute("fence", "true");\n    return middleNode;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/enclose.js\n\n\n\n\n\n\n\n\n\nvar enclose_htmlBuilder = function htmlBuilder(group, options) {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  var inner = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, options), options);\n  var label = group.label.substr(1);\n  var scale = options.sizeMultiplier;\n  var img;\n  var imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don\'t know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the "tall" treatment.\n\n  var isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === "sout") {\n    img = buildCommon.makeSpan(["stretchy", "sout"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push("cancel-pad");\n      }\n    } else {\n      inner.classes.push("boxpad");\n    } // Add vertical padding\n\n\n    var vertPad = 0; // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n    // ref: cancel package: \\advance\\totalheight2\\p@ % "+2"\n\n    if (/box/.test(label)) {\n      vertPad = label === "colorbox" ? 0.3 : 0.34;\n    } else {\n      vertPad = isSingleChar ? 0.2 : 0;\n    }\n\n    img = stretchy.encloseSpan(inner, label, vertPad, options);\n    imgShift = inner.depth + vertPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  var vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: "individualShift",\n      children: [// Put the color background behind inner;\n      {\n        type: "elem",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: "elem",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: "individualShift",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: "elem",\n        elem: inner,\n        shift: 0\n      }, {\n        type: "elem",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: /cancel/.test(label) ? ["svg-align"] : []\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn\'t how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan(["mord", "cancel-lap"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan(["mord"], [vlist], options);\n  }\n};\n\nvar enclose_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node = new mathMLTree.MathNode("menclose", [buildMathML_buildGroup(group.body, options)]);\n\n  switch (group.label) {\n    case "\\\\cancel":\n      node.setAttribute("notation", "updiagonalstrike");\n      break;\n\n    case "\\\\bcancel":\n      node.setAttribute("notation", "downdiagonalstrike");\n      break;\n\n    case "\\\\sout":\n      node.setAttribute("notation", "horizontalstrike");\n      break;\n\n    case "\\\\fbox":\n      node.setAttribute("notation", "box");\n      break;\n\n    case "\\\\fcolorbox":\n      // TODO(ron): I don\'t know any way to set the border color.\n      node.setAttribute("notation", "box");\n      break;\n\n    case "\\\\xcancel":\n      node.setAttribute("notation", "updiagonalstrike downdiagonalstrike");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute("mathbackground", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: "enclose",\n  names: ["\\\\colorbox"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: ["color", "text"]\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var color = assertNodeType(args[0], "color-token").color;\n    var body = args[1];\n    return {\n      type: "enclose",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: "enclose",\n  names: ["\\\\fcolorbox"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: ["color", "color", "text"]\n  },\n  handler: function handler(_ref2, args, optArgs) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    var borderColor = assertNodeType(args[0], "color-token").color;\n    var backgroundColor = assertNodeType(args[1], "color-token").color;\n    var body = args[2];\n    return {\n      type: "enclose",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: "enclose",\n  names: ["\\\\fbox"],\n  props: {\n    numArgs: 1,\n    argTypes: ["text"],\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    return {\n      type: "enclose",\n      mode: parser.mode,\n      label: "\\\\fbox",\n      body: args[0]\n    };\n  }\n});\ndefineFunction({\n  type: "enclose",\n  names: ["\\\\cancel", "\\\\bcancel", "\\\\xcancel", "\\\\sout"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref4, args, optArgs) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    var body = args[0];\n    return {\n      type: "enclose",\n      mode: parser.mode,\n      label: funcName,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/defineEnvironment.js\n\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\nfunction defineEnvironment(_ref) {\n  var type = _ref.type,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of environments.\n  var data = {\n    type: type,\n    numArgs: props.numArgs || 0,\n    greediness: 1,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    // $FlowFixMe\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n// CONCATENATED MODULE: ./src/environments/array.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  var hlineInfo = [];\n  parser.consumeSpaces();\n  var nxt = parser.nextToken.text;\n\n  while (nxt === "\\\\hline" || nxt === "\\\\hdashline") {\n    parser.consume();\n    hlineInfo.push(nxt === "\\\\hdashline");\n    parser.consumeSpaces();\n    nxt = parser.nextToken.text;\n  }\n\n  return hlineInfo;\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * ("text", "display", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  var hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n      addJot = _ref.addJot,\n      cols = _ref.cols,\n      arraystretch = _ref.arraystretch;\n  // Parse body of array with \\\\ temporarily mapped to \\cr\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set("\\\\\\\\", "\\\\cr"); // Get current arraystretch if it\'s not set by the environment\n\n  if (!arraystretch) {\n    var stretch = parser.gullet.expandMacroAsText("\\\\arraystretch");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new src_ParseError("Invalid \\\\arraystretch: " + stretch);\n      }\n    }\n  }\n\n  var row = [];\n  var body = [row];\n  var rowGaps = [];\n  var hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    var cell = parser.parseExpression(false, "\\\\cr");\n    cell = {\n      type: "ordgroup",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: "styling",\n        mode: parser.mode,\n        style: style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    var next = parser.nextToken.text;\n\n    if (next === "&") {\n      parser.consume();\n    } else if (next === "\\\\end") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === "styling" && cell.body[0].body.length === 0) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === "\\\\cr") {\n      var cr = assertNodeType(parser.parseFunction(), "cr");\n      rowGaps.push(cr.size); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new src_ParseError("Expected & or \\\\\\\\ or \\\\cr or \\\\end", parser.nextToken);\n    }\n  }\n\n  parser.gullet.endGroup();\n  return {\n    type: "array",\n    mode: parser.mode,\n    addJot: addJot,\n    arraystretch: arraystretch,\n    body: body,\n    cols: cols,\n    rowGaps: rowGaps,\n    hskipBeforeAndAfter: hskipBeforeAndAfter,\n    hLinesBeforeRow: hLinesBeforeRow\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter \'d\'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === "d") {\n    return "display";\n  } else {\n    return "text";\n  }\n}\n\nvar array_htmlBuilder = function htmlBuilder(group, options) {\n  var r;\n  var c;\n  var nr = group.body.length;\n  var hLinesBeforeRow = group.hLinesBeforeRow;\n  var nc = 0;\n  var body = new Array(nr);\n  var hlines = []; // Horizontal spacing\n\n  var pt = 1 / options.fontMetrics().ptPerEm;\n  var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n  // Vertical spacing\n\n  var baselineskip = 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  var jot = 3 * pt;\n  var arrayskip = group.arraystretch * baselineskip;\n  var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  var totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (var i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    var inrow = group.body[r];\n    var height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    var depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    var outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      var elt = buildHTML_buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    var rowGap = group.rowGaps[r];\n    var gap = 0;\n\n    if (rowGap) {\n      gap = units_calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  var colDescriptions = group.cols || [];\n  var cols = [];\n  var colSep;\n  var colDescrNum;\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don\'t get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    var colDescr = colDescriptions[colDescrNum] || {};\n    var firstSeparator = true;\n\n    while (colDescr.type === "separator") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan(["arraycolsep"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + "em";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === "|") {\n        var separator = buildCommon.makeSpan(["vertical-separator"], [], options);\n        separator.style.height = totalHeight + "em";\n        separator.style.verticalAlign = -(totalHeight - offset) + "em";\n        cols.push(separator);\n      } else if (colDescr.separator === ":") {\n        var _separator = buildCommon.makeSpan(["vertical-separator", "vs-dashed"], [], options);\n\n        _separator.style.height = totalHeight + "em";\n        _separator.style.verticalAlign = -(totalHeight - offset) + "em";\n        cols.push(_separator);\n      } else {\n        throw new src_ParseError("Invalid separator type: " + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    var sepwidth = void 0;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan(["arraycolsep"], []);\n        colSep.style.width = sepwidth + "em";\n        cols.push(colSep);\n      }\n    }\n\n    var col = [];\n\n    for (r = 0; r < nr; ++r) {\n      var row = body[r];\n      var elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      var shift = row.pos - offset;\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: "elem",\n        elem: elem,\n        shift: shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: "individualShift",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan(["col-align-" + (colDescr.align || "c")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan(["arraycolsep"], []);\n        colSep.style.width = sepwidth + "em";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan(["mtable"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    var line = buildCommon.makeLineSpan("hline", options, 0.05);\n    var dashes = buildCommon.makeLineSpan("hdashline", options, 0.05);\n    var vListElems = [{\n      type: "elem",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      var hline = hlines.pop();\n      var lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: "elem",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: "elem",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: "individualShift",\n      children: vListElems\n    }, options);\n  }\n\n  return buildCommon.makeSpan(["mord"], [body], options);\n};\n\nvar array_mathmlBuilder = function mathmlBuilder(group, options) {\n  return new mathMLTree.MathNode("mtable", group.body.map(function (row) {\n    return new mathMLTree.MathNode("mtr", row.map(function (cell) {\n      return new mathMLTree.MathNode("mtd", [buildMathML_buildGroup(cell, options)]);\n    }));\n  }));\n}; // Convenience function for aligned and alignedat environments.\n\n\nvar array_alignedHandler = function alignedHandler(context, args) {\n  var cols = [];\n  var res = parseArray(context.parser, {\n    cols: cols,\n    addJot: true\n  }, "display"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn\'t exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row ("aligned" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath\'s \\start@aligned.\n\n  var numMaths;\n  var numCols = 0;\n  var emptyGroup = {\n    type: "ordgroup",\n    mode: context.mode,\n    body: []\n  };\n  var ordgroup = checkNodeType(args[0], "ordgroup");\n\n  if (ordgroup) {\n    var arg0 = "";\n\n    for (var i = 0; i < ordgroup.body.length; i++) {\n      var textord = assertNodeType(ordgroup.body[i], "textord");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  var isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (var _i = 1; _i < row.length; _i += 2) {\n      // Modify ordgroup node within styling node\n      var styling = assertNodeType(row[_i], "styling");\n\n      var _ordgroup = assertNodeType(styling.body[0], "ordgroup");\n\n      _ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      var curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new src_ParseError("Too many math in a row: " + ("expected " + numMaths + ", but got " + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (var _i2 = 0; _i2 < numCols; ++_i2) {\n    var align = "r";\n    var pregap = 0;\n\n    if (_i2 % 2 === 1) {\n      align = "l";\n    } else if (_i2 > 0 && isAligned) {\n      // "aligned" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[_i2] = {\n      type: "align",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: "array",\n  names: ["array", "darray"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser\'s\n    //   parseGroup() returns an "ordgroup" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], "ordgroup").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text;\n\n      if ("lcr".indexOf(ca) !== -1) {\n        return {\n          type: "align",\n          align: ca\n        };\n      } else if (ca === "|") {\n        return {\n          type: "separator",\n          separator: "|"\n        };\n      } else if (ca === ":") {\n        return {\n          type: "separator",\n          separator: ":"\n        };\n      }\n\n      throw new src_ParseError("Unknown column alignment: " + ca, nde);\n    });\n    var res = {\n      cols: cols,\n      hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n\ndefineEnvironment({\n  type: "array",\n  names: ["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var delimiters = {\n      "matrix": null,\n      "pmatrix": ["(", ")"],\n      "bmatrix": ["[", "]"],\n      "Bmatrix": ["\\\\{", "\\\\}"],\n      "vmatrix": ["|", "|"],\n      "Vmatrix": ["\\\\Vert", "\\\\Vert"]\n    }[context.envName]; // \\hskip -\\arraycolsep in amsmath\n\n    var payload = {\n      hskipBeforeAndAfter: false\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return delimiters ? {\n      type: "leftright",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1]\n    } : res;\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n\ndefineEnvironment({\n  type: "array",\n  names: ["cases", "dcases"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: "align",\n        align: "l",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX\'s behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: "align",\n        align: "l",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: "leftright",\n      mode: context.mode,\n      body: [res],\n      left: "\\\\{",\n      right: "."\n    };\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: "array",\n  names: ["aligned"],\n  props: {\n    numArgs: 0\n  },\n  handler: array_alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: "array",\n  names: ["gathered"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var res = {\n      cols: [{\n        type: "align",\n        align: "c"\n      }],\n      addJot: true\n    };\n    return parseArray(context.parser, res, "display");\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: "array",\n  names: ["alignedat"],\n  // One for numbered and for unnumbered;\n  // but, KaTeX doesn\'t supports math numbering yet,\n  // they make no difference for now.\n  props: {\n    numArgs: 1\n  },\n  handler: array_alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: "text",\n  // Doesn\'t matter what this is.\n  names: ["\\\\hline", "\\\\hdashline"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n  handler: function handler(context, args) {\n    throw new src_ParseError(context.funcName + " valid only within array environment");\n  }\n});\n// CONCATENATED MODULE: ./src/environments.js\n\nvar environments = _environments;\n/* harmony default export */ var src_environments = (environments); // All environment definitions should be imported below\n\n\n// CONCATENATED MODULE: ./src/functions/environment.js\n\n\n\n // Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\n// $FlowFixMe, "environment" handler returns an environment ParseNode\n\ndefineFunction({\n  type: "environment",\n  names: ["\\\\begin", "\\\\end"],\n  props: {\n    numArgs: 1,\n    argTypes: ["text"]\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var nameGroup = args[0];\n\n    if (nameGroup.type !== "ordgroup") {\n      throw new src_ParseError("Invalid environment name", nameGroup);\n    }\n\n    var envName = "";\n\n    for (var i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], "textord").text;\n    }\n\n    if (funcName === "\\\\begin") {\n      // begin...end is similar to left...right\n      if (!src_environments.hasOwnProperty(envName)) {\n        throw new src_ParseError("No such environment: " + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      var env = src_environments[envName];\n\n      var _parser$parseArgument = parser.parseArguments("\\\\begin{" + envName + "}", env),\n          _args = _parser$parseArgument.args,\n          optArgs = _parser$parseArgument.optArgs;\n\n      var context = {\n        mode: parser.mode,\n        envName: envName,\n        parser: parser\n      };\n      var result = env.handler(context, _args, optArgs);\n      parser.expect("\\\\end", false);\n      var endNameToken = parser.nextToken;\n      var end = assertNodeType(parser.parseFunction(), "environment");\n\n      if (end.name !== envName) {\n        throw new src_ParseError("Mismatch: \\\\begin{" + envName + "} matched by \\\\end{" + end.name + "}", endNameToken);\n      }\n\n      return result;\n    }\n\n    return {\n      type: "environment",\n      mode: parser.mode,\n      name: envName,\n      nameGroup: nameGroup\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/mclass.js\n\n\n\n\n\nvar mclass_makeSpan = buildCommon.makeSpan;\n\nfunction mclass_htmlBuilder(group, options) {\n  var elements = buildHTML_buildExpression(group.body, options, true);\n  return mclass_makeSpan([group.mclass], elements, options);\n}\n\nfunction mclass_mathmlBuilder(group, options) {\n  var inner = buildMathML_buildExpression(group.body, options);\n  return mathMLTree.newDocumentFragment(inner);\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: "mclass",\n  names: ["\\\\mathord", "\\\\mathbin", "\\\\mathrel", "\\\\mathopen", "\\\\mathclose", "\\\\mathpunct", "\\\\mathinner"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: "mclass",\n      mode: parser.mode,\n      mclass: "m" + funcName.substr(5),\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\nvar binrelClass = function binrelClass(arg) {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We\'ll do roughly the same by detecting the\n  // atom type directly.\n  var atom = arg.type === "ordgroup" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === "atom" && (atom.family === "bin" || atom.family === "rel")) {\n    return "m" + atom.family;\n  } else {\n    return "mord";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: "mclass",\n  names: ["\\\\@binrel"],\n  props: {\n    numArgs: 2\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    return {\n      type: "mclass",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: [args[1]]\n    };\n  }\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: "mclass",\n  names: ["\\\\stackrel", "\\\\overset", "\\\\underset"],\n  props: {\n    numArgs: 2\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    var baseArg = args[1];\n    var shiftedArg = args[0];\n    var mclass;\n\n    if (funcName !== "\\\\stackrel") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = "mrel"; // for \\stackrel\n    }\n\n    var baseOp = {\n      type: "op",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      symbol: false,\n      suppressBaseShift: funcName !== "\\\\stackrel",\n      body: defineFunction_ordargument(baseArg)\n    };\n    var supsub = {\n      type: "supsub",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === "\\\\underset" ? null : shiftedArg,\n      sub: funcName === "\\\\underset" ? shiftedArg : null\n    };\n    return {\n      type: "mclass",\n      mode: parser.mode,\n      mclass: mclass,\n      body: [supsub]\n    };\n  },\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/font.js\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\n\n\n\n\nvar font_htmlBuilder = function htmlBuilder(group, options) {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildHTML_buildGroup(group.body, newOptions);\n};\n\nvar font_mathmlBuilder = function mathmlBuilder(group, options) {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildMathML_buildGroup(group.body, newOptions);\n};\n\nvar fontAliases = {\n  "\\\\Bbb": "\\\\mathbb",\n  "\\\\bold": "\\\\mathbf",\n  "\\\\frak": "\\\\mathfrak",\n  "\\\\bm": "\\\\boldsymbol"\n};\ndefineFunction({\n  type: "font",\n  names: [// styles, except \\boldsymbol defined below\n  "\\\\mathrm", "\\\\mathit", "\\\\mathbf", "\\\\mathnormal", // families\n  "\\\\mathbb", "\\\\mathcal", "\\\\mathfrak", "\\\\mathscr", "\\\\mathsf", "\\\\mathtt", // aliases, except \\bm defined below\n  "\\\\Bbb", "\\\\bold", "\\\\frak"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    var func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: "font",\n      mode: parser.mode,\n      font: func.slice(1),\n      body: body\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\ndefineFunction({\n  type: "mclass",\n  names: ["\\\\boldsymbol", "\\\\bm"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0]; // amsbsy.sty\'s \\boldsymbol uses \\binrel spacing to inherit the\n    // argument\'s bin|rel|ord status\n\n    return {\n      type: "mclass",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: "font",\n        mode: parser.mode,\n        font: "boldsymbol",\n        body: body\n      }]\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: "font",\n  names: ["\\\\rm", "\\\\sf", "\\\\tt", "\\\\bf", "\\\\it"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    var mode = parser.mode;\n    var body = parser.parseExpression(true, breakOnTokenText);\n    var style = "math" + funcName.slice(1);\n    return {\n      type: "font",\n      mode: mode,\n      font: style,\n      body: {\n        type: "ordgroup",\n        mode: parser.mode,\n        body: body\n      }\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/genfrac.js\n\n\n\n\n\n\n\n\n\n\n\nvar genfrac_htmlBuilder = function htmlBuilder(group, options) {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  // Figure out what style this fraction should be in based on the\n  // function used\n  var style = options.style;\n\n  if (group.size === "display") {\n    style = src_Style.DISPLAY;\n  } else if (group.size === "text" && style.size === src_Style.DISPLAY.size) {\n    // We\'re in a \\tfrac but incoming style is displaystyle, so:\n    style = src_Style.TEXT;\n  } else if (group.size === "script") {\n    style = src_Style.SCRIPT;\n  } else if (group.size === "scriptscript") {\n    style = src_Style.SCRIPTSCRIPT;\n  }\n\n  var nstyle = style.fracNum();\n  var dstyle = style.fracDen();\n  var newOptions;\n  newOptions = options.havingStyle(nstyle);\n  var numerm = buildHTML_buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  var denomm = buildHTML_buildGroup(group.denom, newOptions, options);\n  var rule;\n  var ruleWidth;\n  var ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = units_calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan("frac-line", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan("frac-line", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  var numShift;\n  var clearance;\n  var denomShift;\n\n  if (style.size === src_Style.DISPLAY.size) {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  var frac;\n\n  if (!rule) {\n    // Rule 15c\n    var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: "individualShift",\n      children: [{\n        type: "elem",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: "elem",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    var axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    var midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: "individualShift",\n      children: [{\n        type: "elem",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: "elem",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: "elem",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  var delimSize;\n\n  if (style.size === src_Style.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  var leftDelim;\n  var rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, ["mopen"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, ["mopen"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, ["mclose"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, ["mclose"]);\n  }\n\n  return buildCommon.makeSpan(["mord"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan(["mfrac"], [frac]), rightDelim], options);\n};\n\nvar genfrac_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node = new mathMLTree.MathNode("mfrac", [buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute("linethickness", "0px");\n  } else if (group.barSize) {\n    var ruleWidth = units_calculateSize(group.barSize, options);\n    node.setAttribute("linethickness", ruleWidth + "em");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    var withDelims = [];\n\n    if (group.leftDelim != null) {\n      var leftOp = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode(group.leftDelim)]);\n      leftOp.setAttribute("fence", "true");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      var rightOp = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode(group.rightDelim)]);\n      rightOp.setAttribute("fence", "true");\n      withDelims.push(rightOp);\n    }\n\n    return buildMathML_makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: "genfrac",\n  names: ["\\\\cfrac", "\\\\dfrac", "\\\\frac", "\\\\tfrac", "\\\\dbinom", "\\\\binom", "\\\\tbinom", "\\\\\\\\atopfrac", // can’t be entered directly\n  "\\\\\\\\bracefrac", "\\\\\\\\brackfrac"],\n  props: {\n    numArgs: 2,\n    greediness: 2\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = "auto";\n\n    switch (funcName) {\n      case "\\\\cfrac":\n      case "\\\\dfrac":\n      case "\\\\frac":\n      case "\\\\tfrac":\n        hasBarLine = true;\n        break;\n\n      case "\\\\\\\\atopfrac":\n        hasBarLine = false;\n        break;\n\n      case "\\\\dbinom":\n      case "\\\\binom":\n      case "\\\\tbinom":\n        hasBarLine = false;\n        leftDelim = "(";\n        rightDelim = ")";\n        break;\n\n      case "\\\\\\\\bracefrac":\n        hasBarLine = false;\n        leftDelim = "\\\\{";\n        rightDelim = "\\\\}";\n        break;\n\n      case "\\\\\\\\brackfrac":\n        hasBarLine = false;\n        leftDelim = "[";\n        rightDelim = "]";\n        break;\n\n      default:\n        throw new Error("Unrecognized genfrac command");\n    }\n\n    switch (funcName) {\n      case "\\\\cfrac":\n      case "\\\\dfrac":\n      case "\\\\dbinom":\n        size = "display";\n        break;\n\n      case "\\\\tfrac":\n      case "\\\\tbinom":\n        size = "text";\n        break;\n    }\n\n    return {\n      type: "genfrac",\n      mode: parser.mode,\n      continued: funcName === "\\\\cfrac",\n      numer: numer,\n      denom: denom,\n      hasBarLine: hasBarLine,\n      leftDelim: leftDelim,\n      rightDelim: rightDelim,\n      size: size,\n      barSize: null\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: "infix",\n  names: ["\\\\over", "\\\\choose", "\\\\atop", "\\\\brace", "\\\\brack"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n  handler: function handler(_ref2) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName,\n        token = _ref2.token;\n    var replaceWith;\n\n    switch (funcName) {\n      case "\\\\over":\n        replaceWith = "\\\\frac";\n        break;\n\n      case "\\\\choose":\n        replaceWith = "\\\\binom";\n        break;\n\n      case "\\\\atop":\n        replaceWith = "\\\\\\\\atopfrac";\n        break;\n\n      case "\\\\brace":\n        replaceWith = "\\\\\\\\bracefrac";\n        break;\n\n      case "\\\\brack":\n        replaceWith = "\\\\\\\\brackfrac";\n        break;\n\n      default:\n        throw new Error("Unrecognized infix genfrac command");\n    }\n\n    return {\n      type: "infix",\n      mode: parser.mode,\n      replaceWith: replaceWith,\n      token: token\n    };\n  }\n});\nvar stylArray = ["display", "text", "script", "scriptscript"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n  var delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === "." ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: "genfrac",\n  names: ["\\\\genfrac"],\n  props: {\n    numArgs: 6,\n    greediness: 6,\n    argTypes: ["math", "math", "size", "text", "math", "math"]\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    var numer = args[4];\n    var denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    var leftNode = checkNodeType(args[0], "atom");\n\n    if (leftNode) {\n      leftNode = assertAtomFamily(args[0], "open");\n    }\n\n    var leftDelim = leftNode ? delimFromValue(leftNode.text) : null;\n    var rightNode = checkNodeType(args[1], "atom");\n\n    if (rightNode) {\n      rightNode = assertAtomFamily(args[1], "close");\n    }\n\n    var rightDelim = rightNode ? delimFromValue(rightNode.text) : null;\n    var barNode = assertNodeType(args[2], "size");\n    var hasBarLine;\n    var barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    var size = "auto";\n    var styl = checkNodeType(args[3], "ordgroup");\n\n    if (styl) {\n      if (styl.body.length > 0) {\n        var textOrd = assertNodeType(styl.body[0], "textord");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(args[3], "textord");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: "genfrac",\n      mode: parser.mode,\n      numer: numer,\n      denom: denom,\n      continued: false,\n      hasBarLine: hasBarLine,\n      barSize: barSize,\n      leftDelim: leftDelim,\n      rightDelim: rightDelim,\n      size: size\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: "infix",\n  names: ["\\\\above"],\n  props: {\n    numArgs: 1,\n    argTypes: ["size"],\n    infix: true\n  },\n  handler: function handler(_ref4, args) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName,\n        token = _ref4.token;\n    return {\n      type: "infix",\n      mode: parser.mode,\n      replaceWith: "\\\\\\\\abovefrac",\n      size: assertNodeType(args[0], "size").value,\n      token: token\n    };\n  }\n});\ndefineFunction({\n  type: "genfrac",\n  names: ["\\\\\\\\abovefrac"],\n  props: {\n    numArgs: 3,\n    argTypes: ["math", "size", "math"]\n  },\n  handler: function handler(_ref5, args) {\n    var parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    var numer = args[0];\n    var barSize = assert(assertNodeType(args[1], "infix").size);\n    var denom = args[2];\n    var hasBarLine = barSize.number > 0;\n    return {\n      type: "genfrac",\n      mode: parser.mode,\n      numer: numer,\n      denom: denom,\n      continued: false,\n      hasBarLine: hasBarLine,\n      barSize: barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: "auto"\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/horizBrace.js\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only "horizBrace", but\nvar horizBrace_htmlBuilder = function htmlBuilder(grp, options) {\n  var style = options.style; // Pull out the `ParseNode<"horizBrace">` if `grp` is a "supsub" node.\n\n  var supSubGroup;\n  var group;\n  var supSub = checkNodeType(grp, "supsub");\n\n  if (supSub) {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = supSub.sup ? buildHTML_buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildHTML_buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(supSub.base, "horizBrace");\n  } else {\n    group = assertNodeType(grp, "horizBrace");\n  } // Build the base group\n\n\n  var body = buildHTML_buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY)); // Create the stretchy element\n\n  var braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  var vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: body\n      }, {\n        type: "kern",\n        size: 0.1\n      }, {\n        type: "elem",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing "svg-align" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push("svg-align");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: "bottom",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: "elem",\n        elem: braceBody\n      }, {\n        type: "kern",\n        size: 0.1\n      }, {\n        type: "elem",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing "svg-align" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push("svg-align");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can\'t all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    var vSpan = buildCommon.makeSpan(["mord", group.isOver ? "mover" : "munder"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: "firstBaseline",\n        children: [{\n          type: "elem",\n          elem: vSpan\n        }, {\n          type: "kern",\n          size: 0.2\n        }, {\n          type: "elem",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: "bottom",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: "elem",\n          elem: supSubGroup\n        }, {\n          type: "kern",\n          size: 0.2\n        }, {\n          type: "elem",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan(["mord", group.isOver ? "mover" : "munder"], [vlist], options);\n};\n\nvar horizBrace_mathmlBuilder = function mathmlBuilder(group, options) {\n  var accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? "mover" : "munder", [buildMathML_buildGroup(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: "horizBrace",\n  names: ["\\\\overbrace", "\\\\underbrace"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: "horizBrace",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n  htmlBuilder: horizBrace_htmlBuilder,\n  mathmlBuilder: horizBrace_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/href.js\n\n\n\n\n\n\ndefineFunction({\n  type: "href",\n  names: ["\\\\href"],\n  props: {\n    numArgs: 2,\n    argTypes: ["url", "original"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[1];\n    var href = assertNodeType(args[0], "url").url;\n    return {\n      type: "href",\n      mode: parser.mode,\n      href: href,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof mathMLTree_MathNode)) {\n      math = new mathMLTree_MathNode("mrow", [math]);\n    }\n\n    math.setAttribute("href", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: "href",\n  names: ["\\\\url"],\n  props: {\n    numArgs: 1,\n    argTypes: ["url"],\n    allowedInText: true\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var href = assertNodeType(args[0], "url").url;\n    var chars = [];\n\n    for (var i = 0; i < href.length; i++) {\n      var c = href[i];\n\n      if (c === "~") {\n        c = "\\\\textasciitilde";\n      }\n\n      chars.push({\n        type: "textord",\n        mode: "text",\n        text: c\n      });\n    }\n\n    var body = {\n      type: "text",\n      mode: parser.mode,\n      font: "\\\\texttt",\n      body: chars\n    };\n    return {\n      type: "href",\n      mode: parser.mode,\n      href: href,\n      body: defineFunction_ordargument(body)\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/htmlmathml.js\n\n\n\n\ndefineFunction({\n  type: "htmlmathml",\n  names: ["\\\\html@mathml"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: "htmlmathml",\n      mode: parser.mode,\n      html: defineFunction_ordargument(args[0]),\n      mathml: defineFunction_ordargument(args[1])\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/kern.js\n// Horizontal spacing commands\n\n\n\n\n // TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n  type: "kern",\n  names: ["\\\\kern", "\\\\mkern", "\\\\hskip", "\\\\mskip"],\n  props: {\n    numArgs: 1,\n    argTypes: ["size"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var size = assertNodeType(args[0], "size");\n\n    if (parser.settings.strict) {\n      var mathFunction = funcName[1] === \'m\'; // \\mkern, \\mskip\n\n      var muUnit = size.value.unit === \'mu\';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX\'s " + funcName + " supports only mu units, " + ("not " + size.value.unit + " units"));\n        }\n\n        if (parser.mode !== "math") {\n          parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX\'s " + funcName + " works only in math mode");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX\'s " + funcName + " doesn\'t support mu units");\n        }\n      }\n    }\n\n    return {\n      type: "kern",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var dimension = units_calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/lap.js\n// Horizontal overlap functions\n\n\n\n\n\ndefineFunction({\n  type: "lap",\n  names: ["\\\\mathllap", "\\\\mathrlap", "\\\\mathclap"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: "lap",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // mathllap, mathrlap, mathclap\n    var inner;\n\n    if (group.alignment === "clap") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan(["inner"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan(["inner"], [buildHTML_buildGroup(group.body, options)]);\n    }\n\n    var fix = buildCommon.makeSpan(["fix"], []);\n    var node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n\n    var strut = buildCommon.makeSpan(["strut"]);\n    strut.style.height = node.height + node.depth + "em";\n    strut.style.verticalAlign = -node.depth + "em";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n\n    node = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: node\n      }]\n    }, options); // Get the horizontal spacing correct relative to adjacent items.\n\n    return buildCommon.makeSpan(["mord"], [node], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // mathllap, mathrlap, mathclap\n    var node = new mathMLTree.MathNode("mpadded", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.alignment !== "rlap") {\n      var offset = group.alignment === "llap" ? "-1" : "-0.5";\n      node.setAttribute("lspace", offset + "width");\n    }\n\n    node.setAttribute("width", "0px");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/math.js\n\n // Switching from text mode back to math mode\n\ndefineFunction({\n  type: "styling",\n  names: ["\\\\(", "$"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false,\n    consumeMode: "math"\n  },\n  handler: function handler(_ref, args) {\n    var funcName = _ref.funcName,\n        parser = _ref.parser;\n    var outerMode = parser.mode;\n    parser.switchMode("math");\n    var close = funcName === "\\\\(" ? "\\\\)" : "$";\n    var body = parser.parseExpression(false, close); // We can\'t expand the next symbol after the closing $ until after\n    // switching modes back.  So don\'t consume within expect.\n\n    parser.expect(close, false);\n    parser.switchMode(outerMode);\n    parser.consume();\n    return {\n      type: "styling",\n      mode: parser.mode,\n      style: "text",\n      body: body\n    };\n  }\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: "text",\n  // Doesn\'t matter what this is.\n  names: ["\\\\)", "\\\\]"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: function handler(context, args) {\n    throw new src_ParseError("Mismatched " + context.funcName);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/mathchoice.js\n\n\n\n\n\n\nvar mathchoice_chooseMathStyle = function chooseMathStyle(group, options) {\n  switch (options.style.size) {\n    case src_Style.DISPLAY.size:\n      return group.display;\n\n    case src_Style.TEXT.size:\n      return group.text;\n\n    case src_Style.SCRIPT.size:\n      return group.script;\n\n    case src_Style.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: "mathchoice",\n  names: ["\\\\mathchoice"],\n  props: {\n    numArgs: 4\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: "mathchoice",\n      mode: parser.mode,\n      display: defineFunction_ordargument(args[0]),\n      text: defineFunction_ordargument(args[1]),\n      script: defineFunction_ordargument(args[2]),\n      scriptscript: defineFunction_ordargument(args[3])\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var body = mathchoice_chooseMathStyle(group, options);\n    var elements = buildHTML_buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var body = mathchoice_chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/op.js\n// Limits, symbols\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only "op", but also\nvar op_htmlBuilder = function htmlBuilder(grp, options) {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n  var supSub = checkNodeType(grp, "supsub");\n\n  if (supSub) {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = supSub.sup;\n    subGroup = supSub.sub;\n    group = assertNodeType(supSub.base, "op");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, "op");\n  }\n\n  var style = options.style; // Most operators have a large successor symbol, but these don\'t.\n\n  var noSuccessor = ["\\\\smallint"];\n  var large = false;\n\n  if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  var base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    var fontName = large ? "Size2-Regular" : "Size1-Regular";\n    var stash = "";\n\n    if (group.name === "\\\\oiint" || group.name === "\\\\oiiint") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1); // $FlowFixMe\n\n      group.name = stash === "oiint" ? "\\\\iint" : "\\\\iiint";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, "math", options, ["mop", "op-symbol", large ? "large-op" : "small-op"]);\n\n    if (stash.length > 0) {\n      // We\'re in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      var italic = base.italic;\n      var oval = buildCommon.staticSvg(stash + "Size" + (large ? "2" : "1"), options);\n      base = buildCommon.makeVList({\n        positionType: "individualShift",\n        children: [{\n          type: "elem",\n          elem: base,\n          shift: 0\n        }, {\n          type: "elem",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options); // $FlowFixMe\n\n      group.name = "\\\\" + stash;\n      base.classes.unshift("mop"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    var inner = buildHTML_buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof domTree_SymbolNode) {\n      base = inner[0];\n      base.classes[0] = "mop"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan(["mop"], buildCommon.tryCombineChars(inner), options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator\'s name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup\n    var output = [];\n\n    for (var i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode));\n    }\n\n    base = buildCommon.makeSpan(["mop"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  var baseShift = 0;\n  var slant = 0;\n\n  if ((base instanceof domTree_SymbolNode || group.name === "\\\\oiint" || group.name === "\\\\oiiint") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don\'t actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n    // in a new span so it is an inline, and works.\n    base = buildCommon.makeSpan([], [base]);\n    var sub;\n    var sup; // We manually have to handle the superscripts and subscripts. This,\n    // aside from the kern calculations, is copied from supsub.\n\n    if (supGroup) {\n      var elem = buildHTML_buildGroup(supGroup, options.havingStyle(style.sup()), options);\n      sup = {\n        elem: elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n      };\n    }\n\n    if (subGroup) {\n      var _elem = buildHTML_buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n      sub = {\n        elem: _elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n      };\n    } // Build the final group as a vlist of the possible subscript, base,\n    // and possible superscript.\n\n\n    var finalGroup;\n\n    if (sup && sub) {\n      var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n      finalGroup = buildCommon.makeVList({\n        positionType: "bottom",\n        positionData: bottom,\n        children: [{\n          type: "kern",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: "elem",\n          elem: sub.elem,\n          marginLeft: -slant + "em"\n        }, {\n          type: "kern",\n          size: sub.kern\n        }, {\n          type: "elem",\n          elem: base\n        }, {\n          type: "kern",\n          size: sup.kern\n        }, {\n          type: "elem",\n          elem: sup.elem,\n          marginLeft: slant + "em"\n        }, {\n          type: "kern",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else if (sub) {\n      var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n      // that we are supposed to shift the limits by 1/2 of the slant,\n      // but since we are centering the limits adding a full slant of\n      // margin will shift by 1/2 that.\n\n      finalGroup = buildCommon.makeVList({\n        positionType: "top",\n        positionData: top,\n        children: [{\n          type: "kern",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: "elem",\n          elem: sub.elem,\n          marginLeft: -slant + "em"\n        }, {\n          type: "kern",\n          size: sub.kern\n        }, {\n          type: "elem",\n          elem: base\n        }]\n      }, options);\n    } else if (sup) {\n      var _bottom = base.depth + baseShift;\n\n      finalGroup = buildCommon.makeVList({\n        positionType: "bottom",\n        positionData: _bottom,\n        children: [{\n          type: "elem",\n          elem: base\n        }, {\n          type: "kern",\n          size: sup.kern\n        }, {\n          type: "elem",\n          elem: sup.elem,\n          marginLeft: slant + "em"\n        }, {\n          type: "kern",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else {\n      // This case probably shouldn\'t occur (this would mean the\n      // supsub was sending us a group with no superscript or\n      // subscript) but be safe.\n      return base;\n    }\n\n    return buildCommon.makeSpan(["mop", "op-limits"], [finalGroup], options);\n  } else {\n    if (baseShift) {\n      base.style.position = "relative";\n      base.style.top = baseShift + "em";\n    }\n\n    return base;\n  }\n};\n\nvar op_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node; // TODO(emily): handle big operators using the `largeop` attribute\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new mathMLTree_MathNode("mo", [buildMathML_makeText(group.name, group.mode)]);\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new mathMLTree_MathNode("mo", buildMathML_buildExpression(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator\'s name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup.\n    node = new mathMLTree_MathNode("mi", [new mathMLTree_TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    var operator = new mathMLTree_MathNode("mo", [buildMathML_makeText("\\u2061", "text")]);\n    return newDocumentFragment([node, operator]);\n  }\n\n  return node;\n};\n\nvar singleCharBigOps = {\n  "\\u220F": "\\\\prod",\n  "\\u2210": "\\\\coprod",\n  "\\u2211": "\\\\sum",\n  "\\u22C0": "\\\\bigwedge",\n  "\\u22C1": "\\\\bigvee",\n  "\\u22C2": "\\\\bigcap",\n  "\\u22C3": "\\\\bigcup",\n  "\\u2A00": "\\\\bigodot",\n  "\\u2A01": "\\\\bigoplus",\n  "\\u2A02": "\\\\bigotimes",\n  "\\u2A04": "\\\\biguplus",\n  "\\u2A06": "\\\\bigsqcup"\n};\ndefineFunction({\n  type: "op",\n  names: ["\\\\coprod", "\\\\bigvee", "\\\\bigwedge", "\\\\biguplus", "\\\\bigcap", "\\\\bigcup", "\\\\intop", "\\\\prod", "\\\\sum", "\\\\bigotimes", "\\\\bigoplus", "\\\\bigodot", "\\\\bigsqcup", "\\\\smallint", "\\u220F", "\\u2210", "\\u2211", "\\u22C0", "\\u22C1", "\\u22C2", "\\u22C3", "\\u2A00", "\\u2A01", "\\u2A02", "\\u2A04", "\\u2A06"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: "op",\n      mode: parser.mode,\n      limits: true,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Note: calling defineFunction with a type that\'s already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: "op",\n  names: ["\\\\mathop"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0];\n    return {\n      type: "op",\n      mode: parser.mode,\n      limits: false,\n      symbol: false,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n  "\\u222B": "\\\\int",\n  "\\u222C": "\\\\iint",\n  "\\u222D": "\\\\iiint",\n  "\\u222E": "\\\\oint",\n  "\\u222F": "\\\\oiint",\n  "\\u2230": "\\\\oiiint"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: "op",\n  names: ["\\\\arcsin", "\\\\arccos", "\\\\arctan", "\\\\arctg", "\\\\arcctg", "\\\\arg", "\\\\ch", "\\\\cos", "\\\\cosec", "\\\\cosh", "\\\\cot", "\\\\cotg", "\\\\coth", "\\\\csc", "\\\\ctg", "\\\\cth", "\\\\deg", "\\\\dim", "\\\\exp", "\\\\hom", "\\\\ker", "\\\\lg", "\\\\ln", "\\\\log", "\\\\sec", "\\\\sin", "\\\\sinh", "\\\\sh", "\\\\tan", "\\\\tanh", "\\\\tg", "\\\\th"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref3) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    return {\n      type: "op",\n      mode: parser.mode,\n      limits: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Limits, not symbols\n\ndefineFunction({\n  type: "op",\n  names: ["\\\\det", "\\\\gcd", "\\\\inf", "\\\\lim", "\\\\max", "\\\\min", "\\\\Pr", "\\\\sup"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref4) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    return {\n      type: "op",\n      mode: parser.mode,\n      limits: true,\n      symbol: false,\n      name: funcName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // No limits, symbols\n\ndefineFunction({\n  type: "op",\n  names: ["\\\\int", "\\\\iint", "\\\\iiint", "\\\\oint", "\\\\oiint", "\\\\oiiint", "\\u222B", "\\u222C", "\\u222D", "\\u222E", "\\u222F", "\\u2230"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref5) {\n    var parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: "op",\n      mode: parser.mode,\n      limits: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/operatorname.js\n\n\n\n\n\n // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\ndefineFunction({\n  type: "operatorname",\n  names: ["\\\\operatorname"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: "operatorname",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.body.length > 0) {\n      var body = group.body.map(function (child) {\n        // $FlowFixMe: Check if the node has a string `text` property.\n        var childText = child.text;\n\n        if (typeof childText === "string") {\n          return {\n            type: "textord",\n            mode: child.mode,\n            text: childText\n          };\n        } else {\n          return child;\n        }\n      }); // Consolidate function names into symbol characters.\n\n      var expression = buildHTML_buildExpression(body, options.withFont("mathrm"), true);\n\n      for (var i = 0; i < expression.length; i++) {\n        var child = expression[i];\n\n        if (child instanceof domTree_SymbolNode) {\n          // Per amsopn package,\n          // change minus to hyphen and \\ast to asterisk\n          child.text = child.text.replace(/\\u2212/, "-").replace(/\\u2217/, "*");\n        }\n      }\n\n      return buildCommon.makeSpan(["mop"], expression, options);\n    } else {\n      return buildCommon.makeSpan(["mop"], [], options);\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // The steps taken here are similar to the html version.\n    var expression = buildMathML_buildExpression(group.body, options.withFont("mathrm")); // Is expression a string or has it something like a fraction?\n\n    var isAllString = true; // default\n\n    for (var i = 0; i < expression.length; i++) {\n      var node = expression[i];\n\n      if (node instanceof mathMLTree.SpaceNode) {// Do nothing\n      } else if (node instanceof mathMLTree.MathNode) {\n        switch (node.type) {\n          case "mi":\n          case "mn":\n          case "ms":\n          case "mspace":\n          case "mtext":\n            break;\n          // Do nothing yet.\n\n          case "mo":\n            {\n              var child = node.children[0];\n\n              if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n                child.text = child.text.replace(/\\u2212/, "-").replace(/\\u2217/, "*");\n              } else {\n                isAllString = false;\n              }\n\n              break;\n            }\n\n          default:\n            isAllString = false;\n        }\n      } else {\n        isAllString = false;\n      }\n    }\n\n    if (isAllString) {\n      // Write a single TextNode instead of multiple nested tags.\n      var word = expression.map(function (node) {\n        return node.toText();\n      }).join("");\n      expression = [new mathMLTree.TextNode(word)];\n    }\n\n    var identifier = new mathMLTree.MathNode("mi", expression);\n    identifier.setAttribute("mathvariant", "normal"); // \\u2061 is the same as &ApplyFunction;\n    // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n    var operator = new mathMLTree.MathNode("mo", [buildMathML_makeText("\\u2061", "text")]);\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/ordgroup.js\n\n\n\n\ndefineFunctionBuilders({\n  type: "ordgroup",\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildHTML_buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan(["mord"], buildHTML_buildExpression(group.body, options, true), options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/overline.js\n\n\n\n\n\ndefineFunction({\n  type: "overline",\n  names: ["\\\\overline"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: "overline",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    var innerGroup = buildHTML_buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    var line = buildCommon.makeLineSpan("overline-line", options); // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: innerGroup\n      }, {\n        type: "kern",\n        size: 3 * line.height\n      }, {\n        type: "elem",\n        elem: line\n      }, {\n        type: "kern",\n        size: line.height\n      }]\n    }, options);\n    return buildCommon.makeSpan(["mord", "overline"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode("\\u203E")]);\n    operator.setAttribute("stretchy", "true");\n    var node = new mathMLTree.MathNode("mover", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute("accent", "true");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/phantom.js\n\n\n\n\n\ndefineFunction({\n  type: "phantom",\n  names: ["\\\\phantom"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: "phantom",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options.withPhantom(), false); // \\phantom isn\'t supposed to affect the elements it contains.\n    // See "color" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n    return new mathMLTree.MathNode("mphantom", inner);\n  }\n});\ndefineFunction({\n  type: "hphantom",\n  names: ["\\\\hphantom"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0];\n    return {\n      type: "hphantom",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan(["mord"], [node], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n    var node = new mathMLTree.MathNode("mphantom", inner);\n    node.setAttribute("height", "0px");\n    return node;\n  }\n});\ndefineFunction({\n  type: "vphantom",\n  names: ["\\\\vphantom"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    var body = args[0];\n    return {\n      type: "vphantom",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var inner = buildCommon.makeSpan(["inner"], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n    var fix = buildCommon.makeSpan(["fix"], []);\n    return buildCommon.makeSpan(["mord", "rlap"], [inner, fix], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n    var node = new mathMLTree.MathNode("mphantom", inner);\n    node.setAttribute("width", "0px");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/sizing.js\n\n\n\n\n\nfunction sizingGroup(value, options, baseOptions) {\n  var inner = buildHTML_buildExpression(value, options, false);\n  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (var i = 0; i < inner.length; i++) {\n    var pos = inner[i].classes.indexOf("sizing");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === "reset-size" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the "b" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = "reset-size" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nvar sizeFuncs = ["\\\\tiny", "\\\\sixptsize", "\\\\scriptsize", "\\\\footnotesize", "\\\\small", "\\\\normalsize", "\\\\large", "\\\\Large", "\\\\LARGE", "\\\\huge", "\\\\Huge"];\nvar sizing_htmlBuilder = function htmlBuilder(group, options) {\n  // Handle sizing operators like \\Huge. Real TeX doesn\'t actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  var newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: "sizing",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    var body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: "sizing",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body: body\n    };\n  },\n  htmlBuilder: sizing_htmlBuilder,\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var newOptions = options.havingSize(group.size);\n    var inner = buildMathML_buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode("mstyle", inner); // TODO(emily): This doesn\'t produce the correct size for nested size\n    // changes, because we don\'t keep state of what style we\'re currently\n    // in, so we can\'t reset the size to normal before changing it.  Now\n    // that we\'re passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute("mathsize", newOptions.sizeMultiplier + "em");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/raisebox.js\n\n\n\n\n\n\n // Box manipulation\n\ndefineFunction({\n  type: "raisebox",\n  names: ["\\\\raisebox"],\n  props: {\n    numArgs: 2,\n    argTypes: ["size", "text"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var amount = assertNodeType(args[0], "size").value;\n    var body = args[1];\n    return {\n      type: "raisebox",\n      mode: parser.mode,\n      dy: amount,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var text = {\n      type: "text",\n      mode: group.mode,\n      body: defineFunction_ordargument(group.body),\n      font: "mathrm" // simulate \\textrm\n\n    };\n    var sizedText = {\n      type: "sizing",\n      mode: group.mode,\n      body: [text],\n      size: 6 // simulate \\normalsize\n\n    };\n    var body = sizing_htmlBuilder(sizedText, options);\n    var dy = units_calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: "shift",\n      positionData: -dy,\n      children: [{\n        type: "elem",\n        elem: body\n      }]\n    }, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode("mpadded", [buildMathML_buildGroup(group.body, options)]);\n    var dy = group.dy.number + group.dy.unit;\n    node.setAttribute("voffset", dy);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/rule.js\n\n\n\n\n\ndefineFunction({\n  type: "rule",\n  names: ["\\\\rule"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: ["size", "size", "size"]\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var shift = optArgs[0];\n    var width = assertNodeType(args[0], "size");\n    var height = assertNodeType(args[1], "size");\n    return {\n      type: "rule",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, "size").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    var rule = buildCommon.makeSpan(["mord", "rule"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    var shift = 0;\n\n    if (group.shift) {\n      shift = units_calculateSize(group.shift, options);\n    }\n\n    var width = units_calculateSize(group.width, options);\n    var height = units_calculateSize(group.height, options); // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + "em";\n    rule.style.borderTopWidth = height + "em";\n    rule.style.bottom = shift + "em"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // TODO(emily): Figure out if there\'s an actual way to draw black boxes\n    // in MathML.\n    var node = new mathMLTree.MathNode("mrow");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/smash.js\n// smash, with optional [tb], as in AMS\n\n\n\n\n\n\ndefineFunction({\n  type: "smash",\n  names: ["\\\\smash"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0] && assertNodeType(optArgs[0], "ordgroup");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      var letter = "";\n\n      for (var i = 0; i < tbArg.body.length; ++i) {\n        var node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === "t") {\n          smashHeight = true;\n        } else if (letter === "b") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n      type: "smash",\n      mode: parser.mode,\n      body: body,\n      smashHeight: smashHeight,\n      smashDepth: smashDepth\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (var _i = 0; _i < node.children.length; _i++) {\n          node.children[_i].depth = 0;\n        }\n      }\n    } // At this point, we\'ve reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies "display: table-cell", which prevents the browser\n    // from acting on that line height. So we\'ll call makeVList now.\n\n\n    var smashedNode = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan(["mord"], [smashedNode], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode("mpadded", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute("height", "0px");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute("depth", "0px");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/sqrt.js\n\n\n\n\n\n\n\ndefineFunction({\n  type: "sqrt",\n  names: ["\\\\sqrt"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n      type: "sqrt",\n      mode: parser.mode,\n      body: body,\n      index: index\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n    var phi = theta;\n\n    if (options.style.id < src_Style.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    var lineClearance = theta + phi / 4;\n    var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    var _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n        img = _delimiter$sqrtImage.span,\n        ruleWidth = _delimiter$sqrtImage.ruleWidth,\n        advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n    var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + "em"; // Overlay the image and the argument.\n\n    var body = buildCommon.makeVList({\n      positionType: "firstBaseline",\n      children: [{\n        type: "elem",\n        elem: inner,\n        wrapperClasses: ["svg-align"]\n      }, {\n        type: "kern",\n        size: -(inner.height + imgShift)\n      }, {\n        type: "elem",\n        elem: img\n      }, {\n        type: "kern",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan(["mord", "sqrt"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      var newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT);\n      var rootm = buildHTML_buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      var rootVList = buildCommon.makeVList({\n        positionType: "shift",\n        positionData: -toShift,\n        children: [{\n          type: "elem",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      var rootVListWrap = buildCommon.makeSpan(["root"], [rootVList]);\n      return buildCommon.makeSpan(["mord", "sqrt"], [rootVListWrap, body], options);\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var body = group.body,\n        index = group.index;\n    return index ? new mathMLTree.MathNode("mroot", [buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options)]) : new mathMLTree.MathNode("msqrt", [buildMathML_buildGroup(body, options)]);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/styling.js\n\n\n\n\n\nvar styling_styleMap = {\n  "display": src_Style.DISPLAY,\n  "text": src_Style.TEXT,\n  "script": src_Style.SCRIPT,\n  "scriptscript": src_Style.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: "styling",\n  names: ["\\\\displaystyle", "\\\\textstyle", "\\\\scriptstyle", "\\\\scriptscriptstyle"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    // parse out the implicit body\n    var body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    var style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: "styling",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style: style,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    var newStyle = styling_styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle).withFont(\'\');\n    return sizingGroup(group.body, newOptions, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // Figure out what style we\'re changing to.\n    // TODO(kevinb): dedupe this with buildHTML.js\n    // This will be easier of handling of styling nodes is in the same file.\n    var styleMap = {\n      "display": src_Style.DISPLAY,\n      "text": src_Style.TEXT,\n      "script": src_Style.SCRIPT,\n      "scriptscript": src_Style.SCRIPTSCRIPT\n    };\n    var newStyle = styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle);\n    var inner = buildMathML_buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode("mstyle", inner);\n    var styleAttributes = {\n      "display": ["0", "true"],\n      "text": ["0", "false"],\n      "script": ["1", "false"],\n      "scriptscript": ["2", "false"]\n    };\n    var attr = styleAttributes[group.style];\n    node.setAttribute("scriptlevel", attr[0]);\n    node.setAttribute("displaystyle", attr[1]);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/supsub.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar supsub_htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  var base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === "op") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    var delegate = base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? op_htmlBuilder : null;\n  } else if (base.type === "accent") {\n    return utils.isCharacterBox(base.base) ? accent_htmlBuilder : null;\n  } else if (base.type === "horizBrace") {\n    var isSup = !group.sub;\n    return isSup === base.isOver ? horizBrace_htmlBuilder : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: "supsub",\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    var builderDelegate = supsub_htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    var valueBase = group.base,\n        valueSup = group.sup,\n        valueSub = group.sub;\n    var base = buildHTML_buildGroup(valueBase, options);\n    var supm;\n    var subm;\n    var metrics = options.fontMetrics(); // Rule 18a\n\n    var supShift = 0;\n    var subShift = 0;\n    var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      var newOptions = options.havingStyle(options.style.sup());\n      supm = buildHTML_buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      var _newOptions = options.havingStyle(options.style.sub());\n\n      subm = buildHTML_buildGroup(valueSub, _newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    var minSupShift;\n\n    if (options.style === src_Style.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    var multiplier = options.sizeMultiplier;\n    var marginRight = 0.5 / metrics.ptPerEm / multiplier + "em";\n    var marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn\'t be shifted by the base\'s italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      var isOiint = group.base && group.base.type === "op" && group.base.name && (group.base.name === "\\\\oiint" || group.base.name === "\\\\oiiint");\n\n      if (base instanceof domTree_SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + "em";\n      }\n    }\n\n    var supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      var ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      var maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      var vlistElem = [{\n        type: "elem",\n        elem: subm,\n        shift: subShift,\n        marginRight: marginRight,\n        marginLeft: marginLeft\n      }, {\n        type: "elem",\n        elem: supm,\n        shift: -supShift,\n        marginRight: marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: "individualShift",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      var _vlistElem = [{\n        type: "elem",\n        elem: subm,\n        marginLeft: marginLeft,\n        marginRight: marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: "shift",\n        positionData: subShift,\n        children: _vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: "shift",\n        positionData: -supShift,\n        children: [{\n          type: "elem",\n          elem: supm,\n          marginRight: marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error("supsub must have either sup or sub.");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    var mclass = getTypeOfDomTree(base, "right") || "mord";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan(["msupsub"], [supsub])], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    var isBrace = false;\n    var isOver;\n    var isSup;\n    var horizBrace = checkNodeType(group.base, "horizBrace");\n\n    if (horizBrace) {\n      isSup = !!group.sup;\n\n      if (isSup === horizBrace.isOver) {\n        isBrace = true;\n        isOver = horizBrace.isOver;\n      }\n    }\n\n    var children = [buildMathML_buildGroup(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildMathML_buildGroup(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildMathML_buildGroup(group.sup, options));\n    }\n\n    var nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? "mover" : "munder";\n    } else if (!group.sub) {\n      var base = group.base;\n\n      if (base && base.type === "op" && base.limits && options.style === src_Style.DISPLAY) {\n        nodeType = "mover";\n      } else {\n        nodeType = "msup";\n      }\n    } else if (!group.sup) {\n      var _base = group.base;\n\n      if (_base && _base.type === "op" && _base.limits && options.style === src_Style.DISPLAY) {\n        nodeType = "munder";\n      } else {\n        nodeType = "msub";\n      }\n    } else {\n      var _base2 = group.base;\n\n      if (_base2 && _base2.type === "op" && _base2.limits && options.style === src_Style.DISPLAY) {\n        nodeType = "munderover";\n      } else {\n        nodeType = "msubsup";\n      }\n    }\n\n    var node = new mathMLTree.MathNode(nodeType, children);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOp.js\n\n\n\n // Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\ndefineFunctionBuilders({\n  type: "atom",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, ["m" + group.family]);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode("mo", [buildMathML_makeText(group.text, group.mode)]);\n\n    if (group.family === "bin") {\n      var variant = buildMathML_getVariant(group, options);\n\n      if (variant === "bold-italic") {\n        node.setAttribute("mathvariant", variant);\n      }\n    } else if (group.family === "punct") {\n      node.setAttribute("separator", "true");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOrd.js\n\n\n\n\n// "mathord" and "textord" ParseNodes created in Parser.js from symbol Groups in\nvar defaultVariant = {\n  "mi": "italic",\n  "mn": "normal",\n  "mtext": "normal"\n};\ndefineFunctionBuilders({\n  type: "mathord",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, "mathord");\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode("mi", [buildMathML_makeText(group.text, group.mode, options)]);\n    var variant = buildMathML_getVariant(group, options) || "italic";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute("mathvariant", variant);\n    }\n\n    return node;\n  }\n});\ndefineFunctionBuilders({\n  type: "textord",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, "textord");\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var text = buildMathML_makeText(group.text, group.mode, options);\n    var variant = buildMathML_getVariant(group, options) || "normal";\n    var node;\n\n    if (group.mode === \'text\') {\n      node = new mathMLTree.MathNode("mtext", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      // TODO(kevinb) merge adjacent <mn> nodes\n      // do it as a post processing step\n      node = new mathMLTree.MathNode("mn", [text]);\n    } else if (group.text === "\\\\prime") {\n      node = new mathMLTree.MathNode("mo", [text]);\n    } else {\n      node = new mathMLTree.MathNode("mi", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute("mathvariant", variant);\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsSpacing.js\n\n\n\n // A map of CSS-based spacing functions to their CSS class.\n\nvar cssSpace = {\n  "\\\\nobreak": "nobreak",\n  "\\\\allowbreak": "allowbreak"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nvar regularSpace = {\n  " ": {},\n  "\\\\ ": {},\n  "~": {\n    className: "nobreak"\n  },\n  "\\\\space": {},\n  "\\\\nobreakspace": {\n    className: "nobreak"\n  }\n}; // ParseNode<"spacing"> created in Parser.js from the "spacing" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: "spacing",\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      var className = regularSpace[group.text].className || ""; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === "text") {\n        var ord = buildCommon.makeOrd(group, options, "textord");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan(["mspace", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan(["mspace", cssSpace[group.text]], [], options);\n    } else {\n      throw new src_ParseError("Unknown type of space \\"" + group.text + "\\"");\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode("mtext", [new mathMLTree.TextNode("\\xA0")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode("mspace");\n    } else {\n      throw new src_ParseError("Unknown type of space \\"" + group.text + "\\"");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/tag.js\n\n\n\ndefineFunctionBuilders({\n  type: "tag",\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var table = new mathMLTree.MathNode("mtable", [new mathMLTree.MathNode("mlabeledtr", [new mathMLTree.MathNode("mtd", [buildExpressionRow(group.tag, options)]), new mathMLTree.MathNode("mtd", [buildExpressionRow(group.body, options)])])]);\n    table.setAttribute("side", "right");\n    return table;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/text.js\n\n\n\n // Non-mathy text, possibly in a font\n\nvar textFontFamilies = {\n  "\\\\text": undefined,\n  "\\\\textrm": "textrm",\n  "\\\\textsf": "textsf",\n  "\\\\texttt": "texttt",\n  "\\\\textnormal": "textrm"\n};\nvar textFontWeights = {\n  "\\\\textbf": "textbf"\n};\nvar textFontShapes = {\n  "\\\\textit": "textit"\n};\n\nvar optionsWithFont = function optionsWithFont(group, options) {\n  var font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: "text",\n  names: [// Font families\n  "\\\\text", "\\\\textrm", "\\\\textsf", "\\\\texttt", "\\\\textnormal", // Font weights\n  "\\\\textbf", // Font Shapes\n  "\\\\textit"],\n  props: {\n    numArgs: 1,\n    argTypes: ["text"],\n    greediness: 2,\n    allowedInText: true,\n    consumeMode: "text"\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: "text",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body),\n      font: funcName\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    var inner = buildHTML_buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan(["mord", "text"], buildCommon.tryCombineChars(inner), newOptions);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/underline.js\n\n\n\n\n\ndefineFunction({\n  type: "underline",\n  names: ["\\\\underline"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: "underline",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildHTML_buildGroup(group.body, options); // Create the line to go below the body\n\n    var line = buildCommon.makeLineSpan("underline-line", options); // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: "top",\n      positionData: innerGroup.height,\n      children: [{\n        type: "kern",\n        size: line.height\n      }, {\n        type: "elem",\n        elem: line\n      }, {\n        type: "kern",\n        size: 3 * line.height\n      }, {\n        type: "elem",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan(["mord", "underline"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode("\\u203E")]);\n    operator.setAttribute("stretchy", "true");\n    var node = new mathMLTree.MathNode("munder", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute("accentunder", "true");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/verb.js\n\n\n\n\ndefineFunction({\n  type: "verb",\n  names: ["\\\\verb"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it\'s because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new src_ParseError("\\\\verb ended by end of line instead of matching delimiter");\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var text = makeVerb(group);\n    var body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    var newOptions = options.havingStyle(options.style.text());\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c === \'~\') {\n        c = \'\\\\textasciitilde\';\n      }\n\n      body.push(buildCommon.makeSymbol(c, "Typewriter-Regular", group.mode, newOptions, ["mord", "texttt"]));\n    }\n\n    return buildCommon.makeSpan(["mord", "text"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var text = new mathMLTree.TextNode(makeVerb(group));\n    var node = new mathMLTree.MathNode("mtext", [text]);\n    node.setAttribute("mathvariant", "monospace");\n    return node;\n  }\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nvar makeVerb = function makeVerb(group) {\n  return group.body.replace(/ /g, group.star ? "\\u2423" : \'\\xA0\');\n};\n// CONCATENATED MODULE: ./src/functions.js\n/** Include this to ensure that all functions are defined. */\n\nvar functions = _functions;\n/* harmony default export */ var src_functions = (functions); // TODO(kevinb): have functions return an object and call defineFunction with\n// that object in this file instead of relying on side-effects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/Lexer.js\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn\'t mean it\'s valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = "[ \\r\\n\\t]";\nvar controlWordRegexString = "\\\\\\\\[a-zA-Z@]+";\nvar controlSymbolRegexString = "\\\\\\\\[^\\uD800-\\uDFFF]";\nvar controlWordWhitespaceRegexString = "" + controlWordRegexString + spaceRegexString + "*";\nvar controlWordWhitespaceRegex = new RegExp("^(" + controlWordRegexString + ")" + spaceRegexString + "*$");\nvar combiningDiacriticalMarkString = "[\\u0300-\\u036F]";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + "+$");\nvar tokenRegexString = "(" + spaceRegexString + "+)|" + // whitespace\n"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]" + ( // single codepoint\ncombiningDiacriticalMarkString + "*") + // ...plus accents\n"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]" + ( // surrogate pair\ncombiningDiacriticalMarkString + "*") + // ...plus accents\n"|\\\\\\\\verb\\\\*([^]).*?\\\\3" + // \\verb*\n"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4" + ( // \\verb unstarred\n"|" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n"|" + controlSymbolRegexString + ")"); // \\\\, \\\', etc.\n\n/** Main Lexer class */\n\nvar Lexer_Lexer =\n/*#__PURE__*/\nfunction () {\n  // category codes, only supports comment characters (14) for now\n  function Lexer(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, \'g\');\n    this.catcodes = {\n      "%": 14 // comment character\n\n    };\n  }\n\n  var _proto = Lexer.prototype;\n\n  _proto.setCatcode = function setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n  ;\n\n  _proto.lex = function lex() {\n    var input = this.input;\n    var pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token_Token("EOF", new SourceLocation(this, pos, pos));\n    }\n\n    var match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new src_ParseError("Unexpected character: \'" + input[pos] + "\'", new Token_Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    var text = match[2] || " ";\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      var nlIndex = input.indexOf(\'\\n\', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would " + "fail because of commenting the end of math mode (e.g. $)");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    } // Trim any trailing whitespace from control word match\n\n\n    var controlMatch = text.match(controlWordWhitespaceRegex);\n\n    if (controlMatch) {\n      text = controlMatch[1];\n    }\n\n    return new Token_Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  };\n\n  return Lexer;\n}();\n\n\n// CONCATENATED MODULE: ./src/Namespace.js\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\n\nvar Namespace_Namespace =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  function Namespace(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  var _proto = Namespace.prototype;\n\n  _proto.beginGroup = function beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n  ;\n\n  _proto.endGroup = function endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new src_ParseError("Unbalanced namespace destruction: attempt " + "to pop global namespace; please report this as a bug");\n    }\n\n    var undefs = this.undefStack.pop();\n\n    for (var undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n  ;\n\n  _proto.has = function has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n  ;\n\n  _proto.get = function get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n  ;\n\n  _proto.set = function set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (var i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      var top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  };\n\n  return Namespace;\n}();\n\n\n// CONCATENATED MODULE: ./src/macros.js\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n\n\n\n\n\nvar builtinMacros = {};\n/* harmony default export */ var macros = (builtinMacros); // This function might one day accept an additional argument and do more things.\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n// LaTeX\'s \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro("\\\\@firstoftwo", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX\'s \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro("\\\\@secondoftwo", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX\'s \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\n\ndefineMacro("\\\\@ifnextchar", function (context) {\n  var args = context.consumeArgs(3); // symbol, if, else\n\n  var nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX\'s \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro("\\\\@ifstar", "\\\\@ifnextchar *{\\\\@firstoftwo{#1}}"); // LaTeX\'s \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro("\\\\TextOrMath", function (context) {\n  var args = context.consumeArgs(2);\n\n  if (context.mode === \'text\') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nvar digitToNumber = {\n  "0": 0,\n  "1": 1,\n  "2": 2,\n  "3": 3,\n  "4": 4,\n  "5": 5,\n  "6": 6,\n  "7": 7,\n  "8": 8,\n  "9": 9,\n  "a": 10,\n  "A": 10,\n  "b": 11,\n  "B": 11,\n  "c": 12,\n  "C": 12,\n  "d": 13,\n  "D": 13,\n  "e": 14,\n  "E": 14,\n  "f": 15,\n  "F": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char\'123 -- octal\n//   \\char"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn\'t active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro("\\\\char", function (context) {\n  var token = context.popToken();\n  var base;\n  var number = \'\';\n\n  if (token.text === "\'") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === \'"\') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === "`") {\n    token = context.popToken();\n\n    if (token.text[0] === "\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === "EOF") {\n      throw new src_ParseError("\\\\char` missing argument");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new src_ParseError("Invalid base-" + base + " digit " + token.text);\n    }\n\n    var digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return "\\\\@char{" + number + "}";\n}); // Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\n\nvar macros_def = function def(context, global) {\n  var arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new src_ParseError("\\\\gdef\'s first argument must be a macro name");\n  }\n\n  var name = arg[0].text; // Count argument specifiers, and check they are in the order #1 #2 ...\n\n  var numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  while (arg.length === 1 && arg[0].text === "#") {\n    arg = context.consumeArgs(1)[0];\n\n    if (arg.length !== 1) {\n      throw new src_ParseError("Invalid argument number length \\"" + arg.length + "\\"");\n    }\n\n    if (!/^[1-9]$/.test(arg[0].text)) {\n      throw new src_ParseError("Invalid argument number \\"" + arg[0].text + "\\"");\n    }\n\n    numArgs++;\n\n    if (parseInt(arg[0].text) !== numArgs) {\n      throw new src_ParseError("Argument number \\"" + arg[0].text + "\\" out of order");\n    }\n\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs: numArgs\n  }, global);\n  return \'\';\n};\n\ndefineMacro("\\\\gdef", function (context) {\n  return macros_def(context, true);\n});\ndefineMacro("\\\\def", function (context) {\n  return macros_def(context, false);\n});\ndefineMacro("\\\\global", function (context) {\n  var next = context.consumeArgs(1)[0];\n\n  if (next.length !== 1) {\n    throw new src_ParseError("Invalid command after \\\\global");\n  }\n\n  var command = next[0].text; // TODO: Should expand command\n\n  if (command === "\\\\def") {\n    // \\global\\def is equivalent to \\gdef\n    return macros_def(context, true);\n  } else {\n    throw new src_ParseError("Invalid command \'" + command + "\' after \\\\global");\n  }\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nvar macros_newcommand = function newcommand(context, existsOK, nonexistsOK) {\n  var arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new src_ParseError("\\\\newcommand\'s first argument must be a macro name");\n  }\n\n  var name = arg[0].text;\n  var exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new src_ParseError("\\\\newcommand{" + name + "} attempting to redefine " + (name + "; use \\\\renewcommand"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new src_ParseError("\\\\renewcommand{" + name + "} when command " + name + " " + "does not yet exist; use \\\\newcommand");\n  }\n\n  var numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  if (arg.length === 1 && arg[0].text === "[") {\n    var argText = \'\';\n    var token = context.expandNextToken();\n\n    while (token.text !== "]" && token.text !== "EOF") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new src_ParseError("Invalid number of arguments: " + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs: numArgs\n  });\n  return \'\';\n};\n\ndefineMacro("\\\\newcommand", function (context) {\n  return macros_newcommand(context, false, true);\n});\ndefineMacro("\\\\renewcommand", function (context) {\n  return macros_newcommand(context, true, false);\n});\ndefineMacro("\\\\providecommand", function (context) {\n  return macros_newcommand(context, true, true);\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro("\\\\bgroup", "{");\ndefineMacro("\\\\egroup", "}"); // Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{\'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro("\\\\lq", "`");\ndefineMacro("\\\\rq", "\'");\ndefineMacro("\\\\aa", "\\\\r a");\ndefineMacro("\\\\AA", "\\\\r A"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro("\\\\textcopyright", "\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}");\ndefineMacro("\\\\copyright", "\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}");\ndefineMacro("\\\\textregistered", "\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro("\\u212C", "\\\\mathscr{B}"); // script\n\ndefineMacro("\\u2130", "\\\\mathscr{E}");\ndefineMacro("\\u2131", "\\\\mathscr{F}");\ndefineMacro("\\u210B", "\\\\mathscr{H}");\ndefineMacro("\\u2110", "\\\\mathscr{I}");\ndefineMacro("\\u2112", "\\\\mathscr{L}");\ndefineMacro("\\u2133", "\\\\mathscr{M}");\ndefineMacro("\\u211B", "\\\\mathscr{R}");\ndefineMacro("\\u212D", "\\\\mathfrak{C}"); // Fraktur\n\ndefineMacro("\\u210C", "\\\\mathfrak{H}");\ndefineMacro("\\u2128", "\\\\mathfrak{Z}"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro("\\xB7", "\\\\cdotp"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro("\\\\llap", "\\\\mathllap{\\\\textrm{#1}}");\ndefineMacro("\\\\rlap", "\\\\mathrlap{\\\\textrm{#1}}");\ndefineMacro("\\\\clap", "\\\\mathclap{\\\\textrm{#1}}"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{"36}\n// It\'s thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n\ndefineMacro("\\\\not", \'\\\\mathrel{\\\\mathrlap\\\\@not}\'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro("\\\\neq", "\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}");\ndefineMacro("\\\\ne", "\\\\neq");\ndefineMacro("\\u2260", "\\\\neq");\ndefineMacro("\\\\notin", "\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}" + "{\\\\mathrel{\\\\char`∉}}");\ndefineMacro("\\u2209", "\\\\notin"); // Unicode stacked relations\n\ndefineMacro("\\u2258", "\\\\html@mathml{" + "\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}" + "}{\\\\mathrel{\\\\char`\\u2258}}");\ndefineMacro("\\u2259", "\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}");\ndefineMacro("\\u225A", "\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}");\ndefineMacro("\\u225B", "\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}" + "{\\\\mathrel{\\\\char`\\u225B}}");\ndefineMacro("\\u225D", "\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}" + "{\\\\mathrel{\\\\char`\\u225D}}");\ndefineMacro("\\u225E", "\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}" + "{\\\\mathrel{\\\\char`\\u225E}}");\ndefineMacro("\\u225F", "\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}"); // Misc Unicode\n\ndefineMacro("\\u27C2", "\\\\perp");\ndefineMacro("\\u203C", "\\\\mathclose{!\\\\mkern-0.8mu!}");\ndefineMacro("\\u220C", "\\\\notni");\ndefineMacro("\\u231C", "\\\\ulcorner");\ndefineMacro("\\u231D", "\\\\urcorner");\ndefineMacro("\\u231E", "\\\\llcorner");\ndefineMacro("\\u231F", "\\\\lrcorner");\ndefineMacro("\\xA9", "\\\\copyright");\ndefineMacro("\\xAE", "\\\\textregistered");\ndefineMacro("\\uFE0F", "\\\\textregistered"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We\'ll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro("\\\\vdots", "\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}");\ndefineMacro("\\u22EE", "\\\\vdots"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro("\\\\varGamma", "\\\\mathit{\\\\Gamma}");\ndefineMacro("\\\\varDelta", "\\\\mathit{\\\\Delta}");\ndefineMacro("\\\\varTheta", "\\\\mathit{\\\\Theta}");\ndefineMacro("\\\\varLambda", "\\\\mathit{\\\\Lambda}");\ndefineMacro("\\\\varXi", "\\\\mathit{\\\\Xi}");\ndefineMacro("\\\\varPi", "\\\\mathit{\\\\Pi}");\ndefineMacro("\\\\varSigma", "\\\\mathit{\\\\Sigma}");\ndefineMacro("\\\\varUpsilon", "\\\\mathit{\\\\Upsilon}");\ndefineMacro("\\\\varPhi", "\\\\mathit{\\\\Phi}");\ndefineMacro("\\\\varPsi", "\\\\mathit{\\\\Psi}");\ndefineMacro("\\\\varOmega", "\\\\mathit{\\\\Omega}"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro("\\\\colon", "\\\\nobreak\\\\mskip2mu\\\\mathpunct{}" + "\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro("\\\\boxed", "\\\\fbox{$\\\\displaystyle{#1}$}"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro("\\\\iff", "\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;");\ndefineMacro("\\\\implies", "\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;");\ndefineMacro("\\\\impliedby", "\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;"); // AMSMath\'s automatic \\dots, based on \\mdots@@ macro.\n\nvar dotsByToken = {\n  \',\': \'\\\\dotsc\',\n  \'\\\\not\': \'\\\\dotsb\',\n  // \\keybin@ checks for the following:\n  \'+\': \'\\\\dotsb\',\n  \'=\': \'\\\\dotsb\',\n  \'<\': \'\\\\dotsb\',\n  \'>\': \'\\\\dotsb\',\n  \'-\': \'\\\\dotsb\',\n  \'*\': \'\\\\dotsb\',\n  \':\': \'\\\\dotsb\',\n  // Symbols whose definition starts with \\DOTSB:\n  \'\\\\DOTSB\': \'\\\\dotsb\',\n  \'\\\\coprod\': \'\\\\dotsb\',\n  \'\\\\bigvee\': \'\\\\dotsb\',\n  \'\\\\bigwedge\': \'\\\\dotsb\',\n  \'\\\\biguplus\': \'\\\\dotsb\',\n  \'\\\\bigcap\': \'\\\\dotsb\',\n  \'\\\\bigcup\': \'\\\\dotsb\',\n  \'\\\\prod\': \'\\\\dotsb\',\n  \'\\\\sum\': \'\\\\dotsb\',\n  \'\\\\bigotimes\': \'\\\\dotsb\',\n  \'\\\\bigoplus\': \'\\\\dotsb\',\n  \'\\\\bigodot\': \'\\\\dotsb\',\n  \'\\\\bigsqcup\': \'\\\\dotsb\',\n  \'\\\\And\': \'\\\\dotsb\',\n  \'\\\\longrightarrow\': \'\\\\dotsb\',\n  \'\\\\Longrightarrow\': \'\\\\dotsb\',\n  \'\\\\longleftarrow\': \'\\\\dotsb\',\n  \'\\\\Longleftarrow\': \'\\\\dotsb\',\n  \'\\\\longleftrightarrow\': \'\\\\dotsb\',\n  \'\\\\Longleftrightarrow\': \'\\\\dotsb\',\n  \'\\\\mapsto\': \'\\\\dotsb\',\n  \'\\\\longmapsto\': \'\\\\dotsb\',\n  \'\\\\hookrightarrow\': \'\\\\dotsb\',\n  \'\\\\doteq\': \'\\\\dotsb\',\n  // Symbols whose definition starts with \\mathbin:\n  \'\\\\mathbin\': \'\\\\dotsb\',\n  // Symbols whose definition starts with \\mathrel:\n  \'\\\\mathrel\': \'\\\\dotsb\',\n  \'\\\\relbar\': \'\\\\dotsb\',\n  \'\\\\Relbar\': \'\\\\dotsb\',\n  \'\\\\xrightarrow\': \'\\\\dotsb\',\n  \'\\\\xleftarrow\': \'\\\\dotsb\',\n  // Symbols whose definition starts with \\DOTSI:\n  \'\\\\DOTSI\': \'\\\\dotsi\',\n  \'\\\\int\': \'\\\\dotsi\',\n  \'\\\\oint\': \'\\\\dotsi\',\n  \'\\\\iint\': \'\\\\dotsi\',\n  \'\\\\iiint\': \'\\\\dotsi\',\n  \'\\\\iiiint\': \'\\\\dotsi\',\n  \'\\\\idotsint\': \'\\\\dotsi\',\n  // Symbols whose definition starts with \\DOTSX:\n  \'\\\\DOTSX\': \'\\\\dotsx\'\n};\ndefineMacro("\\\\dots", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it\'s unlikely we\'d see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  var thedots = \'\\\\dotso\';\n  var next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === \'\\\\not\') {\n    thedots = \'\\\\dotsb\';\n  } else if (next in src_symbols.math) {\n    if (utils.contains([\'bin\', \'rel\'], src_symbols.math[next].group)) {\n      thedots = \'\\\\dotsb\';\n    }\n  }\n\n  return thedots;\n});\nvar spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  \')\': true,\n  \']\': true,\n  \'\\\\rbrack\': true,\n  \'\\\\}\': true,\n  \'\\\\rbrace\': true,\n  \'\\\\rangle\': true,\n  \'\\\\rceil\': true,\n  \'\\\\rfloor\': true,\n  \'\\\\rgroup\': true,\n  \'\\\\rmoustache\': true,\n  \'\\\\right\': true,\n  \'\\\\bigr\': true,\n  \'\\\\biggr\': true,\n  \'\\\\Bigr\': true,\n  \'\\\\Biggr\': true,\n  // \\extra@ also tests for the following:\n  \'$\': true,\n  // \\extrap@ checks for the following:\n  \';\': true,\n  \'.\': true,\n  \',\': true\n};\ndefineMacro("\\\\dotso", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return "\\\\ldots\\\\,";\n  } else {\n    return "\\\\ldots";\n  }\n});\ndefineMacro("\\\\dotsc", function (context) {\n  var next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // \';\' and \'.\', but doesn\'t check for \',\'.\n\n  if (next in spaceAfterDots && next !== \',\') {\n    return "\\\\ldots\\\\,";\n  } else {\n    return "\\\\ldots";\n  }\n});\ndefineMacro("\\\\cdots", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return "\\\\@cdots\\\\,";\n  } else {\n    return "\\\\@cdots";\n  }\n});\ndefineMacro("\\\\dotsb", "\\\\cdots");\ndefineMacro("\\\\dotsm", "\\\\cdots");\ndefineMacro("\\\\dotsi", "\\\\!\\\\cdots"); // amsmath doesn\'t actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro("\\\\dotsx", "\\\\ldots\\\\,"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro("\\\\DOTSI", "\\\\relax");\ndefineMacro("\\\\DOTSB", "\\\\relax");\ndefineMacro("\\\\DOTSX", "\\\\relax"); // Spacing, based on amsmath.sty\'s override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro("\\\\tmspace", "\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro("\\\\,", "\\\\tmspace+{3mu}{.1667em}"); // \\let\\thinspace\\,\n\ndefineMacro("\\\\thinspace", "\\\\,"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro("\\\\>", "\\\\mskip{4mu}");\ndefineMacro("\\\\:", "\\\\tmspace+{4mu}{.2222em}"); // \\let\\medspace\\:\n\ndefineMacro("\\\\medspace", "\\\\:"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro("\\\\;", "\\\\tmspace+{5mu}{.2777em}"); // \\let\\thickspace\\;\n\ndefineMacro("\\\\thickspace", "\\\\;"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro("\\\\!", "\\\\tmspace-{3mu}{.1667em}"); // \\let\\negthinspace\\!\n\ndefineMacro("\\\\negthinspace", "\\\\!"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro("\\\\negmedspace", "\\\\tmspace-{4mu}{.2222em}"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro("\\\\negthickspace", "\\\\tmspace-{5mu}{.277em}"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro("\\\\enspace", "\\\\kern.5em "); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro("\\\\enskip", "\\\\hskip.5em\\\\relax"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro("\\\\quad", "\\\\hskip1em\\\\relax"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro("\\\\qquad", "\\\\hskip2em\\\\relax"); // \\tag@in@display form of \\tag\n\ndefineMacro("\\\\tag", "\\\\@ifstar\\\\tag@literal\\\\tag@paren");\ndefineMacro("\\\\tag@paren", "\\\\tag@literal{({#1})}");\ndefineMacro("\\\\tag@literal", function (context) {\n  if (context.macros.get("\\\\df@tag")) {\n    throw new src_ParseError("Multiple \\\\tag");\n  }\n\n  return "\\\\gdef\\\\df@tag{\\\\text{#1}}";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro("\\\\bmod", "\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}" + "\\\\mathbin{\\\\rm mod}" + "\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}");\ndefineMacro("\\\\pod", "\\\\allowbreak" + "\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)");\ndefineMacro("\\\\pmod", "\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}");\ndefineMacro("\\\\mod", "\\\\allowbreak" + "\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}" + "{\\\\rm mod}\\\\,\\\\,#1"); // \\pmb    --   A simulation of bold.\n// It works by typesetting three copies of the argument with small offsets.\n// Ref: a rather lengthy macro in ambsy.sty\n\ndefineMacro("\\\\pmb", "\\\\html@mathml{\\\\@binrel{#1}{" + "\\\\mathrlap{#1}" + "\\\\mathrlap{\\\\mkern0.4mu\\\\raisebox{0.4mu}{$#1$}}" + "{\\\\mkern0.8mu#1}" + "}}{\\\\mathbf{#1}}"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\n\ndefineMacro("\\\\\\\\", "\\\\newline"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn\'t normally work in math mode because \\@ fails.  KaTeX doesn\'t\n// support \\@ yet, so that\'s omitted, and we add \\text so that the result\n// doesn\'t look funny in math mode.\n\ndefineMacro("\\\\TeX", "\\\\textrm{\\\\html@mathml{" + "T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX" + "}{TeX}}"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX\'s\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered at \\scriptsize,\n// which is size3, which has a scale factor of 0.7 (see Options.js).\n\nvar latexRaiseA = fontMetricsData[\'Main-Regular\']["T".charCodeAt(0)][1] - 0.7 * fontMetricsData[\'Main-Regular\']["A".charCodeAt(0)][1] + "em";\ndefineMacro("\\\\LaTeX", "\\\\textrm{\\\\html@mathml{" + ("L\\\\kern-.36em\\\\raisebox{" + latexRaiseA + "}{\\\\scriptsize A}") + "\\\\kern-.15em\\\\TeX}{LaTeX}}"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro("\\\\KaTeX", "\\\\textrm{\\\\html@mathml{" + ("K\\\\kern-.17em\\\\raisebox{" + latexRaiseA + "}{\\\\scriptsize A}") + "\\\\kern-.15em\\\\TeX}{KaTeX}}"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro("\\\\hspace", "\\\\@ifstar\\\\@hspacer\\\\@hspace");\ndefineMacro("\\\\@hspace", "\\\\hskip #1\\\\relax");\ndefineMacro("\\\\@hspacer", "\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro("\\\\ordinarycolon", ":"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro("\\\\vcentcolon", "\\\\mathrel{\\\\mathop\\\\ordinarycolon}"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro("\\\\dblcolon", "\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro("\\\\coloneqq", "\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}"); // \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro("\\\\Coloneqq", "\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro("\\\\coloneq", "\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro("\\\\Coloneq", "\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro("\\\\eqqcolon", "\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}"); // \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro("\\\\Eqqcolon", "\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro("\\\\eqcolon", "\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro("\\\\Eqcolon", "\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro("\\\\colonapprox", "\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro("\\\\Colonapprox", "\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro("\\\\colonsim", "\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro("\\\\Colonsim", "\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro("\\u2254", "\\\\coloneqq"); // :=\n\ndefineMacro("\\u2255", "\\\\eqqcolon"); // =:\n\ndefineMacro("\\u2A74", "\\\\Coloneqq"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools\'s macros:\n\ndefineMacro("\\\\ratio", "\\\\vcentcolon");\ndefineMacro("\\\\coloncolon", "\\\\dblcolon");\ndefineMacro("\\\\colonequals", "\\\\coloneqq");\ndefineMacro("\\\\coloncolonequals", "\\\\Coloneqq");\ndefineMacro("\\\\equalscolon", "\\\\eqqcolon");\ndefineMacro("\\\\equalscoloncolon", "\\\\Eqqcolon");\ndefineMacro("\\\\colonminus", "\\\\coloneq");\ndefineMacro("\\\\coloncolonminus", "\\\\Coloneq");\ndefineMacro("\\\\minuscolon", "\\\\eqcolon");\ndefineMacro("\\\\minuscoloncolon", "\\\\Eqcolon"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro("\\\\coloncolonapprox", "\\\\Colonapprox"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro("\\\\coloncolonsim", "\\\\Colonsim"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro("\\\\simcolon", "\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}");\ndefineMacro("\\\\simcoloncolon", "\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}");\ndefineMacro("\\\\approxcolon", "\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}");\ndefineMacro("\\\\approxcoloncolon", "\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro("\\\\notni", "\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}");\ndefineMacro("\\\\limsup", "\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,sup}}\\\\limits");\ndefineMacro("\\\\liminf", "\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,inf}}\\\\limits"); //////////////////////////////////////////////////////////////////////\n// semantic\n// The semantic package renders the next two items by calling a glyph from the\n// bbold package. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro("\\u27E6", "\\\\mathopen{[\\\\mkern-3.2mu[}"); // blackboard bold [\n\ndefineMacro("\\u27E7", "\\\\mathclose{]\\\\mkern-3.2mu]}"); // blackboard bold ]\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc\'s \\O, which conflicts with \\text{\\O}\n\ndefineMacro("\\\\darr", "\\\\downarrow");\ndefineMacro("\\\\dArr", "\\\\Downarrow");\ndefineMacro("\\\\Darr", "\\\\Downarrow");\ndefineMacro("\\\\lang", "\\\\langle");\ndefineMacro("\\\\rang", "\\\\rangle");\ndefineMacro("\\\\uarr", "\\\\uparrow");\ndefineMacro("\\\\uArr", "\\\\Uparrow");\ndefineMacro("\\\\Uarr", "\\\\Uparrow");\ndefineMacro("\\\\N", "\\\\mathbb{N}");\ndefineMacro("\\\\R", "\\\\mathbb{R}");\ndefineMacro("\\\\Z", "\\\\mathbb{Z}");\ndefineMacro("\\\\alef", "\\\\aleph");\ndefineMacro("\\\\alefsym", "\\\\aleph");\ndefineMacro("\\\\Alpha", "\\\\mathrm{A}");\ndefineMacro("\\\\Beta", "\\\\mathrm{B}");\ndefineMacro("\\\\bull", "\\\\bullet");\ndefineMacro("\\\\Chi", "\\\\mathrm{X}");\ndefineMacro("\\\\clubs", "\\\\clubsuit");\ndefineMacro("\\\\cnums", "\\\\mathbb{C}");\ndefineMacro("\\\\Complex", "\\\\mathbb{C}");\ndefineMacro("\\\\Dagger", "\\\\ddagger");\ndefineMacro("\\\\diamonds", "\\\\diamondsuit");\ndefineMacro("\\\\empty", "\\\\emptyset");\ndefineMacro("\\\\Epsilon", "\\\\mathrm{E}");\ndefineMacro("\\\\Eta", "\\\\mathrm{H}");\ndefineMacro("\\\\exist", "\\\\exists");\ndefineMacro("\\\\harr", "\\\\leftrightarrow");\ndefineMacro("\\\\hArr", "\\\\Leftrightarrow");\ndefineMacro("\\\\Harr", "\\\\Leftrightarrow");\ndefineMacro("\\\\hearts", "\\\\heartsuit");\ndefineMacro("\\\\image", "\\\\Im");\ndefineMacro("\\\\infin", "\\\\infty");\ndefineMacro("\\\\Iota", "\\\\mathrm{I}");\ndefineMacro("\\\\isin", "\\\\in");\ndefineMacro("\\\\Kappa", "\\\\mathrm{K}");\ndefineMacro("\\\\larr", "\\\\leftarrow");\ndefineMacro("\\\\lArr", "\\\\Leftarrow");\ndefineMacro("\\\\Larr", "\\\\Leftarrow");\ndefineMacro("\\\\lrarr", "\\\\leftrightarrow");\ndefineMacro("\\\\lrArr", "\\\\Leftrightarrow");\ndefineMacro("\\\\Lrarr", "\\\\Leftrightarrow");\ndefineMacro("\\\\Mu", "\\\\mathrm{M}");\ndefineMacro("\\\\natnums", "\\\\mathbb{N}");\ndefineMacro("\\\\Nu", "\\\\mathrm{N}");\ndefineMacro("\\\\Omicron", "\\\\mathrm{O}");\ndefineMacro("\\\\plusmn", "\\\\pm");\ndefineMacro("\\\\rarr", "\\\\rightarrow");\ndefineMacro("\\\\rArr", "\\\\Rightarrow");\ndefineMacro("\\\\Rarr", "\\\\Rightarrow");\ndefineMacro("\\\\real", "\\\\Re");\ndefineMacro("\\\\reals", "\\\\mathbb{R}");\ndefineMacro("\\\\Reals", "\\\\mathbb{R}");\ndefineMacro("\\\\Rho", "\\\\mathrm{R}");\ndefineMacro("\\\\sdot", "\\\\cdot");\ndefineMacro("\\\\sect", "\\\\S");\ndefineMacro("\\\\spades", "\\\\spadesuit");\ndefineMacro("\\\\sub", "\\\\subset");\ndefineMacro("\\\\sube", "\\\\subseteq");\ndefineMacro("\\\\supe", "\\\\supseteq");\ndefineMacro("\\\\Tau", "\\\\mathrm{T}");\ndefineMacro("\\\\thetasym", "\\\\vartheta"); // TODO: defineMacro("\\\\varcoppa", "\\\\\\mbox{\\\\coppa}");\n\ndefineMacro("\\\\weierp", "\\\\wp");\ndefineMacro("\\\\Zeta", "\\\\mathrm{Z}"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro("\\\\argmin", "\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,min}}\\\\limits");\ndefineMacro("\\\\argmax", "\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,max}}\\\\limits");\n// CONCATENATED MODULE: ./src/MacroExpander.js\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n\n\n\n\n\n// List of commands that act like macros but aren\'t defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n  "\\\\relax": true,\n  // MacroExpander.js\n  "^": true,\n  // Parser.js\n  "_": true,\n  // Parser.js\n  "\\\\limits": true,\n  // Parser.js\n  "\\\\nolimits": true // Parser.js\n\n};\n\nvar MacroExpander_MacroExpander =\n/*#__PURE__*/\nfunction () {\n  function MacroExpander(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace_Namespace(macros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  var _proto = MacroExpander.prototype;\n\n  _proto.feed = function feed(input) {\n    this.lexer = new Lexer_Lexer(input, this.settings);\n  }\n  /**\n   * Switches between "text" and "math" modes.\n   */\n  ;\n\n  _proto.switchMode = function switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n  ;\n\n  _proto.beginGroup = function beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n  ;\n\n  _proto.endGroup = function endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX\'s `\\futurelet`.\n   */\n  ;\n\n  _proto.future = function future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n  ;\n\n  _proto.popToken = function popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n  ;\n\n  _proto.pushToken = function pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n  ;\n\n  _proto.pushTokens = function pushTokens(tokens) {\n    var _this$stack;\n\n    (_this$stack = this.stack).push.apply(_this$stack, tokens);\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n  ;\n\n  _proto.consumeSpaces = function consumeSpaces() {\n    for (;;) {\n      var token = this.future();\n\n      if (token.text === " ") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the specified number of arguments from the token stream,\n   * and return the resulting array of arguments.\n   */\n  ;\n\n  _proto.consumeArgs = function consumeArgs(numArgs) {\n    var args = []; // obtain arguments, either single token or balanced {…} group\n\n    for (var i = 0; i < numArgs; ++i) {\n      this.consumeSpaces(); // ignore spaces before each argument\n\n      var startOfArg = this.popToken();\n\n      if (startOfArg.text === "{") {\n        var arg = [];\n        var depth = 1;\n\n        while (depth !== 0) {\n          var tok = this.popToken();\n          arg.push(tok);\n\n          if (tok.text === "{") {\n            ++depth;\n          } else if (tok.text === "}") {\n            --depth;\n          } else if (tok.text === "EOF") {\n            throw new src_ParseError("End of input in macro argument", startOfArg);\n          }\n        }\n\n        arg.pop(); // remove last }\n\n        arg.reverse(); // like above, to fit in with stack order\n\n        args[i] = arg;\n      } else if (startOfArg.text === "EOF") {\n        throw new src_ParseError("End of input expecting macro argument");\n      } else {\n        args[i] = [startOfArg];\n      }\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * At the moment, macro expansion doesn\'t handle delimited macros,\n   * i.e. things like those defined by \\def\\foo#1\\end{…}.\n   * See the TeX book page 202ff. for details on how those should behave.\n   */\n  ;\n\n  _proto.expandOnce = function expandOnce() {\n    var topToken = this.popToken();\n    var name = topToken.text;\n\n    var expansion = this._getExpansion(name);\n\n    if (expansion == null) {\n      // mainly checking for undefined here\n      // Fully expanded\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new src_ParseError("Too many expansions: infinite loop or " + "need to increase maxExpand setting");\n    }\n\n    var tokens = expansion.tokens;\n\n    if (expansion.numArgs) {\n      var args = this.consumeArgs(expansion.numArgs); // paste arguments in place of the placeholders\n\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (var i = tokens.length - 1; i >= 0; --i) {\n        var tok = tokens[i];\n\n        if (tok.text === "#") {\n          if (i === 0) {\n            throw new src_ParseError("Incomplete placeholder at end of macro body", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === "#") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            var _tokens;\n\n            // replace the placeholder with the indicated argument\n            (_tokens = tokens).splice.apply(_tokens, [i, 2].concat(args[+tok.text - 1]));\n          } else {\n            throw new src_ParseError("Not a valid argument number", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX\'s `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n  ;\n\n  _proto.expandAfterFuture = function expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n  ;\n\n  _proto.expandNextToken = function expandNextToken() {\n    for (;;) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it\'s fully expanded.\n\n      if (expanded instanceof Token_Token) {\n        // \\relax stops the expansion, but shouldn\'t get returned (a\n        // null return value couldn\'t get implemented as a function).\n        if (expanded.text === "\\\\relax") {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n  ;\n\n  _proto.expandMacro = function expandMacro(name) {\n    if (!this.macros.get(name)) {\n      return undefined;\n    }\n\n    var output = [];\n    var oldStackLength = this.stack.length;\n    this.pushToken(new Token_Token(name));\n\n    while (this.stack.length > oldStackLength) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it\'s fully expanded.\n\n      if (expanded instanceof Token_Token) {\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n  ;\n\n  _proto.expandMacroAsText = function expandMacroAsText(name) {\n    var tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(function (token) {\n        return token.text;\n      }).join("");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n  ;\n\n  _proto._getExpansion = function _getExpansion(name) {\n    var definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    }\n\n    var expansion = typeof definition === "function" ? definition(this) : definition;\n\n    if (typeof expansion === "string") {\n      var numArgs = 0;\n\n      if (expansion.indexOf("#") !== -1) {\n        var stripped = expansion.replace(/##/g, "");\n\n        while (stripped.indexOf("#" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      var bodyLexer = new Lexer_Lexer(expansion, this.settings);\n      var tokens = [];\n      var tok = bodyLexer.lex();\n\n      while (tok.text !== "EOF") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      var expanded = {\n        tokens: tokens,\n        numArgs: numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently "defined" (has some\n   * functionality), meaning that it\'s a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n  ;\n\n  _proto.isDefined = function isDefined(name) {\n    return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  };\n\n  return MacroExpander;\n}();\n\n\n// CONCATENATED MODULE: ./src/unicodeAccents.js\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\n/* harmony default export */ var unicodeAccents = ({\n  "\\u0301": {\n    text: "\\\\\'",\n    math: \'\\\\acute\'\n  },\n  "\\u0300": {\n    text: \'\\\\`\',\n    math: \'\\\\grave\'\n  },\n  "\\u0308": {\n    text: \'\\\\"\',\n    math: \'\\\\ddot\'\n  },\n  "\\u0303": {\n    text: \'\\\\~\',\n    math: \'\\\\tilde\'\n  },\n  "\\u0304": {\n    text: \'\\\\=\',\n    math: \'\\\\bar\'\n  },\n  "\\u0306": {\n    text: "\\\\u",\n    math: \'\\\\breve\'\n  },\n  "\\u030C": {\n    text: \'\\\\v\',\n    math: \'\\\\check\'\n  },\n  "\\u0302": {\n    text: \'\\\\^\',\n    math: \'\\\\hat\'\n  },\n  "\\u0307": {\n    text: \'\\\\.\',\n    math: \'\\\\dot\'\n  },\n  "\\u030A": {\n    text: \'\\\\r\',\n    math: \'\\\\mathring\'\n  },\n  "\\u030B": {\n    text: \'\\\\H\'\n  }\n});\n// CONCATENATED MODULE: ./src/unicodeSymbols.js\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\n/* harmony default export */ var unicodeSymbols = ({\n  "\\xE1": "a\\u0301",\n  // á = \\\'{a}\n  "\\xE0": "a\\u0300",\n  // à = \\`{a}\n  "\\xE4": "a\\u0308",\n  // ä = \\"{a}\n  "\\u01DF": "a\\u0308\\u0304",\n  // ǟ = \\"\\={a}\n  "\\xE3": "a\\u0303",\n  // ã = \\~{a}\n  "\\u0101": "a\\u0304",\n  // ā = \\={a}\n  "\\u0103": "a\\u0306",\n  // ă = \\u{a}\n  "\\u1EAF": "a\\u0306\\u0301",\n  // ắ = \\u\\\'{a}\n  "\\u1EB1": "a\\u0306\\u0300",\n  // ằ = \\u\\`{a}\n  "\\u1EB5": "a\\u0306\\u0303",\n  // ẵ = \\u\\~{a}\n  "\\u01CE": "a\\u030C",\n  // ǎ = \\v{a}\n  "\\xE2": "a\\u0302",\n  // â = \\^{a}\n  "\\u1EA5": "a\\u0302\\u0301",\n  // ấ = \\^\\\'{a}\n  "\\u1EA7": "a\\u0302\\u0300",\n  // ầ = \\^\\`{a}\n  "\\u1EAB": "a\\u0302\\u0303",\n  // ẫ = \\^\\~{a}\n  "\\u0227": "a\\u0307",\n  // ȧ = \\.{a}\n  "\\u01E1": "a\\u0307\\u0304",\n  // ǡ = \\.\\={a}\n  "\\xE5": "a\\u030A",\n  // å = \\r{a}\n  "\\u01FB": "a\\u030A\\u0301",\n  // ǻ = \\r\\\'{a}\n  "\\u1E03": "b\\u0307",\n  // ḃ = \\.{b}\n  "\\u0107": "c\\u0301",\n  // ć = \\\'{c}\n  "\\u010D": "c\\u030C",\n  // č = \\v{c}\n  "\\u0109": "c\\u0302",\n  // ĉ = \\^{c}\n  "\\u010B": "c\\u0307",\n  // ċ = \\.{c}\n  "\\u010F": "d\\u030C",\n  // ď = \\v{d}\n  "\\u1E0B": "d\\u0307",\n  // ḋ = \\.{d}\n  "\\xE9": "e\\u0301",\n  // é = \\\'{e}\n  "\\xE8": "e\\u0300",\n  // è = \\`{e}\n  "\\xEB": "e\\u0308",\n  // ë = \\"{e}\n  "\\u1EBD": "e\\u0303",\n  // ẽ = \\~{e}\n  "\\u0113": "e\\u0304",\n  // ē = \\={e}\n  "\\u1E17": "e\\u0304\\u0301",\n  // ḗ = \\=\\\'{e}\n  "\\u1E15": "e\\u0304\\u0300",\n  // ḕ = \\=\\`{e}\n  "\\u0115": "e\\u0306",\n  // ĕ = \\u{e}\n  "\\u011B": "e\\u030C",\n  // ě = \\v{e}\n  "\\xEA": "e\\u0302",\n  // ê = \\^{e}\n  "\\u1EBF": "e\\u0302\\u0301",\n  // ế = \\^\\\'{e}\n  "\\u1EC1": "e\\u0302\\u0300",\n  // ề = \\^\\`{e}\n  "\\u1EC5": "e\\u0302\\u0303",\n  // ễ = \\^\\~{e}\n  "\\u0117": "e\\u0307",\n  // ė = \\.{e}\n  "\\u1E1F": "f\\u0307",\n  // ḟ = \\.{f}\n  "\\u01F5": "g\\u0301",\n  // ǵ = \\\'{g}\n  "\\u1E21": "g\\u0304",\n  // ḡ = \\={g}\n  "\\u011F": "g\\u0306",\n  // ğ = \\u{g}\n  "\\u01E7": "g\\u030C",\n  // ǧ = \\v{g}\n  "\\u011D": "g\\u0302",\n  // ĝ = \\^{g}\n  "\\u0121": "g\\u0307",\n  // ġ = \\.{g}\n  "\\u1E27": "h\\u0308",\n  // ḧ = \\"{h}\n  "\\u021F": "h\\u030C",\n  // ȟ = \\v{h}\n  "\\u0125": "h\\u0302",\n  // ĥ = \\^{h}\n  "\\u1E23": "h\\u0307",\n  // ḣ = \\.{h}\n  "\\xED": "i\\u0301",\n  // í = \\\'{i}\n  "\\xEC": "i\\u0300",\n  // ì = \\`{i}\n  "\\xEF": "i\\u0308",\n  // ï = \\"{i}\n  "\\u1E2F": "i\\u0308\\u0301",\n  // ḯ = \\"\\\'{i}\n  "\\u0129": "i\\u0303",\n  // ĩ = \\~{i}\n  "\\u012B": "i\\u0304",\n  // ī = \\={i}\n  "\\u012D": "i\\u0306",\n  // ĭ = \\u{i}\n  "\\u01D0": "i\\u030C",\n  // ǐ = \\v{i}\n  "\\xEE": "i\\u0302",\n  // î = \\^{i}\n  "\\u01F0": "j\\u030C",\n  // ǰ = \\v{j}\n  "\\u0135": "j\\u0302",\n  // ĵ = \\^{j}\n  "\\u1E31": "k\\u0301",\n  // ḱ = \\\'{k}\n  "\\u01E9": "k\\u030C",\n  // ǩ = \\v{k}\n  "\\u013A": "l\\u0301",\n  // ĺ = \\\'{l}\n  "\\u013E": "l\\u030C",\n  // ľ = \\v{l}\n  "\\u1E3F": "m\\u0301",\n  // ḿ = \\\'{m}\n  "\\u1E41": "m\\u0307",\n  // ṁ = \\.{m}\n  "\\u0144": "n\\u0301",\n  // ń = \\\'{n}\n  "\\u01F9": "n\\u0300",\n  // ǹ = \\`{n}\n  "\\xF1": "n\\u0303",\n  // ñ = \\~{n}\n  "\\u0148": "n\\u030C",\n  // ň = \\v{n}\n  "\\u1E45": "n\\u0307",\n  // ṅ = \\.{n}\n  "\\xF3": "o\\u0301",\n  // ó = \\\'{o}\n  "\\xF2": "o\\u0300",\n  // ò = \\`{o}\n  "\\xF6": "o\\u0308",\n  // ö = \\"{o}\n  "\\u022B": "o\\u0308\\u0304",\n  // ȫ = \\"\\={o}\n  "\\xF5": "o\\u0303",\n  // õ = \\~{o}\n  "\\u1E4D": "o\\u0303\\u0301",\n  // ṍ = \\~\\\'{o}\n  "\\u1E4F": "o\\u0303\\u0308",\n  // ṏ = \\~\\"{o}\n  "\\u022D": "o\\u0303\\u0304",\n  // ȭ = \\~\\={o}\n  "\\u014D": "o\\u0304",\n  // ō = \\={o}\n  "\\u1E53": "o\\u0304\\u0301",\n  // ṓ = \\=\\\'{o}\n  "\\u1E51": "o\\u0304\\u0300",\n  // ṑ = \\=\\`{o}\n  "\\u014F": "o\\u0306",\n  // ŏ = \\u{o}\n  "\\u01D2": "o\\u030C",\n  // ǒ = \\v{o}\n  "\\xF4": "o\\u0302",\n  // ô = \\^{o}\n  "\\u1ED1": "o\\u0302\\u0301",\n  // ố = \\^\\\'{o}\n  "\\u1ED3": "o\\u0302\\u0300",\n  // ồ = \\^\\`{o}\n  "\\u1ED7": "o\\u0302\\u0303",\n  // ỗ = \\^\\~{o}\n  "\\u022F": "o\\u0307",\n  // ȯ = \\.{o}\n  "\\u0231": "o\\u0307\\u0304",\n  // ȱ = \\.\\={o}\n  "\\u0151": "o\\u030B",\n  // ő = \\H{o}\n  "\\u1E55": "p\\u0301",\n  // ṕ = \\\'{p}\n  "\\u1E57": "p\\u0307",\n  // ṗ = \\.{p}\n  "\\u0155": "r\\u0301",\n  // ŕ = \\\'{r}\n  "\\u0159": "r\\u030C",\n  // ř = \\v{r}\n  "\\u1E59": "r\\u0307",\n  // ṙ = \\.{r}\n  "\\u015B": "s\\u0301",\n  // ś = \\\'{s}\n  "\\u1E65": "s\\u0301\\u0307",\n  // ṥ = \\\'\\.{s}\n  "\\u0161": "s\\u030C",\n  // š = \\v{s}\n  "\\u1E67": "s\\u030C\\u0307",\n  // ṧ = \\v\\.{s}\n  "\\u015D": "s\\u0302",\n  // ŝ = \\^{s}\n  "\\u1E61": "s\\u0307",\n  // ṡ = \\.{s}\n  "\\u1E97": "t\\u0308",\n  // ẗ = \\"{t}\n  "\\u0165": "t\\u030C",\n  // ť = \\v{t}\n  "\\u1E6B": "t\\u0307",\n  // ṫ = \\.{t}\n  "\\xFA": "u\\u0301",\n  // ú = \\\'{u}\n  "\\xF9": "u\\u0300",\n  // ù = \\`{u}\n  "\\xFC": "u\\u0308",\n  // ü = \\"{u}\n  "\\u01D8": "u\\u0308\\u0301",\n  // ǘ = \\"\\\'{u}\n  "\\u01DC": "u\\u0308\\u0300",\n  // ǜ = \\"\\`{u}\n  "\\u01D6": "u\\u0308\\u0304",\n  // ǖ = \\"\\={u}\n  "\\u01DA": "u\\u0308\\u030C",\n  // ǚ = \\"\\v{u}\n  "\\u0169": "u\\u0303",\n  // ũ = \\~{u}\n  "\\u1E79": "u\\u0303\\u0301",\n  // ṹ = \\~\\\'{u}\n  "\\u016B": "u\\u0304",\n  // ū = \\={u}\n  "\\u1E7B": "u\\u0304\\u0308",\n  // ṻ = \\=\\"{u}\n  "\\u016D": "u\\u0306",\n  // ŭ = \\u{u}\n  "\\u01D4": "u\\u030C",\n  // ǔ = \\v{u}\n  "\\xFB": "u\\u0302",\n  // û = \\^{u}\n  "\\u016F": "u\\u030A",\n  // ů = \\r{u}\n  "\\u0171": "u\\u030B",\n  // ű = \\H{u}\n  "\\u1E7D": "v\\u0303",\n  // ṽ = \\~{v}\n  "\\u1E83": "w\\u0301",\n  // ẃ = \\\'{w}\n  "\\u1E81": "w\\u0300",\n  // ẁ = \\`{w}\n  "\\u1E85": "w\\u0308",\n  // ẅ = \\"{w}\n  "\\u0175": "w\\u0302",\n  // ŵ = \\^{w}\n  "\\u1E87": "w\\u0307",\n  // ẇ = \\.{w}\n  "\\u1E98": "w\\u030A",\n  // ẘ = \\r{w}\n  "\\u1E8D": "x\\u0308",\n  // ẍ = \\"{x}\n  "\\u1E8B": "x\\u0307",\n  // ẋ = \\.{x}\n  "\\xFD": "y\\u0301",\n  // ý = \\\'{y}\n  "\\u1EF3": "y\\u0300",\n  // ỳ = \\`{y}\n  "\\xFF": "y\\u0308",\n  // ÿ = \\"{y}\n  "\\u1EF9": "y\\u0303",\n  // ỹ = \\~{y}\n  "\\u0233": "y\\u0304",\n  // ȳ = \\={y}\n  "\\u0177": "y\\u0302",\n  // ŷ = \\^{y}\n  "\\u1E8F": "y\\u0307",\n  // ẏ = \\.{y}\n  "\\u1E99": "y\\u030A",\n  // ẙ = \\r{y}\n  "\\u017A": "z\\u0301",\n  // ź = \\\'{z}\n  "\\u017E": "z\\u030C",\n  // ž = \\v{z}\n  "\\u1E91": "z\\u0302",\n  // ẑ = \\^{z}\n  "\\u017C": "z\\u0307",\n  // ż = \\.{z}\n  "\\xC1": "A\\u0301",\n  // Á = \\\'{A}\n  "\\xC0": "A\\u0300",\n  // À = \\`{A}\n  "\\xC4": "A\\u0308",\n  // Ä = \\"{A}\n  "\\u01DE": "A\\u0308\\u0304",\n  // Ǟ = \\"\\={A}\n  "\\xC3": "A\\u0303",\n  // Ã = \\~{A}\n  "\\u0100": "A\\u0304",\n  // Ā = \\={A}\n  "\\u0102": "A\\u0306",\n  // Ă = \\u{A}\n  "\\u1EAE": "A\\u0306\\u0301",\n  // Ắ = \\u\\\'{A}\n  "\\u1EB0": "A\\u0306\\u0300",\n  // Ằ = \\u\\`{A}\n  "\\u1EB4": "A\\u0306\\u0303",\n  // Ẵ = \\u\\~{A}\n  "\\u01CD": "A\\u030C",\n  // Ǎ = \\v{A}\n  "\\xC2": "A\\u0302",\n  // Â = \\^{A}\n  "\\u1EA4": "A\\u0302\\u0301",\n  // Ấ = \\^\\\'{A}\n  "\\u1EA6": "A\\u0302\\u0300",\n  // Ầ = \\^\\`{A}\n  "\\u1EAA": "A\\u0302\\u0303",\n  // Ẫ = \\^\\~{A}\n  "\\u0226": "A\\u0307",\n  // Ȧ = \\.{A}\n  "\\u01E0": "A\\u0307\\u0304",\n  // Ǡ = \\.\\={A}\n  "\\xC5": "A\\u030A",\n  // Å = \\r{A}\n  "\\u01FA": "A\\u030A\\u0301",\n  // Ǻ = \\r\\\'{A}\n  "\\u1E02": "B\\u0307",\n  // Ḃ = \\.{B}\n  "\\u0106": "C\\u0301",\n  // Ć = \\\'{C}\n  "\\u010C": "C\\u030C",\n  // Č = \\v{C}\n  "\\u0108": "C\\u0302",\n  // Ĉ = \\^{C}\n  "\\u010A": "C\\u0307",\n  // Ċ = \\.{C}\n  "\\u010E": "D\\u030C",\n  // Ď = \\v{D}\n  "\\u1E0A": "D\\u0307",\n  // Ḋ = \\.{D}\n  "\\xC9": "E\\u0301",\n  // É = \\\'{E}\n  "\\xC8": "E\\u0300",\n  // È = \\`{E}\n  "\\xCB": "E\\u0308",\n  // Ë = \\"{E}\n  "\\u1EBC": "E\\u0303",\n  // Ẽ = \\~{E}\n  "\\u0112": "E\\u0304",\n  // Ē = \\={E}\n  "\\u1E16": "E\\u0304\\u0301",\n  // Ḗ = \\=\\\'{E}\n  "\\u1E14": "E\\u0304\\u0300",\n  // Ḕ = \\=\\`{E}\n  "\\u0114": "E\\u0306",\n  // Ĕ = \\u{E}\n  "\\u011A": "E\\u030C",\n  // Ě = \\v{E}\n  "\\xCA": "E\\u0302",\n  // Ê = \\^{E}\n  "\\u1EBE": "E\\u0302\\u0301",\n  // Ế = \\^\\\'{E}\n  "\\u1EC0": "E\\u0302\\u0300",\n  // Ề = \\^\\`{E}\n  "\\u1EC4": "E\\u0302\\u0303",\n  // Ễ = \\^\\~{E}\n  "\\u0116": "E\\u0307",\n  // Ė = \\.{E}\n  "\\u1E1E": "F\\u0307",\n  // Ḟ = \\.{F}\n  "\\u01F4": "G\\u0301",\n  // Ǵ = \\\'{G}\n  "\\u1E20": "G\\u0304",\n  // Ḡ = \\={G}\n  "\\u011E": "G\\u0306",\n  // Ğ = \\u{G}\n  "\\u01E6": "G\\u030C",\n  // Ǧ = \\v{G}\n  "\\u011C": "G\\u0302",\n  // Ĝ = \\^{G}\n  "\\u0120": "G\\u0307",\n  // Ġ = \\.{G}\n  "\\u1E26": "H\\u0308",\n  // Ḧ = \\"{H}\n  "\\u021E": "H\\u030C",\n  // Ȟ = \\v{H}\n  "\\u0124": "H\\u0302",\n  // Ĥ = \\^{H}\n  "\\u1E22": "H\\u0307",\n  // Ḣ = \\.{H}\n  "\\xCD": "I\\u0301",\n  // Í = \\\'{I}\n  "\\xCC": "I\\u0300",\n  // Ì = \\`{I}\n  "\\xCF": "I\\u0308",\n  // Ï = \\"{I}\n  "\\u1E2E": "I\\u0308\\u0301",\n  // Ḯ = \\"\\\'{I}\n  "\\u0128": "I\\u0303",\n  // Ĩ = \\~{I}\n  "\\u012A": "I\\u0304",\n  // Ī = \\={I}\n  "\\u012C": "I\\u0306",\n  // Ĭ = \\u{I}\n  "\\u01CF": "I\\u030C",\n  // Ǐ = \\v{I}\n  "\\xCE": "I\\u0302",\n  // Î = \\^{I}\n  "\\u0130": "I\\u0307",\n  // İ = \\.{I}\n  "\\u0134": "J\\u0302",\n  // Ĵ = \\^{J}\n  "\\u1E30": "K\\u0301",\n  // Ḱ = \\\'{K}\n  "\\u01E8": "K\\u030C",\n  // Ǩ = \\v{K}\n  "\\u0139": "L\\u0301",\n  // Ĺ = \\\'{L}\n  "\\u013D": "L\\u030C",\n  // Ľ = \\v{L}\n  "\\u1E3E": "M\\u0301",\n  // Ḿ = \\\'{M}\n  "\\u1E40": "M\\u0307",\n  // Ṁ = \\.{M}\n  "\\u0143": "N\\u0301",\n  // Ń = \\\'{N}\n  "\\u01F8": "N\\u0300",\n  // Ǹ = \\`{N}\n  "\\xD1": "N\\u0303",\n  // Ñ = \\~{N}\n  "\\u0147": "N\\u030C",\n  // Ň = \\v{N}\n  "\\u1E44": "N\\u0307",\n  // Ṅ = \\.{N}\n  "\\xD3": "O\\u0301",\n  // Ó = \\\'{O}\n  "\\xD2": "O\\u0300",\n  // Ò = \\`{O}\n  "\\xD6": "O\\u0308",\n  // Ö = \\"{O}\n  "\\u022A": "O\\u0308\\u0304",\n  // Ȫ = \\"\\={O}\n  "\\xD5": "O\\u0303",\n  // Õ = \\~{O}\n  "\\u1E4C": "O\\u0303\\u0301",\n  // Ṍ = \\~\\\'{O}\n  "\\u1E4E": "O\\u0303\\u0308",\n  // Ṏ = \\~\\"{O}\n  "\\u022C": "O\\u0303\\u0304",\n  // Ȭ = \\~\\={O}\n  "\\u014C": "O\\u0304",\n  // Ō = \\={O}\n  "\\u1E52": "O\\u0304\\u0301",\n  // Ṓ = \\=\\\'{O}\n  "\\u1E50": "O\\u0304\\u0300",\n  // Ṑ = \\=\\`{O}\n  "\\u014E": "O\\u0306",\n  // Ŏ = \\u{O}\n  "\\u01D1": "O\\u030C",\n  // Ǒ = \\v{O}\n  "\\xD4": "O\\u0302",\n  // Ô = \\^{O}\n  "\\u1ED0": "O\\u0302\\u0301",\n  // Ố = \\^\\\'{O}\n  "\\u1ED2": "O\\u0302\\u0300",\n  // Ồ = \\^\\`{O}\n  "\\u1ED6": "O\\u0302\\u0303",\n  // Ỗ = \\^\\~{O}\n  "\\u022E": "O\\u0307",\n  // Ȯ = \\.{O}\n  "\\u0230": "O\\u0307\\u0304",\n  // Ȱ = \\.\\={O}\n  "\\u0150": "O\\u030B",\n  // Ő = \\H{O}\n  "\\u1E54": "P\\u0301",\n  // Ṕ = \\\'{P}\n  "\\u1E56": "P\\u0307",\n  // Ṗ = \\.{P}\n  "\\u0154": "R\\u0301",\n  // Ŕ = \\\'{R}\n  "\\u0158": "R\\u030C",\n  // Ř = \\v{R}\n  "\\u1E58": "R\\u0307",\n  // Ṙ = \\.{R}\n  "\\u015A": "S\\u0301",\n  // Ś = \\\'{S}\n  "\\u1E64": "S\\u0301\\u0307",\n  // Ṥ = \\\'\\.{S}\n  "\\u0160": "S\\u030C",\n  // Š = \\v{S}\n  "\\u1E66": "S\\u030C\\u0307",\n  // Ṧ = \\v\\.{S}\n  "\\u015C": "S\\u0302",\n  // Ŝ = \\^{S}\n  "\\u1E60": "S\\u0307",\n  // Ṡ = \\.{S}\n  "\\u0164": "T\\u030C",\n  // Ť = \\v{T}\n  "\\u1E6A": "T\\u0307",\n  // Ṫ = \\.{T}\n  "\\xDA": "U\\u0301",\n  // Ú = \\\'{U}\n  "\\xD9": "U\\u0300",\n  // Ù = \\`{U}\n  "\\xDC": "U\\u0308",\n  // Ü = \\"{U}\n  "\\u01D7": "U\\u0308\\u0301",\n  // Ǘ = \\"\\\'{U}\n  "\\u01DB": "U\\u0308\\u0300",\n  // Ǜ = \\"\\`{U}\n  "\\u01D5": "U\\u0308\\u0304",\n  // Ǖ = \\"\\={U}\n  "\\u01D9": "U\\u0308\\u030C",\n  // Ǚ = \\"\\v{U}\n  "\\u0168": "U\\u0303",\n  // Ũ = \\~{U}\n  "\\u1E78": "U\\u0303\\u0301",\n  // Ṹ = \\~\\\'{U}\n  "\\u016A": "U\\u0304",\n  // Ū = \\={U}\n  "\\u1E7A": "U\\u0304\\u0308",\n  // Ṻ = \\=\\"{U}\n  "\\u016C": "U\\u0306",\n  // Ŭ = \\u{U}\n  "\\u01D3": "U\\u030C",\n  // Ǔ = \\v{U}\n  "\\xDB": "U\\u0302",\n  // Û = \\^{U}\n  "\\u016E": "U\\u030A",\n  // Ů = \\r{U}\n  "\\u0170": "U\\u030B",\n  // Ű = \\H{U}\n  "\\u1E7C": "V\\u0303",\n  // Ṽ = \\~{V}\n  "\\u1E82": "W\\u0301",\n  // Ẃ = \\\'{W}\n  "\\u1E80": "W\\u0300",\n  // Ẁ = \\`{W}\n  "\\u1E84": "W\\u0308",\n  // Ẅ = \\"{W}\n  "\\u0174": "W\\u0302",\n  // Ŵ = \\^{W}\n  "\\u1E86": "W\\u0307",\n  // Ẇ = \\.{W}\n  "\\u1E8C": "X\\u0308",\n  // Ẍ = \\"{X}\n  "\\u1E8A": "X\\u0307",\n  // Ẋ = \\.{X}\n  "\\xDD": "Y\\u0301",\n  // Ý = \\\'{Y}\n  "\\u1EF2": "Y\\u0300",\n  // Ỳ = \\`{Y}\n  "\\u0178": "Y\\u0308",\n  // Ÿ = \\"{Y}\n  "\\u1EF8": "Y\\u0303",\n  // Ỹ = \\~{Y}\n  "\\u0232": "Y\\u0304",\n  // Ȳ = \\={Y}\n  "\\u0176": "Y\\u0302",\n  // Ŷ = \\^{Y}\n  "\\u1E8E": "Y\\u0307",\n  // Ẏ = \\.{Y}\n  "\\u0179": "Z\\u0301",\n  // Ź = \\\'{Z}\n  "\\u017D": "Z\\u030C",\n  // Ž = \\v{Z}\n  "\\u1E90": "Z\\u0302",\n  // Ẑ = \\^{Z}\n  "\\u017B": "Z\\u0307",\n  // Ż = \\.{Z}\n  "\\u03AC": "\\u03B1\\u0301",\n  // ά = \\\'{α}\n  "\\u1F70": "\\u03B1\\u0300",\n  // ὰ = \\`{α}\n  "\\u1FB1": "\\u03B1\\u0304",\n  // ᾱ = \\={α}\n  "\\u1FB0": "\\u03B1\\u0306",\n  // ᾰ = \\u{α}\n  "\\u03AD": "\\u03B5\\u0301",\n  // έ = \\\'{ε}\n  "\\u1F72": "\\u03B5\\u0300",\n  // ὲ = \\`{ε}\n  "\\u03AE": "\\u03B7\\u0301",\n  // ή = \\\'{η}\n  "\\u1F74": "\\u03B7\\u0300",\n  // ὴ = \\`{η}\n  "\\u03AF": "\\u03B9\\u0301",\n  // ί = \\\'{ι}\n  "\\u1F76": "\\u03B9\\u0300",\n  // ὶ = \\`{ι}\n  "\\u03CA": "\\u03B9\\u0308",\n  // ϊ = \\"{ι}\n  "\\u0390": "\\u03B9\\u0308\\u0301",\n  // ΐ = \\"\\\'{ι}\n  "\\u1FD2": "\\u03B9\\u0308\\u0300",\n  // ῒ = \\"\\`{ι}\n  "\\u1FD1": "\\u03B9\\u0304",\n  // ῑ = \\={ι}\n  "\\u1FD0": "\\u03B9\\u0306",\n  // ῐ = \\u{ι}\n  "\\u03CC": "\\u03BF\\u0301",\n  // ό = \\\'{ο}\n  "\\u1F78": "\\u03BF\\u0300",\n  // ὸ = \\`{ο}\n  "\\u03CD": "\\u03C5\\u0301",\n  // ύ = \\\'{υ}\n  "\\u1F7A": "\\u03C5\\u0300",\n  // ὺ = \\`{υ}\n  "\\u03CB": "\\u03C5\\u0308",\n  // ϋ = \\"{υ}\n  "\\u03B0": "\\u03C5\\u0308\\u0301",\n  // ΰ = \\"\\\'{υ}\n  "\\u1FE2": "\\u03C5\\u0308\\u0300",\n  // ῢ = \\"\\`{υ}\n  "\\u1FE1": "\\u03C5\\u0304",\n  // ῡ = \\={υ}\n  "\\u1FE0": "\\u03C5\\u0306",\n  // ῠ = \\u{υ}\n  "\\u03CE": "\\u03C9\\u0301",\n  // ώ = \\\'{ω}\n  "\\u1F7C": "\\u03C9\\u0300",\n  // ὼ = \\`{ω}\n  "\\u038E": "\\u03A5\\u0301",\n  // Ύ = \\\'{Υ}\n  "\\u1FEA": "\\u03A5\\u0300",\n  // Ὺ = \\`{Υ}\n  "\\u03AB": "\\u03A5\\u0308",\n  // Ϋ = \\"{Υ}\n  "\\u1FE9": "\\u03A5\\u0304",\n  // Ῡ = \\={Υ}\n  "\\u1FE8": "\\u03A5\\u0306",\n  // Ῠ = \\u{Υ}\n  "\\u038F": "\\u03A9\\u0301",\n  // Ώ = \\\'{Ω}\n  "\\u1FFA": "\\u03A9\\u0300" // Ὼ = \\`{Ω}\n\n});\n// CONCATENATED MODULE: ./src/Parser.js\n/* eslint no-constant-condition:0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn\'t context-free, standard parsers don\'t work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called "mode" indicating the mode that\n * the parser is currently in. Currently it has to be one of "math" or\n * "text", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nvar Parser_Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = "math"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander_MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.expect = function expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.nextToken.text !== text) {\n      throw new src_ParseError("Expected \'" + text + "\', got \'" + this.nextToken.text + "\'", this.nextToken);\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Considers the current look ahead token as consumed,\n   * and fetches the one after that as the new look ahead.\n   */\n  ;\n\n  _proto.consume = function consume() {\n    this.nextToken = this.gullet.expandNextToken();\n  }\n  /**\n   * Switches between "text" and "math" modes.\n   */\n  ;\n\n  _proto.switchMode = function switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n  ;\n\n  _proto.parse = function parse() {\n    // Create a group namespace for the math expression.\n    // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n    this.gullet.beginGroup(); // Use old \\color behavior (same as LaTeX\'s \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn\'t\n    // pollute settings.macros.\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set("\\\\color", "\\\\textcolor");\n    } // Try to parse the input\n\n\n    this.consume();\n    var parse = this.parseExpression(false); // If we succeeded, make sure there\'s an EOF at the end\n\n    this.expect("EOF", false); // End the group namespace for the expression\n\n    this.gullet.endGroup();\n    return parse;\n  };\n\n  _proto.parseExpression = function parseExpression(breakOnInfix, breakOnTokenText) {\n    var body = []; // Keep adding atoms to the body until we can\'t parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === "math") {\n        this.consumeSpaces();\n      }\n\n      var lex = this.nextToken;\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) {\n        break;\n      }\n\n      var atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === "text") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there\'s more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n  ;\n\n  _proto.handleInfixNodes = function handleInfixNodes(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n      var node = checkNodeType(body[i], "infix");\n\n      if (node) {\n        if (overIndex !== -1) {\n          throw new src_ParseError("only one infix operator per group", node.token);\n        }\n\n        overIndex = i;\n        funcName = node.replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      var numerNode;\n      var denomNode;\n      var numerBody = body.slice(0, overIndex);\n      var denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === "ordgroup") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: "ordgroup",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === "ordgroup") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: "ordgroup",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      var _node;\n\n      if (funcName === "\\\\\\\\abovefrac") {\n        _node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        _node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [_node];\n    } else {\n      return body;\n    }\n  } // The greediness of a superscript or subscript\n  ;\n\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n  _proto.handleSupSubscript = function handleSupSubscript(name) {\n    var symbolToken = this.nextToken;\n    var symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    var group = this.parseGroup(name, false, Parser.SUPSUB_GREEDINESS);\n\n    if (!group) {\n      throw new src_ParseError("Expected group after \'" + symbol + "\'", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n  ;\n\n  _proto.handleUnsupportedCmd = function handleUnsupportedCmd() {\n    var text = this.nextToken.text;\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: "textord",\n        mode: "text",\n        text: text[i]\n      });\n    }\n\n    var textNode = {\n      type: "text",\n      mode: this.mode,\n      body: textordArray\n    };\n    var colorNode = {\n      type: "color",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    this.consume();\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n  ;\n\n  _proto.parseAtom = function parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseGroup("atom", false, null, breakOnTokenText); // In text mode, we don\'t have superscripts or subscripts\n\n    if (this.mode === "text") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    var superscript;\n    var subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      var lex = this.nextToken;\n\n      if (lex.text === "\\\\limits" || lex.text === "\\\\nolimits") {\n        // We got a limit control\n        var opNode = checkNodeType(base, "op");\n\n        if (opNode) {\n          var limits = lex.text === "\\\\limits";\n          opNode.limits = limits;\n          opNode.alwaysHandleSupSub = true;\n        } else {\n          throw new src_ParseError("Limit controls must follow a math operator", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === "^") {\n        // We got a superscript start\n        if (superscript) {\n          throw new src_ParseError("Double superscript", lex);\n        }\n\n        superscript = this.handleSupSubscript("superscript");\n      } else if (lex.text === "_") {\n        // We got a subscript start\n        if (subscript) {\n          throw new src_ParseError("Double subscript", lex);\n        }\n\n        subscript = this.handleSupSubscript("subscript");\n      } else if (lex.text === "\'") {\n        // We got a prime\n        if (superscript) {\n          throw new src_ParseError("Double superscript", lex);\n        }\n\n        var prime = {\n          type: "textord",\n          mode: this.mode,\n          text: "\\\\prime"\n        }; // Many primes can be grouped together, so we handle this here\n\n        var primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that\'s not a prime\n\n        while (this.nextToken.text === "\'") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there\'s a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.nextToken.text === "^") {\n          primes.push(this.handleSupSubscript("superscript"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: "ordgroup",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn\'t ^, _, or \', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: "supsub",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n  ;\n\n  _proto.parseFunction = function parseFunction(breakOnTokenText, name, // For error reporting.\n  greediness) {\n    var token = this.nextToken;\n    var func = token.text;\n    var funcData = src_functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    if (greediness != null && funcData.greediness <= greediness) {\n      throw new src_ParseError("Got function \'" + func + "\' with no arguments" + (name ? " as " + name : ""), token);\n    } else if (this.mode === "text" && !funcData.allowedInText) {\n      throw new src_ParseError("Can\'t use function \'" + func + "\' in text mode", token);\n    } else if (this.mode === "math" && funcData.allowedInMath === false) {\n      throw new src_ParseError("Can\'t use function \'" + func + "\' in math mode", token);\n    } // hyperref package sets the catcode of % as an active character\n\n\n    if (funcData.argTypes && funcData.argTypes[0] === "url") {\n      this.gullet.lexer.setCatcode("%", 13);\n    } // Consume the command token after possibly switching to the\n    // mode specified by the function (for instant mode switching),\n    // and then immediately switch back.\n\n\n    if (funcData.consumeMode) {\n      var oldMode = this.mode;\n      this.switchMode(funcData.consumeMode);\n      this.consume();\n      this.switchMode(oldMode);\n    } else {\n      this.consume();\n    }\n\n    var _this$parseArguments = this.parseArguments(func, funcData),\n        args = _this$parseArguments.args,\n        optArgs = _this$parseArguments.optArgs;\n\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n  ;\n\n  _proto.callFunction = function callFunction(name, args, optArgs, token, breakOnTokenText) {\n    var context = {\n      funcName: name,\n      parser: this,\n      token: token,\n      breakOnTokenText: breakOnTokenText\n    };\n    var func = src_functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new src_ParseError("No function handler for " + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(func, // Should look like "\\name" or "\\begin{name}".\n  funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    var baseGreediness = funcData.greediness;\n    var args = [];\n    var optArgs = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n      var argType = funcData.argTypes && funcData.argTypes[i];\n      var isOptional = i < funcData.numOptionalArgs; // Ignore spaces between arguments.  As the TeXbook says:\n      // "After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments."\n\n      if (i > 0 && !isOptional) {\n        this.consumeSpaces();\n      } // Also consume leading spaces in math mode, as parseSymbol\n      // won\'t know what to do with them.  This can only happen with\n      // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n      // In LaTeX, the \\foo\'s get treated as (blank) arguments).\n      // In KaTeX, for now, both spaces will get consumed.\n      // TODO(edemaine)\n\n\n      if (i === 0 && !isOptional && this.mode === "math") {\n        this.consumeSpaces();\n      }\n\n      var nextToken = this.nextToken;\n      var arg = this.parseGroupOfType("argument to \'" + func + "\'", argType, isOptional, baseGreediness);\n\n      if (!arg) {\n        if (isOptional) {\n          optArgs.push(null);\n          continue;\n        }\n\n        throw new src_ParseError("Expected group after \'" + func + "\'", nextToken);\n      }\n\n      (isOptional ? optArgs : args).push(arg);\n    }\n\n    return {\n      args: args,\n      optArgs: optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n  ;\n\n  _proto.parseGroupOfType = function parseGroupOfType(name, type, optional, greediness) {\n    switch (type) {\n      case "color":\n        return this.parseColorGroup(optional);\n\n      case "size":\n        return this.parseSizeGroup(optional);\n\n      case "url":\n        return this.parseUrlGroup(optional);\n\n      case "math":\n      case "text":\n        return this.parseGroup(name, optional, greediness, undefined, type);\n\n      case "raw":\n        {\n          if (optional && this.nextToken.text === "{") {\n            return null;\n          }\n\n          var token = this.parseStringGroup("raw", optional, true);\n\n          if (token) {\n            return {\n              type: "raw",\n              mode: "text",\n              string: token.text\n            };\n          } else {\n            throw new src_ParseError("Expected raw group", this.nextToken);\n          }\n        }\n\n      case "original":\n      case null:\n      case undefined:\n        return this.parseGroup(name, optional, greediness);\n\n      default:\n        throw new src_ParseError("Unknown group type as " + name, this.nextToken);\n    }\n  };\n\n  _proto.consumeSpaces = function consumeSpaces() {\n    while (this.nextToken.text === " ") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n  ;\n\n  _proto.parseStringGroup = function parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional, raw) {\n    var groupBegin = optional ? "[" : "{";\n    var groupEnd = optional ? "]" : "}";\n    var nextToken = this.nextToken;\n\n    if (nextToken.text !== groupBegin) {\n      if (optional) {\n        return null;\n      } else if (raw && nextToken.text !== "EOF" && /[^{}[\\]]/.test(nextToken.text)) {\n        // allow a single character in raw string group\n        this.gullet.lexer.setCatcode("%", 14); // reset the catcode of %\n\n        this.consume();\n        return nextToken;\n      }\n    }\n\n    var outerMode = this.mode;\n    this.mode = "text";\n    this.expect(groupBegin);\n    var str = "";\n    var firstToken = this.nextToken;\n    var nested = 0; // allow nested braces in raw string group\n\n    var lastToken = firstToken;\n\n    while (raw && nested > 0 || this.nextToken.text !== groupEnd) {\n      switch (this.nextToken.text) {\n        case "EOF":\n          throw new src_ParseError("Unexpected end of input in " + modeName, firstToken.range(lastToken, str));\n\n        case groupBegin:\n          nested++;\n          break;\n\n        case groupEnd:\n          nested--;\n          break;\n      }\n\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    this.mode = outerMode;\n    this.gullet.lexer.setCatcode("%", 14); // reset the catcode of %\n\n    this.expect(groupEnd);\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n  ;\n\n  _proto.parseRegexGroup = function parseRegexGroup(regex, modeName) {\n    var outerMode = this.mode;\n    this.mode = "text";\n    var firstToken = this.nextToken;\n    var lastToken = firstToken;\n    var str = "";\n\n    while (this.nextToken.text !== "EOF" && regex.test(str + this.nextToken.text)) {\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === "") {\n      throw new src_ParseError("Invalid " + modeName + ": \'" + firstToken.text + "\'", firstToken);\n    }\n\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n  ;\n\n  _proto.parseColorGroup = function parseColorGroup(optional) {\n    var res = this.parseStringGroup("color", optional);\n\n    if (!res) {\n      return null;\n    }\n\n    var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError("Invalid color: \'" + res.text + "\'", res);\n    }\n\n    var color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading "#".\n      // This follows the xcolor package\'s HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = "#" + color;\n    }\n\n    return {\n      type: "color-token",\n      mode: this.mode,\n      color: color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n  ;\n\n  _proto.parseSizeGroup = function parseSizeGroup(optional) {\n    var res;\n    var isBlank = false;\n\n    if (!optional && this.nextToken.text !== "{") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, "size");\n    } else {\n      res = this.parseStringGroup("size", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we\'ve tested for what is !optional, this block won\'t\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = "0pt"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError("Invalid size: \'" + res.text + "\'", res);\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new src_ParseError("Invalid unit: \'" + data.unit + "\'", res);\n    }\n\n    return {\n      type: "size",\n      mode: this.mode,\n      value: data,\n      isBlank: isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols.\n   */\n  ;\n\n  _proto.parseUrlGroup = function parseUrlGroup(optional) {\n    var res = this.parseStringGroup("url", optional, true); // get raw string\n\n    if (!res) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn\'t\n    // generate valid links in such cases; we interpret this as\n    // "undefined" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    var url = res.text.replace(/\\\\([#$%&~_^{}])/g, \'$1\');\n    var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n    protocol = protocol != null ? protocol[1] : "_relative";\n    var allowed = this.settings.allowedProtocols;\n\n    if (!utils.contains(allowed, "*") && !utils.contains(allowed, protocol)) {\n      throw new src_ParseError("Forbidden protocol \'" + protocol + "\'", res);\n    }\n\n    return {\n      type: "url",\n      mode: this.mode,\n      url: url\n    };\n  }\n  /**\n   * If `optional` is false or absent, this parses an ordinary group,\n   * which is either a single nucleus (like "x") or an expression\n   * in braces (like "{x+y}") or an implicit group, a group that starts\n   * at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   * If `optional` is true, it parses either a bracket-delimited expression\n   * (like "[x+y]") or returns null to indicate the absence of a\n   * bracket-enclosed group.\n   * If `mode` is present, switches to that mode while parsing the group,\n   * and switches back after.\n   */\n  ;\n\n  _proto.parseGroup = function parseGroup(name, // For error reporting.\n  optional, greediness, breakOnTokenText, mode) {\n    var outerMode = this.mode;\n    var firstToken = this.nextToken;\n    var text = firstToken.text; // Switch to specified mode\n\n    if (mode) {\n      this.switchMode(mode);\n    }\n\n    var groupEnd;\n    var result; // Try to parse an open brace or \\begingroup\n\n    if (optional ? text === "[" : text === "{" || text === "\\\\begingroup") {\n      groupEnd = Parser.endOfGroup[text]; // Start a new group namespace\n\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      this.consume();\n      var expression = this.parseExpression(false, groupEnd);\n      var lastToken = this.nextToken; // End group namespace before consuming symbol after close brace\n\n      this.gullet.endGroup();\n      result = {\n        type: "ordgroup",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn\'t affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === "\\\\begingroup" || undefined\n      };\n    } else if (optional) {\n      // Return nothing for an optional group\n      result = null;\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name, greediness) || this.parseSymbol();\n\n      if (result == null && text[0] === "\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new src_ParseError("Undefined control sequence: " + text, firstToken);\n        }\n\n        result = this.handleUnsupportedCmd();\n      }\n    } // Switch mode back\n\n\n    if (mode) {\n      this.switchMode(outerMode);\n    } // Make sure we got a close brace\n\n\n    if (groupEnd) {\n      this.expect(groupEnd);\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like "--", "---", "``" and "\'\'".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n  ;\n\n  _proto.formLigatures = function formLigatures(group) {\n    var n = group.length - 1;\n\n    for (var i = 0; i < n; ++i) {\n      var a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      var v = a.text;\n\n      if (v === "-" && group[i + 1].text === "-") {\n        if (i + 1 < n && group[i + 2].text === "-") {\n          group.splice(i, 3, {\n            type: "textord",\n            mode: "text",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: "---"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: "textord",\n            mode: "text",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: "--"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === "\'" || v === "`") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: "textord",\n          mode: "text",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like verbatim\n   */\n  ;\n\n  _proto.parseSymbol = function parseSymbol() {\n    var nucleus = this.nextToken;\n    var text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      var arg = text.slice(5);\n      var star = arg.charAt(0) === "*";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer\'s tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new src_ParseError("\\\\verb assertion failed --\\n                    please report what input caused this bug");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: "verb",\n        mode: "text",\n        body: arg,\n        star: star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === "math") {\n        this.settings.reportNonstrict("unicodeTextInMathMode", "Accented Unicode text character \\"" + text[0] + "\\" used in " + "math mode", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    var match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === \'i\') {\n        text = "\\u0131"; // dotless i, in math and text mode\n      } else if (text === \'j\') {\n        text = "\\u0237"; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    var symbol;\n\n    if (src_symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === \'math\' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict("unicodeTextInMathMode", "Latin-1/Unicode text character \\"" + text[0] + "\\" used in " + "math mode", nucleus);\n      }\n\n      var group = src_symbols[this.mode][text].group;\n      var loc = SourceLocation.range(nucleus);\n      var s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        var family = group;\n        s = {\n          type: "atom",\n          mode: this.mode,\n          family: family,\n          loc: loc,\n          text: text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc: loc,\n          text: text\n        };\n      }\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict("unknownSymbol", "Unrecognized Unicode character \\"" + text[0] + "\\"" + (" (" + text.charCodeAt(0) + ")"), nucleus);\n        } else if (this.mode === "math") {\n          this.settings.reportNonstrict("unicodeTextInMathMode", "Unicode text character \\"" + text[0] + "\\" used in math mode", nucleus);\n        }\n      }\n\n      symbol = {\n        type: "textord",\n        mode: this.mode,\n        loc: SourceLocation.range(nucleus),\n        text: text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (var i = 0; i < match[0].length; i++) {\n        var accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new src_ParseError("Unknown accent \' " + accent + "\'", nucleus);\n        }\n\n        var command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new src_ParseError("Accent " + accent + " unsupported in " + this.mode + " mode", nucleus);\n        }\n\n        symbol = {\n          type: "accent",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          base: symbol\n        };\n      }\n    }\n\n    return symbol;\n  };\n\n  return Parser;\n}();\n\nParser_Parser.endOfExpression = ["}", "\\\\endgroup", "\\\\end", "\\\\right", "&"];\nParser_Parser.endOfGroup = {\n  "[": "]",\n  "{": "}",\n  "\\\\begingroup": "\\\\endgroup"\n  /**\n   * Parses an "expression", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n\n};\nParser_Parser.SUPSUB_GREEDINESS = 1;\n\n// CONCATENATED MODULE: ./src/parseTree.js\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree_parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === \'string\' || toParse instanceof String)) {\n    throw new TypeError(\'KaTeX can only parse string typed expression\');\n  }\n\n  var parser = new Parser_Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious "Duplicate \\tag" errors\n\n  delete parser.gullet.macros.current["\\\\df@tag"];\n  var tree = parser.parse(); // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get("\\\\df@tag")) {\n    if (!settings.displayMode) {\n      throw new src_ParseError("\\\\tag works only in display equations");\n    }\n\n    parser.gullet.feed("\\\\df@tag");\n    tree = [{\n      type: "tag",\n      mode: "text",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* harmony default export */ var src_parseTree = (parseTree_parseTree);\n// CONCATENATED MODULE: ./katex.js\n/* eslint no-console:0 */\n\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar katex_render = function render(expression, baseNode, options) {\n  baseNode.textContent = "";\n  var node = katex_renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX\'s styles don\'t work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== "undefined") {\n  if (document.compatMode !== "CSS1Compat") {\n    typeof console !== "undefined" && console.warn("Warning: KaTeX doesn\'t work in quirks mode. Make sure your " + "website has a suitable doctype.");\n\n    katex_render = function render() {\n      throw new src_ParseError("KaTeX doesn\'t work in quirks mode.");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nvar renderToString = function renderToString(expression, options) {\n  var markup = katex_renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nvar katex_generateParseTree = function generateParseTree(expression, options) {\n  var settings = new src_Settings(options);\n  return src_parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nvar katex_renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof src_ParseError)) {\n    throw error;\n  }\n\n  var node = buildCommon.makeSpan(["katex-error"], [new domTree_SymbolNode(expression)]);\n  node.setAttribute("title", error.toString());\n  node.setAttribute("style", "color:" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nvar katex_renderToDomTree = function renderToDomTree(expression, options) {\n  var settings = new src_Settings(options);\n\n  try {\n    var tree = src_parseTree(expression, settings);\n    return buildTree_buildTree(tree, expression, settings);\n  } catch (error) {\n    return katex_renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nvar katex_renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  var settings = new src_Settings(options);\n\n  try {\n    var tree = src_parseTree(expression, settings);\n    return buildTree_buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return katex_renderError(error, expression, settings);\n  }\n};\n\n/* harmony default export */ var katex_0 = ({\n  /**\n   * Current KaTeX version\n   */\n  version: "0.10.1",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render: katex_render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString: renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError: src_ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX\'s internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: katex_generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: katex_renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: katex_renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span: domTree_Span,\n    Anchor: domTree_Anchor,\n    SymbolNode: domTree_SymbolNode,\n    SvgNode: SvgNode,\n    PathNode: domTree_PathNode,\n    LineNode: LineNode\n  }\n});\n// CONCATENATED MODULE: ./katex.webpack.js\n/**\n * This is the webpack entry point for KaTeX. As ECMAScript, flow[1] and jest[2]\n * doesn\'t support CSS modules natively, a separate entry point is used and\n * it is not flowtyped.\n *\n * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef\n * [2] https://facebook.github.io/jest/docs/en/webpack.html\n */\n\n\n/* harmony default export */ var katex_webpack = __webpack_exports__["default"] = (katex_0);\n\n/***/ })\n/******/ ])["default"];\n});\n\n//# sourceURL=webpack:///./node_modules/katex/dist/katex.js?')},function(module,exports){eval("/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isArray.js?")},function(module,exports,__webpack_require__){eval("var _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar _has = /*#__PURE__*/__webpack_require__(110);\n\nvar _isArguments = /*#__PURE__*/__webpack_require__(339);\n\n// cover IE < 9 keys issues\n\n\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nmodule.exports = keys;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/keys.js?")},function(module,exports,__webpack_require__){eval('var _arity = /*#__PURE__*/__webpack_require__(109);\n\nvar _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _curryN = /*#__PURE__*/__webpack_require__(342);\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn\'t be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * "gaps", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/curryN.js?')},function(module,exports){eval('// This object will be used as the prototype for Nodes when creating a\n// DOM-Level-1-compliant structure.\nvar NodePrototype = module.exports = {\n\tget firstChild() {\n\t\tvar children = this.children;\n\t\treturn children && children[0] || null;\n\t},\n\tget lastChild() {\n\t\tvar children = this.children;\n\t\treturn children && children[children.length - 1] || null;\n\t},\n\tget nodeType() {\n\t\treturn nodeTypes[this.type] || nodeTypes.element;\n\t}\n};\n\nvar domLvl1 = {\n\ttagName: "name",\n\tchildNodes: "children",\n\tparentNode: "parent",\n\tpreviousSibling: "prev",\n\tnextSibling: "next",\n\tnodeValue: "data"\n};\n\nvar nodeTypes = {\n\telement: 1,\n\ttext: 3,\n\tcdata: 4,\n\tcomment: 8\n};\n\nObject.keys(domLvl1).forEach(function(key) {\n\tvar shorthand = domLvl1[key];\n\tObject.defineProperty(NodePrototype, key, {\n\t\tget: function() {\n\t\t\treturn this[shorthand] || null;\n\t\t},\n\t\tset: function(val) {\n\t\t\tthis[shorthand] = val;\n\t\t\treturn val;\n\t\t}\n\t});\n});\n\n\n//# sourceURL=webpack:///./node_modules/domhandler/lib/node.js?')},function(module,exports,__webpack_require__){"use strict";eval("\nvar ShouldProcessNodeDefinitions = __webpack_require__(357);\nvar ProcessNodeDefinitions = __webpack_require__(272);\n\nfunction ProcessingInstructions() {\n  var processNodeDefinitions = new ProcessNodeDefinitions();\n\n  return {\n    defaultProcessingInstructions: [{\n      shouldProcessNode: ShouldProcessNodeDefinitions.shouldProcessEveryNode,\n      processNode: processNodeDefinitions.processDefaultNode,\n    },],\n  };\n};\n\nmodule.exports = ProcessingInstructions;\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/processing-instructions.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nvar utils = __webpack_require__(273);\n\n// eslint-disable-next-line max-len\n// https://github.com/facebook/react/blob/15.0-stable/src/renderers/dom/shared/ReactDOMComponent.js#L457\nvar voidElementTags = [\n  'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param',\n  'source', 'track', 'wbr', 'menuitem', 'textarea',\n];\n\nfunction ProcessNodeDefinitions() {\n  function processDefaultNode(node, children, index) {\n    if (node.type === 'text') {\n      return node.data;\n    } else if (node.type === 'comment') {\n      // FIXME: The following doesn't work as the generated HTML results in\n      // \"&lt;!--  This is a comment  --&gt;\"\n      // return '\x3c!-- ' + node.data + ' --\x3e';\n      return false;\n    }\n\n    if (voidElementTags.indexOf(node.name) > -1) {\n      return utils.createElement(node, index);\n    } else {\n      return utils.createElement(node, index, node.data, children);\n    }\n  }\n\n  return {\n    processDefaultNode: processDefaultNode,\n  };\n}\n\nmodule.exports = ProcessNodeDefinitions;\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/process-node-definitions.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nvar camelCase = __webpack_require__(358);\nvar toPairs = __webpack_require__(359);\nvar reduce = __webpack_require__(360);\nvar React = __webpack_require__(1);\nvar camelCaseAttrMap = __webpack_require__(362);\n\nfunction createStyleJsonFromString(styleString) {\n  styleString = styleString || '';\n  var styles = styleString.split(/;(?!base64)/);\n  var singleStyle, key, value, jsonStyles = {};\n  for (var i = 0; i < styles.length; ++i) {\n    singleStyle = styles[i].split(':');\n    if (singleStyle.length > 2) {\n      singleStyle[1] = singleStyle.slice(1).join(':');\n    }\n\n    key = singleStyle[0];\n    value = singleStyle[1];\n    if (typeof value === 'string'){\n      value = value.trim();\n    }\n\n    if (key != null && value != null && key.length > 0 && value.length > 0) {\n      jsonStyles[camelCase(key)] = value;\n    }\n  }\n  return jsonStyles;\n}\n\nfunction createElement(node, index, data, children) {\n  var elementProps = {\n    key: index,\n  };\n  if (node.attribs) {\n    elementProps = reduce(function(result, keyAndValue) {\n      var key = keyAndValue[0];\n      var value = keyAndValue[1];\n      key = camelCaseAttrMap[key.replace(/[-:]/, '')] || key;\n      if (key === 'style') {\n        value = createStyleJsonFromString(value);\n      } else if (key === 'class') {\n        key = 'className';\n      } else if (key === 'for') {\n        key = 'htmlFor';\n      }\n      if (typeof value === 'string') {\n        value = value;\n      }\n      result[key] = value || key;\n      return result;\n    }, elementProps, toPairs(node.attribs));\n  }\n\n  children = children || [];\n  var allChildren = data != null ? [data,].concat(children) : children;\n  return React.createElement.apply(\n    null, [node.name, elementProps,].concat(allChildren)\n  );\n}\n\nmodule.exports = {\n  createElement: createElement,\n};\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/utils.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nfunction alwaysValid() {\n  return true;\n}\n\nmodule.exports = {\n  alwaysValid: alwaysValid,\n};\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/is-valid-node-definitions.js?")},,function(module,exports,__webpack_require__){eval("// optional / simple context binding\nvar aFunction = __webpack_require__(370);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_ctx.js?")},function(module,exports,__webpack_require__){eval("module.exports = !__webpack_require__(82) && !__webpack_require__(92)(function () {\n  return Object.defineProperty(__webpack_require__(278)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js?")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(86);\nvar document = __webpack_require__(78).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_dom-create.js?")},function(module,exports,__webpack_require__){eval("var has = __webpack_require__(83);\nvar toIObject = __webpack_require__(87);\nvar arrayIndexOf = __webpack_require__(372)(false);\nvar IE_PROTO = __webpack_require__(115)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js?")},function(module,exports,__webpack_require__){eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(281);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iobject.js?")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_cof.js?")},function(module,exports,__webpack_require__){eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(113);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-object.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/objectWithoutProperties.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(98);\nvar $export = __webpack_require__(84);\nvar redefine = __webpack_require__(285);\nvar hide = __webpack_require__(85);\nvar Iterators = __webpack_require__(120);\nvar $iterCreate = __webpack_require__(379);\nvar setToStringTag = __webpack_require__(122);\nvar getPrototypeOf = __webpack_require__(382);\nvar ITERATOR = __webpack_require__(88)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-define.js?")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(85);\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_redefine.js?")},function(module,exports,__webpack_require__){eval("// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(279);\nvar hiddenKeys = __webpack_require__(117).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gopn.js?")},function(module,exports,__webpack_require__){eval("var pIE = __webpack_require__(100);\nvar createDesc = __webpack_require__(96);\nvar toIObject = __webpack_require__(87);\nvar toPrimitive = __webpack_require__(112);\nvar has = __webpack_require__(83);\nvar IE8_DOM_DEFINE = __webpack_require__(277);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(82) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gopd.js?")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(407), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/define-property.js?')},function(module,exports){eval("module.exports = function(arr, obj){\n  if (arr.indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n//# sourceURL=webpack:///./node_modules/component-indexof/index.js?")},,,function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /\x3c!--[\\s\\S]*?--\x3e/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^\x3c!--[\\s\\S]*?--\x3e|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else {}\n})(this || (typeof window !== 'undefined' ? window : global));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))\n\n//# sourceURL=webpack:///./node_modules/marked/lib/marked.js?")},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n      return Decimal;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else {}\r\n})(this);\r\n\n\n//# sourceURL=webpack:///./node_modules/decimal.js/decimal.js?")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";eval("\nvar find = __webpack_require__(325);\nvar reject = __webpack_require__(329);\nvar addIndex = __webpack_require__(340);\nvar map = __webpack_require__(343);\nvar HtmlParser = __webpack_require__(346);\nvar DomHandler = __webpack_require__(354);\nvar ProcessingInstructions = __webpack_require__(271);\nvar IsValidNodeDefinitions = __webpack_require__(274);\nvar utils = __webpack_require__(273);\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    var handler = new DomHandler();\n    var parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  };\n\n  function traverseDom(node, isValidNode, processingInstructions, index) {\n    if (isValidNode(node)) {\n      var processingInstruction = find(function (processingInstruction) {\n        return processingInstruction.shouldProcessNode(node);\n      }, processingInstructions);\n      if (processingInstruction != null) {\n        var children = reject(function (x) {return x == null || x === false;},\n          addIndex(map)(function (child, i) {\n            return traverseDom(child, isValidNode, processingInstructions, i);\n          }, node.children || []));\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [\n            processingInstruction.processNode(node, children, index),\n          ]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  function parseWithInstructions(html, isValidNode, processingInstructions) {\n    var domTree = parseHtmlToTree(html);\n\n    var list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  };\n\n  function parse(html) {\n    var processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html,\n      IsValidNodeDefinitions.alwaysValid,\n      processingInstructions.defaultProcessingInstructions);\n  };\n\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions,\n  };\n};\n\nmodule.exports = Html2ReactParser;\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/parser.js?")},function(module,exports,__webpack_require__){eval("var _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _dispatchable = /*#__PURE__*/__webpack_require__(106);\n\nvar _xfind = /*#__PURE__*/__webpack_require__(327);\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nmodule.exports = find;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/find.js?")},function(module,exports){eval("function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isTransformer.js?")},function(module,exports,__webpack_require__){eval("var _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _reduced = /*#__PURE__*/__webpack_require__(328);\n\nvar _xfBase = /*#__PURE__*/__webpack_require__(107);\n\nvar XFind = /*#__PURE__*/function () {\n\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nmodule.exports = _xfind;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_xfind.js?")},function(module,exports){eval("function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_reduced.js?")},function(module,exports,__webpack_require__){eval("var _complement = /*#__PURE__*/__webpack_require__(330);\n\nvar _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar filter = /*#__PURE__*/__webpack_require__(331);\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/reject.js?")},function(module,exports){eval("function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_complement.js?")},function(module,exports,__webpack_require__){eval("var _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _dispatchable = /*#__PURE__*/__webpack_require__(106);\n\nvar _filter = /*#__PURE__*/__webpack_require__(332);\n\nvar _isObject = /*#__PURE__*/__webpack_require__(333);\n\nvar _reduce = /*#__PURE__*/__webpack_require__(108);\n\nvar _xfilter = /*#__PURE__*/__webpack_require__(338);\n\nvar keys = /*#__PURE__*/__webpack_require__(268);\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/filter.js?")},function(module,exports){eval("function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_filter.js?")},function(module,exports){eval("function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isObject.js?")},function(module,exports,__webpack_require__){eval("var _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar _isArray = /*#__PURE__*/__webpack_require__(267);\n\nvar _isString = /*#__PURE__*/__webpack_require__(335);\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isArrayLike.js?")},function(module,exports){eval("function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isString.js?")},function(module,exports){eval("var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_xwrap.js?")},function(module,exports,__webpack_require__){eval("var _arity = /*#__PURE__*/__webpack_require__(109);\n\nvar _curry2 = /*#__PURE__*/__webpack_require__(75);\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/bind.js?")},function(module,exports,__webpack_require__){eval("var _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _xfBase = /*#__PURE__*/__webpack_require__(107);\n\nvar XFilter = /*#__PURE__*/function () {\n\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nmodule.exports = _xfilter;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_xfilter.js?")},function(module,exports,__webpack_require__){eval("var _has = /*#__PURE__*/__webpack_require__(110);\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_isArguments.js?")},function(module,exports,__webpack_require__){eval("var _concat = /*#__PURE__*/__webpack_require__(341);\n\nvar _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar curryN = /*#__PURE__*/__webpack_require__(269);\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\n\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = addIndex;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/addIndex.js?")},function(module,exports){eval("/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nfunction _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _concat;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_concat.js?")},function(module,exports,__webpack_require__){eval("var _arity = /*#__PURE__*/__webpack_require__(109);\n\nvar _isPlaceholder = /*#__PURE__*/__webpack_require__(95);\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_curryN.js?")},function(module,exports,__webpack_require__){eval("var _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _dispatchable = /*#__PURE__*/__webpack_require__(106);\n\nvar _map = /*#__PURE__*/__webpack_require__(344);\n\nvar _reduce = /*#__PURE__*/__webpack_require__(108);\n\nvar _xmap = /*#__PURE__*/__webpack_require__(345);\n\nvar curryN = /*#__PURE__*/__webpack_require__(269);\n\nvar keys = /*#__PURE__*/__webpack_require__(268);\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/map.js?")},function(module,exports){eval("function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_map.js?")},function(module,exports,__webpack_require__){eval("var _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _xfBase = /*#__PURE__*/__webpack_require__(107);\n\nvar XMap = /*#__PURE__*/function () {\n\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nmodule.exports = _xmap;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_xmap.js?")},function(module,exports,__webpack_require__){eval('var Tokenizer = __webpack_require__(347);\n\n/*\n\tOptions:\n\n\txmlMode: Disables the special behavior for script/style tags (false by default)\n\tlowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)\n\tlowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)\n*/\n\n/*\n\tCallbacks:\n\n\toncdataend,\n\toncdatastart,\n\tonclosetag,\n\toncomment,\n\toncommentend,\n\tonerror,\n\tonopentag,\n\tonprocessinginstruction,\n\tonreset,\n\tontext\n*/\n\nvar formTags = {\n    input: true,\n    option: true,\n    optgroup: true,\n    select: true,\n    button: true,\n    datalist: true,\n    textarea: true\n};\n\nvar openImpliesClose = {\n    tr: { tr: true, th: true, td: true },\n    th: { th: true },\n    td: { thead: true, th: true, td: true },\n    body: { head: true, link: true, script: true },\n    li: { li: true },\n    p: { p: true },\n    h1: { p: true },\n    h2: { p: true },\n    h3: { p: true },\n    h4: { p: true },\n    h5: { p: true },\n    h6: { p: true },\n    select: formTags,\n    input: formTags,\n    output: formTags,\n    button: formTags,\n    datalist: formTags,\n    textarea: formTags,\n    option: { option: true },\n    optgroup: { optgroup: true }\n};\n\nvar voidElements = {\n    __proto__: null,\n    area: true,\n    base: true,\n    basefont: true,\n    br: true,\n    col: true,\n    command: true,\n    embed: true,\n    frame: true,\n    hr: true,\n    img: true,\n    input: true,\n    isindex: true,\n    keygen: true,\n    link: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\n\nvar foreignContextElements = {\n    __proto__: null,\n    math: true,\n    svg: true\n};\nvar htmlIntegrationElements = {\n    __proto__: null,\n    mi: true,\n    mo: true,\n    mn: true,\n    ms: true,\n    mtext: true,\n    "annotation-xml": true,\n    foreignObject: true,\n    desc: true,\n    title: true\n};\n\nvar re_nameEnd = /\\s|\\//;\n\nfunction Parser(cbs, options) {\n    this._options = options || {};\n    this._cbs = cbs || {};\n\n    this._tagname = "";\n    this._attribname = "";\n    this._attribvalue = "";\n    this._attribs = null;\n    this._stack = [];\n    this._foreignContext = [];\n\n    this.startIndex = 0;\n    this.endIndex = null;\n\n    this._lowerCaseTagNames =\n        "lowerCaseTags" in this._options\n            ? !!this._options.lowerCaseTags\n            : !this._options.xmlMode;\n    this._lowerCaseAttributeNames =\n        "lowerCaseAttributeNames" in this._options\n            ? !!this._options.lowerCaseAttributeNames\n            : !this._options.xmlMode;\n\n    if (this._options.Tokenizer) {\n        Tokenizer = this._options.Tokenizer;\n    }\n    this._tokenizer = new Tokenizer(this._options, this);\n\n    if (this._cbs.onparserinit) this._cbs.onparserinit(this);\n}\n\n__webpack_require__(111)(Parser, __webpack_require__(353).EventEmitter);\n\nParser.prototype._updatePosition = function(initialOffset) {\n    if (this.endIndex === null) {\n        if (this._tokenizer._sectionStart <= initialOffset) {\n            this.startIndex = 0;\n        } else {\n            this.startIndex = this._tokenizer._sectionStart - initialOffset;\n        }\n    } else this.startIndex = this.endIndex + 1;\n    this.endIndex = this._tokenizer.getAbsoluteIndex();\n};\n\n//Tokenizer event handlers\nParser.prototype.ontext = function(data) {\n    this._updatePosition(1);\n    this.endIndex--;\n\n    if (this._cbs.ontext) this._cbs.ontext(data);\n};\n\nParser.prototype.onopentagname = function(name) {\n    if (this._lowerCaseTagNames) {\n        name = name.toLowerCase();\n    }\n\n    this._tagname = name;\n\n    if (!this._options.xmlMode && name in openImpliesClose) {\n        for (\n            var el;\n            (el = this._stack[this._stack.length - 1]) in\n            openImpliesClose[name];\n            this.onclosetag(el)\n        );\n    }\n\n    if (this._options.xmlMode || !(name in voidElements)) {\n        this._stack.push(name);\n        if (name in foreignContextElements) this._foreignContext.push(true);\n        else if (name in htmlIntegrationElements)\n            this._foreignContext.push(false);\n    }\n\n    if (this._cbs.onopentagname) this._cbs.onopentagname(name);\n    if (this._cbs.onopentag) this._attribs = {};\n};\n\nParser.prototype.onopentagend = function() {\n    this._updatePosition(1);\n\n    if (this._attribs) {\n        if (this._cbs.onopentag)\n            this._cbs.onopentag(this._tagname, this._attribs);\n        this._attribs = null;\n    }\n\n    if (\n        !this._options.xmlMode &&\n        this._cbs.onclosetag &&\n        this._tagname in voidElements\n    ) {\n        this._cbs.onclosetag(this._tagname);\n    }\n\n    this._tagname = "";\n};\n\nParser.prototype.onclosetag = function(name) {\n    this._updatePosition(1);\n\n    if (this._lowerCaseTagNames) {\n        name = name.toLowerCase();\n    }\n    \n    if (name in foreignContextElements || name in htmlIntegrationElements) {\n        this._foreignContext.pop();\n    }\n\n    if (\n        this._stack.length &&\n        (!(name in voidElements) || this._options.xmlMode)\n    ) {\n        var pos = this._stack.lastIndexOf(name);\n        if (pos !== -1) {\n            if (this._cbs.onclosetag) {\n                pos = this._stack.length - pos;\n                while (pos--) this._cbs.onclosetag(this._stack.pop());\n            } else this._stack.length = pos;\n        } else if (name === "p" && !this._options.xmlMode) {\n            this.onopentagname(name);\n            this._closeCurrentTag();\n        }\n    } else if (!this._options.xmlMode && (name === "br" || name === "p")) {\n        this.onopentagname(name);\n        this._closeCurrentTag();\n    }\n};\n\nParser.prototype.onselfclosingtag = function() {\n    if (\n        this._options.xmlMode ||\n        this._options.recognizeSelfClosing ||\n        this._foreignContext[this._foreignContext.length - 1]\n    ) {\n        this._closeCurrentTag();\n    } else {\n        this.onopentagend();\n    }\n};\n\nParser.prototype._closeCurrentTag = function() {\n    var name = this._tagname;\n\n    this.onopentagend();\n\n    //self-closing tags will be on the top of the stack\n    //(cheaper check than in onclosetag)\n    if (this._stack[this._stack.length - 1] === name) {\n        if (this._cbs.onclosetag) {\n            this._cbs.onclosetag(name);\n        }\n        this._stack.pop();\n        \n    }\n};\n\nParser.prototype.onattribname = function(name) {\n    if (this._lowerCaseAttributeNames) {\n        name = name.toLowerCase();\n    }\n    this._attribname = name;\n};\n\nParser.prototype.onattribdata = function(value) {\n    this._attribvalue += value;\n};\n\nParser.prototype.onattribend = function() {\n    if (this._cbs.onattribute)\n        this._cbs.onattribute(this._attribname, this._attribvalue);\n    if (\n        this._attribs &&\n        !Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)\n    ) {\n        this._attribs[this._attribname] = this._attribvalue;\n    }\n    this._attribname = "";\n    this._attribvalue = "";\n};\n\nParser.prototype._getInstructionName = function(value) {\n    var idx = value.search(re_nameEnd),\n        name = idx < 0 ? value : value.substr(0, idx);\n\n    if (this._lowerCaseTagNames) {\n        name = name.toLowerCase();\n    }\n\n    return name;\n};\n\nParser.prototype.ondeclaration = function(value) {\n    if (this._cbs.onprocessinginstruction) {\n        var name = this._getInstructionName(value);\n        this._cbs.onprocessinginstruction("!" + name, "!" + value);\n    }\n};\n\nParser.prototype.onprocessinginstruction = function(value) {\n    if (this._cbs.onprocessinginstruction) {\n        var name = this._getInstructionName(value);\n        this._cbs.onprocessinginstruction("?" + name, "?" + value);\n    }\n};\n\nParser.prototype.oncomment = function(value) {\n    this._updatePosition(4);\n\n    if (this._cbs.oncomment) this._cbs.oncomment(value);\n    if (this._cbs.oncommentend) this._cbs.oncommentend();\n};\n\nParser.prototype.oncdata = function(value) {\n    this._updatePosition(1);\n\n    if (this._options.xmlMode || this._options.recognizeCDATA) {\n        if (this._cbs.oncdatastart) this._cbs.oncdatastart();\n        if (this._cbs.ontext) this._cbs.ontext(value);\n        if (this._cbs.oncdataend) this._cbs.oncdataend();\n    } else {\n        this.oncomment("[CDATA[" + value + "]]");\n    }\n};\n\nParser.prototype.onerror = function(err) {\n    if (this._cbs.onerror) this._cbs.onerror(err);\n};\n\nParser.prototype.onend = function() {\n    if (this._cbs.onclosetag) {\n        for (\n            var i = this._stack.length;\n            i > 0;\n            this._cbs.onclosetag(this._stack[--i])\n        );\n    }\n    if (this._cbs.onend) this._cbs.onend();\n};\n\n//Resets the parser to a blank state, ready to parse a new HTML document\nParser.prototype.reset = function() {\n    if (this._cbs.onreset) this._cbs.onreset();\n    this._tokenizer.reset();\n\n    this._tagname = "";\n    this._attribname = "";\n    this._attribs = null;\n    this._stack = [];\n\n    if (this._cbs.onparserinit) this._cbs.onparserinit(this);\n};\n\n//Parses a complete HTML document and pushes it to the handler\nParser.prototype.parseComplete = function(data) {\n    this.reset();\n    this.end(data);\n};\n\nParser.prototype.write = function(chunk) {\n    this._tokenizer.write(chunk);\n};\n\nParser.prototype.end = function(chunk) {\n    this._tokenizer.end(chunk);\n};\n\nParser.prototype.pause = function() {\n    this._tokenizer.pause();\n};\n\nParser.prototype.resume = function() {\n    this._tokenizer.resume();\n};\n\n//alias for backwards compat\nParser.prototype.parseChunk = Parser.prototype.write;\nParser.prototype.done = Parser.prototype.end;\n\nmodule.exports = Parser;\n\n\n//# sourceURL=webpack:///./node_modules/htmlparser2/lib/Parser.js?')},function(module,exports,__webpack_require__){eval('module.exports = Tokenizer;\n\nvar decodeCodePoint = __webpack_require__(348);\nvar entityMap = __webpack_require__(350);\nvar legacyMap = __webpack_require__(351);\nvar xmlMap = __webpack_require__(352);\n\nvar i = 0;\n\nvar TEXT = i++;\nvar BEFORE_TAG_NAME = i++; //after <\nvar IN_TAG_NAME = i++;\nvar IN_SELF_CLOSING_TAG = i++;\nvar BEFORE_CLOSING_TAG_NAME = i++;\nvar IN_CLOSING_TAG_NAME = i++;\nvar AFTER_CLOSING_TAG_NAME = i++;\n\n//attributes\nvar BEFORE_ATTRIBUTE_NAME = i++;\nvar IN_ATTRIBUTE_NAME = i++;\nvar AFTER_ATTRIBUTE_NAME = i++;\nvar BEFORE_ATTRIBUTE_VALUE = i++;\nvar IN_ATTRIBUTE_VALUE_DQ = i++; // "\nvar IN_ATTRIBUTE_VALUE_SQ = i++; // \'\nvar IN_ATTRIBUTE_VALUE_NQ = i++;\n\n//declarations\nvar BEFORE_DECLARATION = i++; // !\nvar IN_DECLARATION = i++;\n\n//processing instructions\nvar IN_PROCESSING_INSTRUCTION = i++; // ?\n\n//comments\nvar BEFORE_COMMENT = i++;\nvar IN_COMMENT = i++;\nvar AFTER_COMMENT_1 = i++;\nvar AFTER_COMMENT_2 = i++;\n\n//cdata\nvar BEFORE_CDATA_1 = i++; // [\nvar BEFORE_CDATA_2 = i++; // C\nvar BEFORE_CDATA_3 = i++; // D\nvar BEFORE_CDATA_4 = i++; // A\nvar BEFORE_CDATA_5 = i++; // T\nvar BEFORE_CDATA_6 = i++; // A\nvar IN_CDATA = i++; // [\nvar AFTER_CDATA_1 = i++; // ]\nvar AFTER_CDATA_2 = i++; // ]\n\n//special tags\nvar BEFORE_SPECIAL = i++; //S\nvar BEFORE_SPECIAL_END = i++; //S\n\nvar BEFORE_SCRIPT_1 = i++; //C\nvar BEFORE_SCRIPT_2 = i++; //R\nvar BEFORE_SCRIPT_3 = i++; //I\nvar BEFORE_SCRIPT_4 = i++; //P\nvar BEFORE_SCRIPT_5 = i++; //T\nvar AFTER_SCRIPT_1 = i++; //C\nvar AFTER_SCRIPT_2 = i++; //R\nvar AFTER_SCRIPT_3 = i++; //I\nvar AFTER_SCRIPT_4 = i++; //P\nvar AFTER_SCRIPT_5 = i++; //T\n\nvar BEFORE_STYLE_1 = i++; //T\nvar BEFORE_STYLE_2 = i++; //Y\nvar BEFORE_STYLE_3 = i++; //L\nvar BEFORE_STYLE_4 = i++; //E\nvar AFTER_STYLE_1 = i++; //T\nvar AFTER_STYLE_2 = i++; //Y\nvar AFTER_STYLE_3 = i++; //L\nvar AFTER_STYLE_4 = i++; //E\n\nvar BEFORE_ENTITY = i++; //&\nvar BEFORE_NUMERIC_ENTITY = i++; //#\nvar IN_NAMED_ENTITY = i++;\nvar IN_NUMERIC_ENTITY = i++;\nvar IN_HEX_ENTITY = i++; //X\n\nvar j = 0;\n\nvar SPECIAL_NONE = j++;\nvar SPECIAL_SCRIPT = j++;\nvar SPECIAL_STYLE = j++;\n\nfunction whitespace(c) {\n    return c === " " || c === "\\n" || c === "\\t" || c === "\\f" || c === "\\r";\n}\n\nfunction ifElseState(upper, SUCCESS, FAILURE) {\n    var lower = upper.toLowerCase();\n\n    if (upper === lower) {\n        return function(c) {\n            if (c === lower) {\n                this._state = SUCCESS;\n            } else {\n                this._state = FAILURE;\n                this._index--;\n            }\n        };\n    } else {\n        return function(c) {\n            if (c === lower || c === upper) {\n                this._state = SUCCESS;\n            } else {\n                this._state = FAILURE;\n                this._index--;\n            }\n        };\n    }\n}\n\nfunction consumeSpecialNameChar(upper, NEXT_STATE) {\n    var lower = upper.toLowerCase();\n\n    return function(c) {\n        if (c === lower || c === upper) {\n            this._state = NEXT_STATE;\n        } else {\n            this._state = IN_TAG_NAME;\n            this._index--; //consume the token again\n        }\n    };\n}\n\nfunction Tokenizer(options, cbs) {\n    this._state = TEXT;\n    this._buffer = "";\n    this._sectionStart = 0;\n    this._index = 0;\n    this._bufferOffset = 0; //chars removed from _buffer\n    this._baseState = TEXT;\n    this._special = SPECIAL_NONE;\n    this._cbs = cbs;\n    this._running = true;\n    this._ended = false;\n    this._xmlMode = !!(options && options.xmlMode);\n    this._decodeEntities = !!(options && options.decodeEntities);\n}\n\nTokenizer.prototype._stateText = function(c) {\n    if (c === "<") {\n        if (this._index > this._sectionStart) {\n            this._cbs.ontext(this._getSection());\n        }\n        this._state = BEFORE_TAG_NAME;\n        this._sectionStart = this._index;\n    } else if (\n        this._decodeEntities &&\n        this._special === SPECIAL_NONE &&\n        c === "&"\n    ) {\n        if (this._index > this._sectionStart) {\n            this._cbs.ontext(this._getSection());\n        }\n        this._baseState = TEXT;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateBeforeTagName = function(c) {\n    if (c === "/") {\n        this._state = BEFORE_CLOSING_TAG_NAME;\n    } else if (c === "<") {\n        this._cbs.ontext(this._getSection());\n        this._sectionStart = this._index;\n    } else if (c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {\n        this._state = TEXT;\n    } else if (c === "!") {\n        this._state = BEFORE_DECLARATION;\n        this._sectionStart = this._index + 1;\n    } else if (c === "?") {\n        this._state = IN_PROCESSING_INSTRUCTION;\n        this._sectionStart = this._index + 1;\n    } else {\n        this._state =\n            !this._xmlMode && (c === "s" || c === "S")\n                ? BEFORE_SPECIAL\n                : IN_TAG_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInTagName = function(c) {\n    if (c === "/" || c === ">" || whitespace(c)) {\n        this._emitToken("onopentagname");\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateBeforeCloseingTagName = function(c) {\n    if (whitespace(c));\n    else if (c === ">") {\n        this._state = TEXT;\n    } else if (this._special !== SPECIAL_NONE) {\n        if (c === "s" || c === "S") {\n            this._state = BEFORE_SPECIAL_END;\n        } else {\n            this._state = TEXT;\n            this._index--;\n        }\n    } else {\n        this._state = IN_CLOSING_TAG_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInCloseingTagName = function(c) {\n    if (c === ">" || whitespace(c)) {\n        this._emitToken("onclosetag");\n        this._state = AFTER_CLOSING_TAG_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateAfterCloseingTagName = function(c) {\n    //skip everything until ">"\n    if (c === ">") {\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    }\n};\n\nTokenizer.prototype._stateBeforeAttributeName = function(c) {\n    if (c === ">") {\n        this._cbs.onopentagend();\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (c === "/") {\n        this._state = IN_SELF_CLOSING_TAG;\n    } else if (!whitespace(c)) {\n        this._state = IN_ATTRIBUTE_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInSelfClosingTag = function(c) {\n    if (c === ">") {\n        this._cbs.onselfclosingtag();\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (!whitespace(c)) {\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateInAttributeName = function(c) {\n    if (c === "=" || c === "/" || c === ">" || whitespace(c)) {\n        this._cbs.onattribname(this._getSection());\n        this._sectionStart = -1;\n        this._state = AFTER_ATTRIBUTE_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateAfterAttributeName = function(c) {\n    if (c === "=") {\n        this._state = BEFORE_ATTRIBUTE_VALUE;\n    } else if (c === "/" || c === ">") {\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    } else if (!whitespace(c)) {\n        this._cbs.onattribend();\n        this._state = IN_ATTRIBUTE_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateBeforeAttributeValue = function(c) {\n    if (c === \'"\') {\n        this._state = IN_ATTRIBUTE_VALUE_DQ;\n        this._sectionStart = this._index + 1;\n    } else if (c === "\'") {\n        this._state = IN_ATTRIBUTE_VALUE_SQ;\n        this._sectionStart = this._index + 1;\n    } else if (!whitespace(c)) {\n        this._state = IN_ATTRIBUTE_VALUE_NQ;\n        this._sectionStart = this._index;\n        this._index--; //reconsume token\n    }\n};\n\nTokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c) {\n    if (c === \'"\') {\n        this._emitToken("onattribdata");\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n    } else if (this._decodeEntities && c === "&") {\n        this._emitToken("onattribdata");\n        this._baseState = this._state;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInAttributeValueSingleQuotes = function(c) {\n    if (c === "\'") {\n        this._emitToken("onattribdata");\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n    } else if (this._decodeEntities && c === "&") {\n        this._emitToken("onattribdata");\n        this._baseState = this._state;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInAttributeValueNoQuotes = function(c) {\n    if (whitespace(c) || c === ">") {\n        this._emitToken("onattribdata");\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    } else if (this._decodeEntities && c === "&") {\n        this._emitToken("onattribdata");\n        this._baseState = this._state;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateBeforeDeclaration = function(c) {\n    this._state =\n        c === "["\n            ? BEFORE_CDATA_1\n            : c === "-"\n                ? BEFORE_COMMENT\n                : IN_DECLARATION;\n};\n\nTokenizer.prototype._stateInDeclaration = function(c) {\n    if (c === ">") {\n        this._cbs.ondeclaration(this._getSection());\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    }\n};\n\nTokenizer.prototype._stateInProcessingInstruction = function(c) {\n    if (c === ">") {\n        this._cbs.onprocessinginstruction(this._getSection());\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    }\n};\n\nTokenizer.prototype._stateBeforeComment = function(c) {\n    if (c === "-") {\n        this._state = IN_COMMENT;\n        this._sectionStart = this._index + 1;\n    } else {\n        this._state = IN_DECLARATION;\n    }\n};\n\nTokenizer.prototype._stateInComment = function(c) {\n    if (c === "-") this._state = AFTER_COMMENT_1;\n};\n\nTokenizer.prototype._stateAfterComment1 = function(c) {\n    if (c === "-") {\n        this._state = AFTER_COMMENT_2;\n    } else {\n        this._state = IN_COMMENT;\n    }\n};\n\nTokenizer.prototype._stateAfterComment2 = function(c) {\n    if (c === ">") {\n        //remove 2 trailing chars\n        this._cbs.oncomment(\n            this._buffer.substring(this._sectionStart, this._index - 2)\n        );\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (c !== "-") {\n        this._state = IN_COMMENT;\n    }\n    // else: stay in AFTER_COMMENT_2 (`---\x3e`)\n};\n\nTokenizer.prototype._stateBeforeCdata1 = ifElseState(\n    "C",\n    BEFORE_CDATA_2,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata2 = ifElseState(\n    "D",\n    BEFORE_CDATA_3,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata3 = ifElseState(\n    "A",\n    BEFORE_CDATA_4,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata4 = ifElseState(\n    "T",\n    BEFORE_CDATA_5,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata5 = ifElseState(\n    "A",\n    BEFORE_CDATA_6,\n    IN_DECLARATION\n);\n\nTokenizer.prototype._stateBeforeCdata6 = function(c) {\n    if (c === "[") {\n        this._state = IN_CDATA;\n        this._sectionStart = this._index + 1;\n    } else {\n        this._state = IN_DECLARATION;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateInCdata = function(c) {\n    if (c === "]") this._state = AFTER_CDATA_1;\n};\n\nTokenizer.prototype._stateAfterCdata1 = function(c) {\n    if (c === "]") this._state = AFTER_CDATA_2;\n    else this._state = IN_CDATA;\n};\n\nTokenizer.prototype._stateAfterCdata2 = function(c) {\n    if (c === ">") {\n        //remove 2 trailing chars\n        this._cbs.oncdata(\n            this._buffer.substring(this._sectionStart, this._index - 2)\n        );\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (c !== "]") {\n        this._state = IN_CDATA;\n    }\n    //else: stay in AFTER_CDATA_2 (`]]]>`)\n};\n\nTokenizer.prototype._stateBeforeSpecial = function(c) {\n    if (c === "c" || c === "C") {\n        this._state = BEFORE_SCRIPT_1;\n    } else if (c === "t" || c === "T") {\n        this._state = BEFORE_STYLE_1;\n    } else {\n        this._state = IN_TAG_NAME;\n        this._index--; //consume the token again\n    }\n};\n\nTokenizer.prototype._stateBeforeSpecialEnd = function(c) {\n    if (this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")) {\n        this._state = AFTER_SCRIPT_1;\n    } else if (this._special === SPECIAL_STYLE && (c === "t" || c === "T")) {\n        this._state = AFTER_STYLE_1;\n    } else this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar(\n    "R",\n    BEFORE_SCRIPT_2\n);\nTokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar(\n    "I",\n    BEFORE_SCRIPT_3\n);\nTokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar(\n    "P",\n    BEFORE_SCRIPT_4\n);\nTokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar(\n    "T",\n    BEFORE_SCRIPT_5\n);\n\nTokenizer.prototype._stateBeforeScript5 = function(c) {\n    if (c === "/" || c === ">" || whitespace(c)) {\n        this._special = SPECIAL_SCRIPT;\n    }\n    this._state = IN_TAG_NAME;\n    this._index--; //consume the token again\n};\n\nTokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);\nTokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);\nTokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);\nTokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);\n\nTokenizer.prototype._stateAfterScript5 = function(c) {\n    if (c === ">" || whitespace(c)) {\n        this._special = SPECIAL_NONE;\n        this._state = IN_CLOSING_TAG_NAME;\n        this._sectionStart = this._index - 6;\n        this._index--; //reconsume the token\n    } else this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar(\n    "Y",\n    BEFORE_STYLE_2\n);\nTokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar(\n    "L",\n    BEFORE_STYLE_3\n);\nTokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar(\n    "E",\n    BEFORE_STYLE_4\n);\n\nTokenizer.prototype._stateBeforeStyle4 = function(c) {\n    if (c === "/" || c === ">" || whitespace(c)) {\n        this._special = SPECIAL_STYLE;\n    }\n    this._state = IN_TAG_NAME;\n    this._index--; //consume the token again\n};\n\nTokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);\nTokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);\nTokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);\n\nTokenizer.prototype._stateAfterStyle4 = function(c) {\n    if (c === ">" || whitespace(c)) {\n        this._special = SPECIAL_NONE;\n        this._state = IN_CLOSING_TAG_NAME;\n        this._sectionStart = this._index - 5;\n        this._index--; //reconsume the token\n    } else this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeEntity = ifElseState(\n    "#",\n    BEFORE_NUMERIC_ENTITY,\n    IN_NAMED_ENTITY\n);\nTokenizer.prototype._stateBeforeNumericEntity = ifElseState(\n    "X",\n    IN_HEX_ENTITY,\n    IN_NUMERIC_ENTITY\n);\n\n//for entities terminated with a semicolon\nTokenizer.prototype._parseNamedEntityStrict = function() {\n    //offset = 1\n    if (this._sectionStart + 1 < this._index) {\n        var entity = this._buffer.substring(\n                this._sectionStart + 1,\n                this._index\n            ),\n            map = this._xmlMode ? xmlMap : entityMap;\n\n        if (map.hasOwnProperty(entity)) {\n            this._emitPartial(map[entity]);\n            this._sectionStart = this._index + 1;\n        }\n    }\n};\n\n//parses legacy entities (without trailing semicolon)\nTokenizer.prototype._parseLegacyEntity = function() {\n    var start = this._sectionStart + 1,\n        limit = this._index - start;\n\n    if (limit > 6) limit = 6; //the max length of legacy entities is 6\n\n    while (limit >= 2) {\n        //the min length of legacy entities is 2\n        var entity = this._buffer.substr(start, limit);\n\n        if (legacyMap.hasOwnProperty(entity)) {\n            this._emitPartial(legacyMap[entity]);\n            this._sectionStart += limit + 1;\n            return;\n        } else {\n            limit--;\n        }\n    }\n};\n\nTokenizer.prototype._stateInNamedEntity = function(c) {\n    if (c === ";") {\n        this._parseNamedEntityStrict();\n        if (this._sectionStart + 1 < this._index && !this._xmlMode) {\n            this._parseLegacyEntity();\n        }\n        this._state = this._baseState;\n    } else if (\n        (c < "a" || c > "z") &&\n        (c < "A" || c > "Z") &&\n        (c < "0" || c > "9")\n    ) {\n        if (this._xmlMode);\n        else if (this._sectionStart + 1 === this._index);\n        else if (this._baseState !== TEXT) {\n            if (c !== "=") {\n                this._parseNamedEntityStrict();\n            }\n        } else {\n            this._parseLegacyEntity();\n        }\n\n        this._state = this._baseState;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._decodeNumericEntity = function(offset, base) {\n    var sectionStart = this._sectionStart + offset;\n\n    if (sectionStart !== this._index) {\n        //parse entity\n        var entity = this._buffer.substring(sectionStart, this._index);\n        var parsed = parseInt(entity, base);\n\n        this._emitPartial(decodeCodePoint(parsed));\n        this._sectionStart = this._index;\n    } else {\n        this._sectionStart--;\n    }\n\n    this._state = this._baseState;\n};\n\nTokenizer.prototype._stateInNumericEntity = function(c) {\n    if (c === ";") {\n        this._decodeNumericEntity(2, 10);\n        this._sectionStart++;\n    } else if (c < "0" || c > "9") {\n        if (!this._xmlMode) {\n            this._decodeNumericEntity(2, 10);\n        } else {\n            this._state = this._baseState;\n        }\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateInHexEntity = function(c) {\n    if (c === ";") {\n        this._decodeNumericEntity(3, 16);\n        this._sectionStart++;\n    } else if (\n        (c < "a" || c > "f") &&\n        (c < "A" || c > "F") &&\n        (c < "0" || c > "9")\n    ) {\n        if (!this._xmlMode) {\n            this._decodeNumericEntity(3, 16);\n        } else {\n            this._state = this._baseState;\n        }\n        this._index--;\n    }\n};\n\nTokenizer.prototype._cleanup = function() {\n    if (this._sectionStart < 0) {\n        this._buffer = "";\n        this._bufferOffset += this._index;\n        this._index = 0;\n    } else if (this._running) {\n        if (this._state === TEXT) {\n            if (this._sectionStart !== this._index) {\n                this._cbs.ontext(this._buffer.substr(this._sectionStart));\n            }\n            this._buffer = "";\n            this._bufferOffset += this._index;\n            this._index = 0;\n        } else if (this._sectionStart === this._index) {\n            //the section just started\n            this._buffer = "";\n            this._bufferOffset += this._index;\n            this._index = 0;\n        } else {\n            //remove everything unnecessary\n            this._buffer = this._buffer.substr(this._sectionStart);\n            this._index -= this._sectionStart;\n            this._bufferOffset += this._sectionStart;\n        }\n\n        this._sectionStart = 0;\n    }\n};\n\n//TODO make events conditional\nTokenizer.prototype.write = function(chunk) {\n    if (this._ended) this._cbs.onerror(Error(".write() after done!"));\n\n    this._buffer += chunk;\n    this._parse();\n};\n\nTokenizer.prototype._parse = function() {\n    while (this._index < this._buffer.length && this._running) {\n        var c = this._buffer.charAt(this._index);\n        if (this._state === TEXT) {\n            this._stateText(c);\n        } else if (this._state === BEFORE_TAG_NAME) {\n            this._stateBeforeTagName(c);\n        } else if (this._state === IN_TAG_NAME) {\n            this._stateInTagName(c);\n        } else if (this._state === BEFORE_CLOSING_TAG_NAME) {\n            this._stateBeforeCloseingTagName(c);\n        } else if (this._state === IN_CLOSING_TAG_NAME) {\n            this._stateInCloseingTagName(c);\n        } else if (this._state === AFTER_CLOSING_TAG_NAME) {\n            this._stateAfterCloseingTagName(c);\n        } else if (this._state === IN_SELF_CLOSING_TAG) {\n            this._stateInSelfClosingTag(c);\n        } else if (this._state === BEFORE_ATTRIBUTE_NAME) {\n\n        /*\n\t\t*\tattributes\n\t\t*/\n            this._stateBeforeAttributeName(c);\n        } else if (this._state === IN_ATTRIBUTE_NAME) {\n            this._stateInAttributeName(c);\n        } else if (this._state === AFTER_ATTRIBUTE_NAME) {\n            this._stateAfterAttributeName(c);\n        } else if (this._state === BEFORE_ATTRIBUTE_VALUE) {\n            this._stateBeforeAttributeValue(c);\n        } else if (this._state === IN_ATTRIBUTE_VALUE_DQ) {\n            this._stateInAttributeValueDoubleQuotes(c);\n        } else if (this._state === IN_ATTRIBUTE_VALUE_SQ) {\n            this._stateInAttributeValueSingleQuotes(c);\n        } else if (this._state === IN_ATTRIBUTE_VALUE_NQ) {\n            this._stateInAttributeValueNoQuotes(c);\n        } else if (this._state === BEFORE_DECLARATION) {\n\n        /*\n\t\t*\tdeclarations\n\t\t*/\n            this._stateBeforeDeclaration(c);\n        } else if (this._state === IN_DECLARATION) {\n            this._stateInDeclaration(c);\n        } else if (this._state === IN_PROCESSING_INSTRUCTION) {\n\n        /*\n\t\t*\tprocessing instructions\n\t\t*/\n            this._stateInProcessingInstruction(c);\n        } else if (this._state === BEFORE_COMMENT) {\n\n        /*\n\t\t*\tcomments\n\t\t*/\n            this._stateBeforeComment(c);\n        } else if (this._state === IN_COMMENT) {\n            this._stateInComment(c);\n        } else if (this._state === AFTER_COMMENT_1) {\n            this._stateAfterComment1(c);\n        } else if (this._state === AFTER_COMMENT_2) {\n            this._stateAfterComment2(c);\n        } else if (this._state === BEFORE_CDATA_1) {\n\n        /*\n\t\t*\tcdata\n\t\t*/\n            this._stateBeforeCdata1(c);\n        } else if (this._state === BEFORE_CDATA_2) {\n            this._stateBeforeCdata2(c);\n        } else if (this._state === BEFORE_CDATA_3) {\n            this._stateBeforeCdata3(c);\n        } else if (this._state === BEFORE_CDATA_4) {\n            this._stateBeforeCdata4(c);\n        } else if (this._state === BEFORE_CDATA_5) {\n            this._stateBeforeCdata5(c);\n        } else if (this._state === BEFORE_CDATA_6) {\n            this._stateBeforeCdata6(c);\n        } else if (this._state === IN_CDATA) {\n            this._stateInCdata(c);\n        } else if (this._state === AFTER_CDATA_1) {\n            this._stateAfterCdata1(c);\n        } else if (this._state === AFTER_CDATA_2) {\n            this._stateAfterCdata2(c);\n        } else if (this._state === BEFORE_SPECIAL) {\n\n        /*\n\t\t* special tags\n\t\t*/\n            this._stateBeforeSpecial(c);\n        } else if (this._state === BEFORE_SPECIAL_END) {\n            this._stateBeforeSpecialEnd(c);\n        } else if (this._state === BEFORE_SCRIPT_1) {\n\n        /*\n\t\t* script\n\t\t*/\n            this._stateBeforeScript1(c);\n        } else if (this._state === BEFORE_SCRIPT_2) {\n            this._stateBeforeScript2(c);\n        } else if (this._state === BEFORE_SCRIPT_3) {\n            this._stateBeforeScript3(c);\n        } else if (this._state === BEFORE_SCRIPT_4) {\n            this._stateBeforeScript4(c);\n        } else if (this._state === BEFORE_SCRIPT_5) {\n            this._stateBeforeScript5(c);\n        } else if (this._state === AFTER_SCRIPT_1) {\n            this._stateAfterScript1(c);\n        } else if (this._state === AFTER_SCRIPT_2) {\n            this._stateAfterScript2(c);\n        } else if (this._state === AFTER_SCRIPT_3) {\n            this._stateAfterScript3(c);\n        } else if (this._state === AFTER_SCRIPT_4) {\n            this._stateAfterScript4(c);\n        } else if (this._state === AFTER_SCRIPT_5) {\n            this._stateAfterScript5(c);\n        } else if (this._state === BEFORE_STYLE_1) {\n\n        /*\n\t\t* style\n\t\t*/\n            this._stateBeforeStyle1(c);\n        } else if (this._state === BEFORE_STYLE_2) {\n            this._stateBeforeStyle2(c);\n        } else if (this._state === BEFORE_STYLE_3) {\n            this._stateBeforeStyle3(c);\n        } else if (this._state === BEFORE_STYLE_4) {\n            this._stateBeforeStyle4(c);\n        } else if (this._state === AFTER_STYLE_1) {\n            this._stateAfterStyle1(c);\n        } else if (this._state === AFTER_STYLE_2) {\n            this._stateAfterStyle2(c);\n        } else if (this._state === AFTER_STYLE_3) {\n            this._stateAfterStyle3(c);\n        } else if (this._state === AFTER_STYLE_4) {\n            this._stateAfterStyle4(c);\n        } else if (this._state === BEFORE_ENTITY) {\n\n        /*\n\t\t* entities\n\t\t*/\n            this._stateBeforeEntity(c);\n        } else if (this._state === BEFORE_NUMERIC_ENTITY) {\n            this._stateBeforeNumericEntity(c);\n        } else if (this._state === IN_NAMED_ENTITY) {\n            this._stateInNamedEntity(c);\n        } else if (this._state === IN_NUMERIC_ENTITY) {\n            this._stateInNumericEntity(c);\n        } else if (this._state === IN_HEX_ENTITY) {\n            this._stateInHexEntity(c);\n        } else {\n            this._cbs.onerror(Error("unknown _state"), this._state);\n        }\n\n        this._index++;\n    }\n\n    this._cleanup();\n};\n\nTokenizer.prototype.pause = function() {\n    this._running = false;\n};\nTokenizer.prototype.resume = function() {\n    this._running = true;\n\n    if (this._index < this._buffer.length) {\n        this._parse();\n    }\n    if (this._ended) {\n        this._finish();\n    }\n};\n\nTokenizer.prototype.end = function(chunk) {\n    if (this._ended) this._cbs.onerror(Error(".end() after done!"));\n    if (chunk) this.write(chunk);\n\n    this._ended = true;\n\n    if (this._running) this._finish();\n};\n\nTokenizer.prototype._finish = function() {\n    //if there is remaining data, emit it in a reasonable way\n    if (this._sectionStart < this._index) {\n        this._handleTrailingData();\n    }\n\n    this._cbs.onend();\n};\n\nTokenizer.prototype._handleTrailingData = function() {\n    var data = this._buffer.substr(this._sectionStart);\n\n    if (\n        this._state === IN_CDATA ||\n        this._state === AFTER_CDATA_1 ||\n        this._state === AFTER_CDATA_2\n    ) {\n        this._cbs.oncdata(data);\n    } else if (\n        this._state === IN_COMMENT ||\n        this._state === AFTER_COMMENT_1 ||\n        this._state === AFTER_COMMENT_2\n    ) {\n        this._cbs.oncomment(data);\n    } else if (this._state === IN_NAMED_ENTITY && !this._xmlMode) {\n        this._parseLegacyEntity();\n        if (this._sectionStart < this._index) {\n            this._state = this._baseState;\n            this._handleTrailingData();\n        }\n    } else if (this._state === IN_NUMERIC_ENTITY && !this._xmlMode) {\n        this._decodeNumericEntity(2, 10);\n        if (this._sectionStart < this._index) {\n            this._state = this._baseState;\n            this._handleTrailingData();\n        }\n    } else if (this._state === IN_HEX_ENTITY && !this._xmlMode) {\n        this._decodeNumericEntity(3, 16);\n        if (this._sectionStart < this._index) {\n            this._state = this._baseState;\n            this._handleTrailingData();\n        }\n    } else if (\n        this._state !== IN_TAG_NAME &&\n        this._state !== BEFORE_ATTRIBUTE_NAME &&\n        this._state !== BEFORE_ATTRIBUTE_VALUE &&\n        this._state !== AFTER_ATTRIBUTE_NAME &&\n        this._state !== IN_ATTRIBUTE_NAME &&\n        this._state !== IN_ATTRIBUTE_VALUE_SQ &&\n        this._state !== IN_ATTRIBUTE_VALUE_DQ &&\n        this._state !== IN_ATTRIBUTE_VALUE_NQ &&\n        this._state !== IN_CLOSING_TAG_NAME\n    ) {\n        this._cbs.ontext(data);\n    }\n    //else, ignore remaining data\n    //TODO add a way to remove current tag\n};\n\nTokenizer.prototype.reset = function() {\n    Tokenizer.call(\n        this,\n        { xmlMode: this._xmlMode, decodeEntities: this._decodeEntities },\n        this._cbs\n    );\n};\n\nTokenizer.prototype.getAbsoluteIndex = function() {\n    return this._bufferOffset + this._index;\n};\n\nTokenizer.prototype._getSection = function() {\n    return this._buffer.substring(this._sectionStart, this._index);\n};\n\nTokenizer.prototype._emitToken = function(name) {\n    this._cbs[name](this._getSection());\n    this._sectionStart = -1;\n};\n\nTokenizer.prototype._emitPartial = function(value) {\n    if (this._baseState !== TEXT) {\n        this._cbs.onattribdata(value); //TODO implement the new event\n    } else {\n        this._cbs.ontext(value);\n    }\n};\n\n\n//# sourceURL=webpack:///./node_modules/htmlparser2/lib/Tokenizer.js?')},function(module,exports,__webpack_require__){eval('var decodeMap = __webpack_require__(349);\n\nmodule.exports = decodeCodePoint;\n\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return "\\uFFFD";\n    }\n\n    if (codePoint in decodeMap) {\n        codePoint = decodeMap[codePoint];\n    }\n\n    var output = "";\n\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n\n    output += String.fromCharCode(codePoint);\n    return output;\n}\n\n\n//# sourceURL=webpack:///./node_modules/entities/lib/decode_codepoint.js?')},function(module){eval('module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376};\n\n//# sourceURL=webpack:///./node_modules/entities/maps/decode.json?')},function(module){eval('module.exports = {"Aacute":"Á","aacute":"á","Abreve":"Ă","abreve":"ă","ac":"∾","acd":"∿","acE":"∾̳","Acirc":"Â","acirc":"â","acute":"´","Acy":"А","acy":"а","AElig":"Æ","aelig":"æ","af":"⁡","Afr":"𝔄","afr":"𝔞","Agrave":"À","agrave":"à","alefsym":"ℵ","aleph":"ℵ","Alpha":"Α","alpha":"α","Amacr":"Ā","amacr":"ā","amalg":"⨿","amp":"&","AMP":"&","andand":"⩕","And":"⩓","and":"∧","andd":"⩜","andslope":"⩘","andv":"⩚","ang":"∠","ange":"⦤","angle":"∠","angmsdaa":"⦨","angmsdab":"⦩","angmsdac":"⦪","angmsdad":"⦫","angmsdae":"⦬","angmsdaf":"⦭","angmsdag":"⦮","angmsdah":"⦯","angmsd":"∡","angrt":"∟","angrtvb":"⊾","angrtvbd":"⦝","angsph":"∢","angst":"Å","angzarr":"⍼","Aogon":"Ą","aogon":"ą","Aopf":"𝔸","aopf":"𝕒","apacir":"⩯","ap":"≈","apE":"⩰","ape":"≊","apid":"≋","apos":"\'","ApplyFunction":"⁡","approx":"≈","approxeq":"≊","Aring":"Å","aring":"å","Ascr":"𝒜","ascr":"𝒶","Assign":"≔","ast":"*","asymp":"≈","asympeq":"≍","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","awconint":"∳","awint":"⨑","backcong":"≌","backepsilon":"϶","backprime":"‵","backsim":"∽","backsimeq":"⋍","Backslash":"∖","Barv":"⫧","barvee":"⊽","barwed":"⌅","Barwed":"⌆","barwedge":"⌅","bbrk":"⎵","bbrktbrk":"⎶","bcong":"≌","Bcy":"Б","bcy":"б","bdquo":"„","becaus":"∵","because":"∵","Because":"∵","bemptyv":"⦰","bepsi":"϶","bernou":"ℬ","Bernoullis":"ℬ","Beta":"Β","beta":"β","beth":"ℶ","between":"≬","Bfr":"𝔅","bfr":"𝔟","bigcap":"⋂","bigcirc":"◯","bigcup":"⋃","bigodot":"⨀","bigoplus":"⨁","bigotimes":"⨂","bigsqcup":"⨆","bigstar":"★","bigtriangledown":"▽","bigtriangleup":"△","biguplus":"⨄","bigvee":"⋁","bigwedge":"⋀","bkarow":"⤍","blacklozenge":"⧫","blacksquare":"▪","blacktriangle":"▴","blacktriangledown":"▾","blacktriangleleft":"◂","blacktriangleright":"▸","blank":"␣","blk12":"▒","blk14":"░","blk34":"▓","block":"█","bne":"=⃥","bnequiv":"≡⃥","bNot":"⫭","bnot":"⌐","Bopf":"𝔹","bopf":"𝕓","bot":"⊥","bottom":"⊥","bowtie":"⋈","boxbox":"⧉","boxdl":"┐","boxdL":"╕","boxDl":"╖","boxDL":"╗","boxdr":"┌","boxdR":"╒","boxDr":"╓","boxDR":"╔","boxh":"─","boxH":"═","boxhd":"┬","boxHd":"╤","boxhD":"╥","boxHD":"╦","boxhu":"┴","boxHu":"╧","boxhU":"╨","boxHU":"╩","boxminus":"⊟","boxplus":"⊞","boxtimes":"⊠","boxul":"┘","boxuL":"╛","boxUl":"╜","boxUL":"╝","boxur":"└","boxuR":"╘","boxUr":"╙","boxUR":"╚","boxv":"│","boxV":"║","boxvh":"┼","boxvH":"╪","boxVh":"╫","boxVH":"╬","boxvl":"┤","boxvL":"╡","boxVl":"╢","boxVL":"╣","boxvr":"├","boxvR":"╞","boxVr":"╟","boxVR":"╠","bprime":"‵","breve":"˘","Breve":"˘","brvbar":"¦","bscr":"𝒷","Bscr":"ℬ","bsemi":"⁏","bsim":"∽","bsime":"⋍","bsolb":"⧅","bsol":"\\\\","bsolhsub":"⟈","bull":"•","bullet":"•","bump":"≎","bumpE":"⪮","bumpe":"≏","Bumpeq":"≎","bumpeq":"≏","Cacute":"Ć","cacute":"ć","capand":"⩄","capbrcup":"⩉","capcap":"⩋","cap":"∩","Cap":"⋒","capcup":"⩇","capdot":"⩀","CapitalDifferentialD":"ⅅ","caps":"∩︀","caret":"⁁","caron":"ˇ","Cayleys":"ℭ","ccaps":"⩍","Ccaron":"Č","ccaron":"č","Ccedil":"Ç","ccedil":"ç","Ccirc":"Ĉ","ccirc":"ĉ","Cconint":"∰","ccups":"⩌","ccupssm":"⩐","Cdot":"Ċ","cdot":"ċ","cedil":"¸","Cedilla":"¸","cemptyv":"⦲","cent":"¢","centerdot":"·","CenterDot":"·","cfr":"𝔠","Cfr":"ℭ","CHcy":"Ч","chcy":"ч","check":"✓","checkmark":"✓","Chi":"Χ","chi":"χ","circ":"ˆ","circeq":"≗","circlearrowleft":"↺","circlearrowright":"↻","circledast":"⊛","circledcirc":"⊚","circleddash":"⊝","CircleDot":"⊙","circledR":"®","circledS":"Ⓢ","CircleMinus":"⊖","CirclePlus":"⊕","CircleTimes":"⊗","cir":"○","cirE":"⧃","cire":"≗","cirfnint":"⨐","cirmid":"⫯","cirscir":"⧂","ClockwiseContourIntegral":"∲","CloseCurlyDoubleQuote":"”","CloseCurlyQuote":"’","clubs":"♣","clubsuit":"♣","colon":":","Colon":"∷","Colone":"⩴","colone":"≔","coloneq":"≔","comma":",","commat":"@","comp":"∁","compfn":"∘","complement":"∁","complexes":"ℂ","cong":"≅","congdot":"⩭","Congruent":"≡","conint":"∮","Conint":"∯","ContourIntegral":"∮","copf":"𝕔","Copf":"ℂ","coprod":"∐","Coproduct":"∐","copy":"©","COPY":"©","copysr":"℗","CounterClockwiseContourIntegral":"∳","crarr":"↵","cross":"✗","Cross":"⨯","Cscr":"𝒞","cscr":"𝒸","csub":"⫏","csube":"⫑","csup":"⫐","csupe":"⫒","ctdot":"⋯","cudarrl":"⤸","cudarrr":"⤵","cuepr":"⋞","cuesc":"⋟","cularr":"↶","cularrp":"⤽","cupbrcap":"⩈","cupcap":"⩆","CupCap":"≍","cup":"∪","Cup":"⋓","cupcup":"⩊","cupdot":"⊍","cupor":"⩅","cups":"∪︀","curarr":"↷","curarrm":"⤼","curlyeqprec":"⋞","curlyeqsucc":"⋟","curlyvee":"⋎","curlywedge":"⋏","curren":"¤","curvearrowleft":"↶","curvearrowright":"↷","cuvee":"⋎","cuwed":"⋏","cwconint":"∲","cwint":"∱","cylcty":"⌭","dagger":"†","Dagger":"‡","daleth":"ℸ","darr":"↓","Darr":"↡","dArr":"⇓","dash":"‐","Dashv":"⫤","dashv":"⊣","dbkarow":"⤏","dblac":"˝","Dcaron":"Ď","dcaron":"ď","Dcy":"Д","dcy":"д","ddagger":"‡","ddarr":"⇊","DD":"ⅅ","dd":"ⅆ","DDotrahd":"⤑","ddotseq":"⩷","deg":"°","Del":"∇","Delta":"Δ","delta":"δ","demptyv":"⦱","dfisht":"⥿","Dfr":"𝔇","dfr":"𝔡","dHar":"⥥","dharl":"⇃","dharr":"⇂","DiacriticalAcute":"´","DiacriticalDot":"˙","DiacriticalDoubleAcute":"˝","DiacriticalGrave":"`","DiacriticalTilde":"˜","diam":"⋄","diamond":"⋄","Diamond":"⋄","diamondsuit":"♦","diams":"♦","die":"¨","DifferentialD":"ⅆ","digamma":"ϝ","disin":"⋲","div":"÷","divide":"÷","divideontimes":"⋇","divonx":"⋇","DJcy":"Ђ","djcy":"ђ","dlcorn":"⌞","dlcrop":"⌍","dollar":"$","Dopf":"𝔻","dopf":"𝕕","Dot":"¨","dot":"˙","DotDot":"⃜","doteq":"≐","doteqdot":"≑","DotEqual":"≐","dotminus":"∸","dotplus":"∔","dotsquare":"⊡","doublebarwedge":"⌆","DoubleContourIntegral":"∯","DoubleDot":"¨","DoubleDownArrow":"⇓","DoubleLeftArrow":"⇐","DoubleLeftRightArrow":"⇔","DoubleLeftTee":"⫤","DoubleLongLeftArrow":"⟸","DoubleLongLeftRightArrow":"⟺","DoubleLongRightArrow":"⟹","DoubleRightArrow":"⇒","DoubleRightTee":"⊨","DoubleUpArrow":"⇑","DoubleUpDownArrow":"⇕","DoubleVerticalBar":"∥","DownArrowBar":"⤓","downarrow":"↓","DownArrow":"↓","Downarrow":"⇓","DownArrowUpArrow":"⇵","DownBreve":"̑","downdownarrows":"⇊","downharpoonleft":"⇃","downharpoonright":"⇂","DownLeftRightVector":"⥐","DownLeftTeeVector":"⥞","DownLeftVectorBar":"⥖","DownLeftVector":"↽","DownRightTeeVector":"⥟","DownRightVectorBar":"⥗","DownRightVector":"⇁","DownTeeArrow":"↧","DownTee":"⊤","drbkarow":"⤐","drcorn":"⌟","drcrop":"⌌","Dscr":"𝒟","dscr":"𝒹","DScy":"Ѕ","dscy":"ѕ","dsol":"⧶","Dstrok":"Đ","dstrok":"đ","dtdot":"⋱","dtri":"▿","dtrif":"▾","duarr":"⇵","duhar":"⥯","dwangle":"⦦","DZcy":"Џ","dzcy":"џ","dzigrarr":"⟿","Eacute":"É","eacute":"é","easter":"⩮","Ecaron":"Ě","ecaron":"ě","Ecirc":"Ê","ecirc":"ê","ecir":"≖","ecolon":"≕","Ecy":"Э","ecy":"э","eDDot":"⩷","Edot":"Ė","edot":"ė","eDot":"≑","ee":"ⅇ","efDot":"≒","Efr":"𝔈","efr":"𝔢","eg":"⪚","Egrave":"È","egrave":"è","egs":"⪖","egsdot":"⪘","el":"⪙","Element":"∈","elinters":"⏧","ell":"ℓ","els":"⪕","elsdot":"⪗","Emacr":"Ē","emacr":"ē","empty":"∅","emptyset":"∅","EmptySmallSquare":"◻","emptyv":"∅","EmptyVerySmallSquare":"▫","emsp13":" ","emsp14":" ","emsp":" ","ENG":"Ŋ","eng":"ŋ","ensp":" ","Eogon":"Ę","eogon":"ę","Eopf":"𝔼","eopf":"𝕖","epar":"⋕","eparsl":"⧣","eplus":"⩱","epsi":"ε","Epsilon":"Ε","epsilon":"ε","epsiv":"ϵ","eqcirc":"≖","eqcolon":"≕","eqsim":"≂","eqslantgtr":"⪖","eqslantless":"⪕","Equal":"⩵","equals":"=","EqualTilde":"≂","equest":"≟","Equilibrium":"⇌","equiv":"≡","equivDD":"⩸","eqvparsl":"⧥","erarr":"⥱","erDot":"≓","escr":"ℯ","Escr":"ℰ","esdot":"≐","Esim":"⩳","esim":"≂","Eta":"Η","eta":"η","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","euro":"€","excl":"!","exist":"∃","Exists":"∃","expectation":"ℰ","exponentiale":"ⅇ","ExponentialE":"ⅇ","fallingdotseq":"≒","Fcy":"Ф","fcy":"ф","female":"♀","ffilig":"ﬃ","fflig":"ﬀ","ffllig":"ﬄ","Ffr":"𝔉","ffr":"𝔣","filig":"ﬁ","FilledSmallSquare":"◼","FilledVerySmallSquare":"▪","fjlig":"fj","flat":"♭","fllig":"ﬂ","fltns":"▱","fnof":"ƒ","Fopf":"𝔽","fopf":"𝕗","forall":"∀","ForAll":"∀","fork":"⋔","forkv":"⫙","Fouriertrf":"ℱ","fpartint":"⨍","frac12":"½","frac13":"⅓","frac14":"¼","frac15":"⅕","frac16":"⅙","frac18":"⅛","frac23":"⅔","frac25":"⅖","frac34":"¾","frac35":"⅗","frac38":"⅜","frac45":"⅘","frac56":"⅚","frac58":"⅝","frac78":"⅞","frasl":"⁄","frown":"⌢","fscr":"𝒻","Fscr":"ℱ","gacute":"ǵ","Gamma":"Γ","gamma":"γ","Gammad":"Ϝ","gammad":"ϝ","gap":"⪆","Gbreve":"Ğ","gbreve":"ğ","Gcedil":"Ģ","Gcirc":"Ĝ","gcirc":"ĝ","Gcy":"Г","gcy":"г","Gdot":"Ġ","gdot":"ġ","ge":"≥","gE":"≧","gEl":"⪌","gel":"⋛","geq":"≥","geqq":"≧","geqslant":"⩾","gescc":"⪩","ges":"⩾","gesdot":"⪀","gesdoto":"⪂","gesdotol":"⪄","gesl":"⋛︀","gesles":"⪔","Gfr":"𝔊","gfr":"𝔤","gg":"≫","Gg":"⋙","ggg":"⋙","gimel":"ℷ","GJcy":"Ѓ","gjcy":"ѓ","gla":"⪥","gl":"≷","glE":"⪒","glj":"⪤","gnap":"⪊","gnapprox":"⪊","gne":"⪈","gnE":"≩","gneq":"⪈","gneqq":"≩","gnsim":"⋧","Gopf":"𝔾","gopf":"𝕘","grave":"`","GreaterEqual":"≥","GreaterEqualLess":"⋛","GreaterFullEqual":"≧","GreaterGreater":"⪢","GreaterLess":"≷","GreaterSlantEqual":"⩾","GreaterTilde":"≳","Gscr":"𝒢","gscr":"ℊ","gsim":"≳","gsime":"⪎","gsiml":"⪐","gtcc":"⪧","gtcir":"⩺","gt":">","GT":">","Gt":"≫","gtdot":"⋗","gtlPar":"⦕","gtquest":"⩼","gtrapprox":"⪆","gtrarr":"⥸","gtrdot":"⋗","gtreqless":"⋛","gtreqqless":"⪌","gtrless":"≷","gtrsim":"≳","gvertneqq":"≩︀","gvnE":"≩︀","Hacek":"ˇ","hairsp":" ","half":"½","hamilt":"ℋ","HARDcy":"Ъ","hardcy":"ъ","harrcir":"⥈","harr":"↔","hArr":"⇔","harrw":"↭","Hat":"^","hbar":"ℏ","Hcirc":"Ĥ","hcirc":"ĥ","hearts":"♥","heartsuit":"♥","hellip":"…","hercon":"⊹","hfr":"𝔥","Hfr":"ℌ","HilbertSpace":"ℋ","hksearow":"⤥","hkswarow":"⤦","hoarr":"⇿","homtht":"∻","hookleftarrow":"↩","hookrightarrow":"↪","hopf":"𝕙","Hopf":"ℍ","horbar":"―","HorizontalLine":"─","hscr":"𝒽","Hscr":"ℋ","hslash":"ℏ","Hstrok":"Ħ","hstrok":"ħ","HumpDownHump":"≎","HumpEqual":"≏","hybull":"⁃","hyphen":"‐","Iacute":"Í","iacute":"í","ic":"⁣","Icirc":"Î","icirc":"î","Icy":"И","icy":"и","Idot":"İ","IEcy":"Е","iecy":"е","iexcl":"¡","iff":"⇔","ifr":"𝔦","Ifr":"ℑ","Igrave":"Ì","igrave":"ì","ii":"ⅈ","iiiint":"⨌","iiint":"∭","iinfin":"⧜","iiota":"℩","IJlig":"Ĳ","ijlig":"ĳ","Imacr":"Ī","imacr":"ī","image":"ℑ","ImaginaryI":"ⅈ","imagline":"ℐ","imagpart":"ℑ","imath":"ı","Im":"ℑ","imof":"⊷","imped":"Ƶ","Implies":"⇒","incare":"℅","in":"∈","infin":"∞","infintie":"⧝","inodot":"ı","intcal":"⊺","int":"∫","Int":"∬","integers":"ℤ","Integral":"∫","intercal":"⊺","Intersection":"⋂","intlarhk":"⨗","intprod":"⨼","InvisibleComma":"⁣","InvisibleTimes":"⁢","IOcy":"Ё","iocy":"ё","Iogon":"Į","iogon":"į","Iopf":"𝕀","iopf":"𝕚","Iota":"Ι","iota":"ι","iprod":"⨼","iquest":"¿","iscr":"𝒾","Iscr":"ℐ","isin":"∈","isindot":"⋵","isinE":"⋹","isins":"⋴","isinsv":"⋳","isinv":"∈","it":"⁢","Itilde":"Ĩ","itilde":"ĩ","Iukcy":"І","iukcy":"і","Iuml":"Ï","iuml":"ï","Jcirc":"Ĵ","jcirc":"ĵ","Jcy":"Й","jcy":"й","Jfr":"𝔍","jfr":"𝔧","jmath":"ȷ","Jopf":"𝕁","jopf":"𝕛","Jscr":"𝒥","jscr":"𝒿","Jsercy":"Ј","jsercy":"ј","Jukcy":"Є","jukcy":"є","Kappa":"Κ","kappa":"κ","kappav":"ϰ","Kcedil":"Ķ","kcedil":"ķ","Kcy":"К","kcy":"к","Kfr":"𝔎","kfr":"𝔨","kgreen":"ĸ","KHcy":"Х","khcy":"х","KJcy":"Ќ","kjcy":"ќ","Kopf":"𝕂","kopf":"𝕜","Kscr":"𝒦","kscr":"𝓀","lAarr":"⇚","Lacute":"Ĺ","lacute":"ĺ","laemptyv":"⦴","lagran":"ℒ","Lambda":"Λ","lambda":"λ","lang":"⟨","Lang":"⟪","langd":"⦑","langle":"⟨","lap":"⪅","Laplacetrf":"ℒ","laquo":"«","larrb":"⇤","larrbfs":"⤟","larr":"←","Larr":"↞","lArr":"⇐","larrfs":"⤝","larrhk":"↩","larrlp":"↫","larrpl":"⤹","larrsim":"⥳","larrtl":"↢","latail":"⤙","lAtail":"⤛","lat":"⪫","late":"⪭","lates":"⪭︀","lbarr":"⤌","lBarr":"⤎","lbbrk":"❲","lbrace":"{","lbrack":"[","lbrke":"⦋","lbrksld":"⦏","lbrkslu":"⦍","Lcaron":"Ľ","lcaron":"ľ","Lcedil":"Ļ","lcedil":"ļ","lceil":"⌈","lcub":"{","Lcy":"Л","lcy":"л","ldca":"⤶","ldquo":"“","ldquor":"„","ldrdhar":"⥧","ldrushar":"⥋","ldsh":"↲","le":"≤","lE":"≦","LeftAngleBracket":"⟨","LeftArrowBar":"⇤","leftarrow":"←","LeftArrow":"←","Leftarrow":"⇐","LeftArrowRightArrow":"⇆","leftarrowtail":"↢","LeftCeiling":"⌈","LeftDoubleBracket":"⟦","LeftDownTeeVector":"⥡","LeftDownVectorBar":"⥙","LeftDownVector":"⇃","LeftFloor":"⌊","leftharpoondown":"↽","leftharpoonup":"↼","leftleftarrows":"⇇","leftrightarrow":"↔","LeftRightArrow":"↔","Leftrightarrow":"⇔","leftrightarrows":"⇆","leftrightharpoons":"⇋","leftrightsquigarrow":"↭","LeftRightVector":"⥎","LeftTeeArrow":"↤","LeftTee":"⊣","LeftTeeVector":"⥚","leftthreetimes":"⋋","LeftTriangleBar":"⧏","LeftTriangle":"⊲","LeftTriangleEqual":"⊴","LeftUpDownVector":"⥑","LeftUpTeeVector":"⥠","LeftUpVectorBar":"⥘","LeftUpVector":"↿","LeftVectorBar":"⥒","LeftVector":"↼","lEg":"⪋","leg":"⋚","leq":"≤","leqq":"≦","leqslant":"⩽","lescc":"⪨","les":"⩽","lesdot":"⩿","lesdoto":"⪁","lesdotor":"⪃","lesg":"⋚︀","lesges":"⪓","lessapprox":"⪅","lessdot":"⋖","lesseqgtr":"⋚","lesseqqgtr":"⪋","LessEqualGreater":"⋚","LessFullEqual":"≦","LessGreater":"≶","lessgtr":"≶","LessLess":"⪡","lesssim":"≲","LessSlantEqual":"⩽","LessTilde":"≲","lfisht":"⥼","lfloor":"⌊","Lfr":"𝔏","lfr":"𝔩","lg":"≶","lgE":"⪑","lHar":"⥢","lhard":"↽","lharu":"↼","lharul":"⥪","lhblk":"▄","LJcy":"Љ","ljcy":"љ","llarr":"⇇","ll":"≪","Ll":"⋘","llcorner":"⌞","Lleftarrow":"⇚","llhard":"⥫","lltri":"◺","Lmidot":"Ŀ","lmidot":"ŀ","lmoustache":"⎰","lmoust":"⎰","lnap":"⪉","lnapprox":"⪉","lne":"⪇","lnE":"≨","lneq":"⪇","lneqq":"≨","lnsim":"⋦","loang":"⟬","loarr":"⇽","lobrk":"⟦","longleftarrow":"⟵","LongLeftArrow":"⟵","Longleftarrow":"⟸","longleftrightarrow":"⟷","LongLeftRightArrow":"⟷","Longleftrightarrow":"⟺","longmapsto":"⟼","longrightarrow":"⟶","LongRightArrow":"⟶","Longrightarrow":"⟹","looparrowleft":"↫","looparrowright":"↬","lopar":"⦅","Lopf":"𝕃","lopf":"𝕝","loplus":"⨭","lotimes":"⨴","lowast":"∗","lowbar":"_","LowerLeftArrow":"↙","LowerRightArrow":"↘","loz":"◊","lozenge":"◊","lozf":"⧫","lpar":"(","lparlt":"⦓","lrarr":"⇆","lrcorner":"⌟","lrhar":"⇋","lrhard":"⥭","lrm":"‎","lrtri":"⊿","lsaquo":"‹","lscr":"𝓁","Lscr":"ℒ","lsh":"↰","Lsh":"↰","lsim":"≲","lsime":"⪍","lsimg":"⪏","lsqb":"[","lsquo":"‘","lsquor":"‚","Lstrok":"Ł","lstrok":"ł","ltcc":"⪦","ltcir":"⩹","lt":"<","LT":"<","Lt":"≪","ltdot":"⋖","lthree":"⋋","ltimes":"⋉","ltlarr":"⥶","ltquest":"⩻","ltri":"◃","ltrie":"⊴","ltrif":"◂","ltrPar":"⦖","lurdshar":"⥊","luruhar":"⥦","lvertneqq":"≨︀","lvnE":"≨︀","macr":"¯","male":"♂","malt":"✠","maltese":"✠","Map":"⤅","map":"↦","mapsto":"↦","mapstodown":"↧","mapstoleft":"↤","mapstoup":"↥","marker":"▮","mcomma":"⨩","Mcy":"М","mcy":"м","mdash":"—","mDDot":"∺","measuredangle":"∡","MediumSpace":" ","Mellintrf":"ℳ","Mfr":"𝔐","mfr":"𝔪","mho":"℧","micro":"µ","midast":"*","midcir":"⫰","mid":"∣","middot":"·","minusb":"⊟","minus":"−","minusd":"∸","minusdu":"⨪","MinusPlus":"∓","mlcp":"⫛","mldr":"…","mnplus":"∓","models":"⊧","Mopf":"𝕄","mopf":"𝕞","mp":"∓","mscr":"𝓂","Mscr":"ℳ","mstpos":"∾","Mu":"Μ","mu":"μ","multimap":"⊸","mumap":"⊸","nabla":"∇","Nacute":"Ń","nacute":"ń","nang":"∠⃒","nap":"≉","napE":"⩰̸","napid":"≋̸","napos":"ŉ","napprox":"≉","natural":"♮","naturals":"ℕ","natur":"♮","nbsp":" ","nbump":"≎̸","nbumpe":"≏̸","ncap":"⩃","Ncaron":"Ň","ncaron":"ň","Ncedil":"Ņ","ncedil":"ņ","ncong":"≇","ncongdot":"⩭̸","ncup":"⩂","Ncy":"Н","ncy":"н","ndash":"–","nearhk":"⤤","nearr":"↗","neArr":"⇗","nearrow":"↗","ne":"≠","nedot":"≐̸","NegativeMediumSpace":"​","NegativeThickSpace":"​","NegativeThinSpace":"​","NegativeVeryThinSpace":"​","nequiv":"≢","nesear":"⤨","nesim":"≂̸","NestedGreaterGreater":"≫","NestedLessLess":"≪","NewLine":"\\n","nexist":"∄","nexists":"∄","Nfr":"𝔑","nfr":"𝔫","ngE":"≧̸","nge":"≱","ngeq":"≱","ngeqq":"≧̸","ngeqslant":"⩾̸","nges":"⩾̸","nGg":"⋙̸","ngsim":"≵","nGt":"≫⃒","ngt":"≯","ngtr":"≯","nGtv":"≫̸","nharr":"↮","nhArr":"⇎","nhpar":"⫲","ni":"∋","nis":"⋼","nisd":"⋺","niv":"∋","NJcy":"Њ","njcy":"њ","nlarr":"↚","nlArr":"⇍","nldr":"‥","nlE":"≦̸","nle":"≰","nleftarrow":"↚","nLeftarrow":"⇍","nleftrightarrow":"↮","nLeftrightarrow":"⇎","nleq":"≰","nleqq":"≦̸","nleqslant":"⩽̸","nles":"⩽̸","nless":"≮","nLl":"⋘̸","nlsim":"≴","nLt":"≪⃒","nlt":"≮","nltri":"⋪","nltrie":"⋬","nLtv":"≪̸","nmid":"∤","NoBreak":"⁠","NonBreakingSpace":" ","nopf":"𝕟","Nopf":"ℕ","Not":"⫬","not":"¬","NotCongruent":"≢","NotCupCap":"≭","NotDoubleVerticalBar":"∦","NotElement":"∉","NotEqual":"≠","NotEqualTilde":"≂̸","NotExists":"∄","NotGreater":"≯","NotGreaterEqual":"≱","NotGreaterFullEqual":"≧̸","NotGreaterGreater":"≫̸","NotGreaterLess":"≹","NotGreaterSlantEqual":"⩾̸","NotGreaterTilde":"≵","NotHumpDownHump":"≎̸","NotHumpEqual":"≏̸","notin":"∉","notindot":"⋵̸","notinE":"⋹̸","notinva":"∉","notinvb":"⋷","notinvc":"⋶","NotLeftTriangleBar":"⧏̸","NotLeftTriangle":"⋪","NotLeftTriangleEqual":"⋬","NotLess":"≮","NotLessEqual":"≰","NotLessGreater":"≸","NotLessLess":"≪̸","NotLessSlantEqual":"⩽̸","NotLessTilde":"≴","NotNestedGreaterGreater":"⪢̸","NotNestedLessLess":"⪡̸","notni":"∌","notniva":"∌","notnivb":"⋾","notnivc":"⋽","NotPrecedes":"⊀","NotPrecedesEqual":"⪯̸","NotPrecedesSlantEqual":"⋠","NotReverseElement":"∌","NotRightTriangleBar":"⧐̸","NotRightTriangle":"⋫","NotRightTriangleEqual":"⋭","NotSquareSubset":"⊏̸","NotSquareSubsetEqual":"⋢","NotSquareSuperset":"⊐̸","NotSquareSupersetEqual":"⋣","NotSubset":"⊂⃒","NotSubsetEqual":"⊈","NotSucceeds":"⊁","NotSucceedsEqual":"⪰̸","NotSucceedsSlantEqual":"⋡","NotSucceedsTilde":"≿̸","NotSuperset":"⊃⃒","NotSupersetEqual":"⊉","NotTilde":"≁","NotTildeEqual":"≄","NotTildeFullEqual":"≇","NotTildeTilde":"≉","NotVerticalBar":"∤","nparallel":"∦","npar":"∦","nparsl":"⫽⃥","npart":"∂̸","npolint":"⨔","npr":"⊀","nprcue":"⋠","nprec":"⊀","npreceq":"⪯̸","npre":"⪯̸","nrarrc":"⤳̸","nrarr":"↛","nrArr":"⇏","nrarrw":"↝̸","nrightarrow":"↛","nRightarrow":"⇏","nrtri":"⋫","nrtrie":"⋭","nsc":"⊁","nsccue":"⋡","nsce":"⪰̸","Nscr":"𝒩","nscr":"𝓃","nshortmid":"∤","nshortparallel":"∦","nsim":"≁","nsime":"≄","nsimeq":"≄","nsmid":"∤","nspar":"∦","nsqsube":"⋢","nsqsupe":"⋣","nsub":"⊄","nsubE":"⫅̸","nsube":"⊈","nsubset":"⊂⃒","nsubseteq":"⊈","nsubseteqq":"⫅̸","nsucc":"⊁","nsucceq":"⪰̸","nsup":"⊅","nsupE":"⫆̸","nsupe":"⊉","nsupset":"⊃⃒","nsupseteq":"⊉","nsupseteqq":"⫆̸","ntgl":"≹","Ntilde":"Ñ","ntilde":"ñ","ntlg":"≸","ntriangleleft":"⋪","ntrianglelefteq":"⋬","ntriangleright":"⋫","ntrianglerighteq":"⋭","Nu":"Ν","nu":"ν","num":"#","numero":"№","numsp":" ","nvap":"≍⃒","nvdash":"⊬","nvDash":"⊭","nVdash":"⊮","nVDash":"⊯","nvge":"≥⃒","nvgt":">⃒","nvHarr":"⤄","nvinfin":"⧞","nvlArr":"⤂","nvle":"≤⃒","nvlt":"<⃒","nvltrie":"⊴⃒","nvrArr":"⤃","nvrtrie":"⊵⃒","nvsim":"∼⃒","nwarhk":"⤣","nwarr":"↖","nwArr":"⇖","nwarrow":"↖","nwnear":"⤧","Oacute":"Ó","oacute":"ó","oast":"⊛","Ocirc":"Ô","ocirc":"ô","ocir":"⊚","Ocy":"О","ocy":"о","odash":"⊝","Odblac":"Ő","odblac":"ő","odiv":"⨸","odot":"⊙","odsold":"⦼","OElig":"Œ","oelig":"œ","ofcir":"⦿","Ofr":"𝔒","ofr":"𝔬","ogon":"˛","Ograve":"Ò","ograve":"ò","ogt":"⧁","ohbar":"⦵","ohm":"Ω","oint":"∮","olarr":"↺","olcir":"⦾","olcross":"⦻","oline":"‾","olt":"⧀","Omacr":"Ō","omacr":"ō","Omega":"Ω","omega":"ω","Omicron":"Ο","omicron":"ο","omid":"⦶","ominus":"⊖","Oopf":"𝕆","oopf":"𝕠","opar":"⦷","OpenCurlyDoubleQuote":"“","OpenCurlyQuote":"‘","operp":"⦹","oplus":"⊕","orarr":"↻","Or":"⩔","or":"∨","ord":"⩝","order":"ℴ","orderof":"ℴ","ordf":"ª","ordm":"º","origof":"⊶","oror":"⩖","orslope":"⩗","orv":"⩛","oS":"Ⓢ","Oscr":"𝒪","oscr":"ℴ","Oslash":"Ø","oslash":"ø","osol":"⊘","Otilde":"Õ","otilde":"õ","otimesas":"⨶","Otimes":"⨷","otimes":"⊗","Ouml":"Ö","ouml":"ö","ovbar":"⌽","OverBar":"‾","OverBrace":"⏞","OverBracket":"⎴","OverParenthesis":"⏜","para":"¶","parallel":"∥","par":"∥","parsim":"⫳","parsl":"⫽","part":"∂","PartialD":"∂","Pcy":"П","pcy":"п","percnt":"%","period":".","permil":"‰","perp":"⊥","pertenk":"‱","Pfr":"𝔓","pfr":"𝔭","Phi":"Φ","phi":"φ","phiv":"ϕ","phmmat":"ℳ","phone":"☎","Pi":"Π","pi":"π","pitchfork":"⋔","piv":"ϖ","planck":"ℏ","planckh":"ℎ","plankv":"ℏ","plusacir":"⨣","plusb":"⊞","pluscir":"⨢","plus":"+","plusdo":"∔","plusdu":"⨥","pluse":"⩲","PlusMinus":"±","plusmn":"±","plussim":"⨦","plustwo":"⨧","pm":"±","Poincareplane":"ℌ","pointint":"⨕","popf":"𝕡","Popf":"ℙ","pound":"£","prap":"⪷","Pr":"⪻","pr":"≺","prcue":"≼","precapprox":"⪷","prec":"≺","preccurlyeq":"≼","Precedes":"≺","PrecedesEqual":"⪯","PrecedesSlantEqual":"≼","PrecedesTilde":"≾","preceq":"⪯","precnapprox":"⪹","precneqq":"⪵","precnsim":"⋨","pre":"⪯","prE":"⪳","precsim":"≾","prime":"′","Prime":"″","primes":"ℙ","prnap":"⪹","prnE":"⪵","prnsim":"⋨","prod":"∏","Product":"∏","profalar":"⌮","profline":"⌒","profsurf":"⌓","prop":"∝","Proportional":"∝","Proportion":"∷","propto":"∝","prsim":"≾","prurel":"⊰","Pscr":"𝒫","pscr":"𝓅","Psi":"Ψ","psi":"ψ","puncsp":" ","Qfr":"𝔔","qfr":"𝔮","qint":"⨌","qopf":"𝕢","Qopf":"ℚ","qprime":"⁗","Qscr":"𝒬","qscr":"𝓆","quaternions":"ℍ","quatint":"⨖","quest":"?","questeq":"≟","quot":"\\"","QUOT":"\\"","rAarr":"⇛","race":"∽̱","Racute":"Ŕ","racute":"ŕ","radic":"√","raemptyv":"⦳","rang":"⟩","Rang":"⟫","rangd":"⦒","range":"⦥","rangle":"⟩","raquo":"»","rarrap":"⥵","rarrb":"⇥","rarrbfs":"⤠","rarrc":"⤳","rarr":"→","Rarr":"↠","rArr":"⇒","rarrfs":"⤞","rarrhk":"↪","rarrlp":"↬","rarrpl":"⥅","rarrsim":"⥴","Rarrtl":"⤖","rarrtl":"↣","rarrw":"↝","ratail":"⤚","rAtail":"⤜","ratio":"∶","rationals":"ℚ","rbarr":"⤍","rBarr":"⤏","RBarr":"⤐","rbbrk":"❳","rbrace":"}","rbrack":"]","rbrke":"⦌","rbrksld":"⦎","rbrkslu":"⦐","Rcaron":"Ř","rcaron":"ř","Rcedil":"Ŗ","rcedil":"ŗ","rceil":"⌉","rcub":"}","Rcy":"Р","rcy":"р","rdca":"⤷","rdldhar":"⥩","rdquo":"”","rdquor":"”","rdsh":"↳","real":"ℜ","realine":"ℛ","realpart":"ℜ","reals":"ℝ","Re":"ℜ","rect":"▭","reg":"®","REG":"®","ReverseElement":"∋","ReverseEquilibrium":"⇋","ReverseUpEquilibrium":"⥯","rfisht":"⥽","rfloor":"⌋","rfr":"𝔯","Rfr":"ℜ","rHar":"⥤","rhard":"⇁","rharu":"⇀","rharul":"⥬","Rho":"Ρ","rho":"ρ","rhov":"ϱ","RightAngleBracket":"⟩","RightArrowBar":"⇥","rightarrow":"→","RightArrow":"→","Rightarrow":"⇒","RightArrowLeftArrow":"⇄","rightarrowtail":"↣","RightCeiling":"⌉","RightDoubleBracket":"⟧","RightDownTeeVector":"⥝","RightDownVectorBar":"⥕","RightDownVector":"⇂","RightFloor":"⌋","rightharpoondown":"⇁","rightharpoonup":"⇀","rightleftarrows":"⇄","rightleftharpoons":"⇌","rightrightarrows":"⇉","rightsquigarrow":"↝","RightTeeArrow":"↦","RightTee":"⊢","RightTeeVector":"⥛","rightthreetimes":"⋌","RightTriangleBar":"⧐","RightTriangle":"⊳","RightTriangleEqual":"⊵","RightUpDownVector":"⥏","RightUpTeeVector":"⥜","RightUpVectorBar":"⥔","RightUpVector":"↾","RightVectorBar":"⥓","RightVector":"⇀","ring":"˚","risingdotseq":"≓","rlarr":"⇄","rlhar":"⇌","rlm":"‏","rmoustache":"⎱","rmoust":"⎱","rnmid":"⫮","roang":"⟭","roarr":"⇾","robrk":"⟧","ropar":"⦆","ropf":"𝕣","Ropf":"ℝ","roplus":"⨮","rotimes":"⨵","RoundImplies":"⥰","rpar":")","rpargt":"⦔","rppolint":"⨒","rrarr":"⇉","Rrightarrow":"⇛","rsaquo":"›","rscr":"𝓇","Rscr":"ℛ","rsh":"↱","Rsh":"↱","rsqb":"]","rsquo":"’","rsquor":"’","rthree":"⋌","rtimes":"⋊","rtri":"▹","rtrie":"⊵","rtrif":"▸","rtriltri":"⧎","RuleDelayed":"⧴","ruluhar":"⥨","rx":"℞","Sacute":"Ś","sacute":"ś","sbquo":"‚","scap":"⪸","Scaron":"Š","scaron":"š","Sc":"⪼","sc":"≻","sccue":"≽","sce":"⪰","scE":"⪴","Scedil":"Ş","scedil":"ş","Scirc":"Ŝ","scirc":"ŝ","scnap":"⪺","scnE":"⪶","scnsim":"⋩","scpolint":"⨓","scsim":"≿","Scy":"С","scy":"с","sdotb":"⊡","sdot":"⋅","sdote":"⩦","searhk":"⤥","searr":"↘","seArr":"⇘","searrow":"↘","sect":"§","semi":";","seswar":"⤩","setminus":"∖","setmn":"∖","sext":"✶","Sfr":"𝔖","sfr":"𝔰","sfrown":"⌢","sharp":"♯","SHCHcy":"Щ","shchcy":"щ","SHcy":"Ш","shcy":"ш","ShortDownArrow":"↓","ShortLeftArrow":"←","shortmid":"∣","shortparallel":"∥","ShortRightArrow":"→","ShortUpArrow":"↑","shy":"­","Sigma":"Σ","sigma":"σ","sigmaf":"ς","sigmav":"ς","sim":"∼","simdot":"⩪","sime":"≃","simeq":"≃","simg":"⪞","simgE":"⪠","siml":"⪝","simlE":"⪟","simne":"≆","simplus":"⨤","simrarr":"⥲","slarr":"←","SmallCircle":"∘","smallsetminus":"∖","smashp":"⨳","smeparsl":"⧤","smid":"∣","smile":"⌣","smt":"⪪","smte":"⪬","smtes":"⪬︀","SOFTcy":"Ь","softcy":"ь","solbar":"⌿","solb":"⧄","sol":"/","Sopf":"𝕊","sopf":"𝕤","spades":"♠","spadesuit":"♠","spar":"∥","sqcap":"⊓","sqcaps":"⊓︀","sqcup":"⊔","sqcups":"⊔︀","Sqrt":"√","sqsub":"⊏","sqsube":"⊑","sqsubset":"⊏","sqsubseteq":"⊑","sqsup":"⊐","sqsupe":"⊒","sqsupset":"⊐","sqsupseteq":"⊒","square":"□","Square":"□","SquareIntersection":"⊓","SquareSubset":"⊏","SquareSubsetEqual":"⊑","SquareSuperset":"⊐","SquareSupersetEqual":"⊒","SquareUnion":"⊔","squarf":"▪","squ":"□","squf":"▪","srarr":"→","Sscr":"𝒮","sscr":"𝓈","ssetmn":"∖","ssmile":"⌣","sstarf":"⋆","Star":"⋆","star":"☆","starf":"★","straightepsilon":"ϵ","straightphi":"ϕ","strns":"¯","sub":"⊂","Sub":"⋐","subdot":"⪽","subE":"⫅","sube":"⊆","subedot":"⫃","submult":"⫁","subnE":"⫋","subne":"⊊","subplus":"⪿","subrarr":"⥹","subset":"⊂","Subset":"⋐","subseteq":"⊆","subseteqq":"⫅","SubsetEqual":"⊆","subsetneq":"⊊","subsetneqq":"⫋","subsim":"⫇","subsub":"⫕","subsup":"⫓","succapprox":"⪸","succ":"≻","succcurlyeq":"≽","Succeeds":"≻","SucceedsEqual":"⪰","SucceedsSlantEqual":"≽","SucceedsTilde":"≿","succeq":"⪰","succnapprox":"⪺","succneqq":"⪶","succnsim":"⋩","succsim":"≿","SuchThat":"∋","sum":"∑","Sum":"∑","sung":"♪","sup1":"¹","sup2":"²","sup3":"³","sup":"⊃","Sup":"⋑","supdot":"⪾","supdsub":"⫘","supE":"⫆","supe":"⊇","supedot":"⫄","Superset":"⊃","SupersetEqual":"⊇","suphsol":"⟉","suphsub":"⫗","suplarr":"⥻","supmult":"⫂","supnE":"⫌","supne":"⊋","supplus":"⫀","supset":"⊃","Supset":"⋑","supseteq":"⊇","supseteqq":"⫆","supsetneq":"⊋","supsetneqq":"⫌","supsim":"⫈","supsub":"⫔","supsup":"⫖","swarhk":"⤦","swarr":"↙","swArr":"⇙","swarrow":"↙","swnwar":"⤪","szlig":"ß","Tab":"\\t","target":"⌖","Tau":"Τ","tau":"τ","tbrk":"⎴","Tcaron":"Ť","tcaron":"ť","Tcedil":"Ţ","tcedil":"ţ","Tcy":"Т","tcy":"т","tdot":"⃛","telrec":"⌕","Tfr":"𝔗","tfr":"𝔱","there4":"∴","therefore":"∴","Therefore":"∴","Theta":"Θ","theta":"θ","thetasym":"ϑ","thetav":"ϑ","thickapprox":"≈","thicksim":"∼","ThickSpace":"  ","ThinSpace":" ","thinsp":" ","thkap":"≈","thksim":"∼","THORN":"Þ","thorn":"þ","tilde":"˜","Tilde":"∼","TildeEqual":"≃","TildeFullEqual":"≅","TildeTilde":"≈","timesbar":"⨱","timesb":"⊠","times":"×","timesd":"⨰","tint":"∭","toea":"⤨","topbot":"⌶","topcir":"⫱","top":"⊤","Topf":"𝕋","topf":"𝕥","topfork":"⫚","tosa":"⤩","tprime":"‴","trade":"™","TRADE":"™","triangle":"▵","triangledown":"▿","triangleleft":"◃","trianglelefteq":"⊴","triangleq":"≜","triangleright":"▹","trianglerighteq":"⊵","tridot":"◬","trie":"≜","triminus":"⨺","TripleDot":"⃛","triplus":"⨹","trisb":"⧍","tritime":"⨻","trpezium":"⏢","Tscr":"𝒯","tscr":"𝓉","TScy":"Ц","tscy":"ц","TSHcy":"Ћ","tshcy":"ћ","Tstrok":"Ŧ","tstrok":"ŧ","twixt":"≬","twoheadleftarrow":"↞","twoheadrightarrow":"↠","Uacute":"Ú","uacute":"ú","uarr":"↑","Uarr":"↟","uArr":"⇑","Uarrocir":"⥉","Ubrcy":"Ў","ubrcy":"ў","Ubreve":"Ŭ","ubreve":"ŭ","Ucirc":"Û","ucirc":"û","Ucy":"У","ucy":"у","udarr":"⇅","Udblac":"Ű","udblac":"ű","udhar":"⥮","ufisht":"⥾","Ufr":"𝔘","ufr":"𝔲","Ugrave":"Ù","ugrave":"ù","uHar":"⥣","uharl":"↿","uharr":"↾","uhblk":"▀","ulcorn":"⌜","ulcorner":"⌜","ulcrop":"⌏","ultri":"◸","Umacr":"Ū","umacr":"ū","uml":"¨","UnderBar":"_","UnderBrace":"⏟","UnderBracket":"⎵","UnderParenthesis":"⏝","Union":"⋃","UnionPlus":"⊎","Uogon":"Ų","uogon":"ų","Uopf":"𝕌","uopf":"𝕦","UpArrowBar":"⤒","uparrow":"↑","UpArrow":"↑","Uparrow":"⇑","UpArrowDownArrow":"⇅","updownarrow":"↕","UpDownArrow":"↕","Updownarrow":"⇕","UpEquilibrium":"⥮","upharpoonleft":"↿","upharpoonright":"↾","uplus":"⊎","UpperLeftArrow":"↖","UpperRightArrow":"↗","upsi":"υ","Upsi":"ϒ","upsih":"ϒ","Upsilon":"Υ","upsilon":"υ","UpTeeArrow":"↥","UpTee":"⊥","upuparrows":"⇈","urcorn":"⌝","urcorner":"⌝","urcrop":"⌎","Uring":"Ů","uring":"ů","urtri":"◹","Uscr":"𝒰","uscr":"𝓊","utdot":"⋰","Utilde":"Ũ","utilde":"ũ","utri":"▵","utrif":"▴","uuarr":"⇈","Uuml":"Ü","uuml":"ü","uwangle":"⦧","vangrt":"⦜","varepsilon":"ϵ","varkappa":"ϰ","varnothing":"∅","varphi":"ϕ","varpi":"ϖ","varpropto":"∝","varr":"↕","vArr":"⇕","varrho":"ϱ","varsigma":"ς","varsubsetneq":"⊊︀","varsubsetneqq":"⫋︀","varsupsetneq":"⊋︀","varsupsetneqq":"⫌︀","vartheta":"ϑ","vartriangleleft":"⊲","vartriangleright":"⊳","vBar":"⫨","Vbar":"⫫","vBarv":"⫩","Vcy":"В","vcy":"в","vdash":"⊢","vDash":"⊨","Vdash":"⊩","VDash":"⊫","Vdashl":"⫦","veebar":"⊻","vee":"∨","Vee":"⋁","veeeq":"≚","vellip":"⋮","verbar":"|","Verbar":"‖","vert":"|","Vert":"‖","VerticalBar":"∣","VerticalLine":"|","VerticalSeparator":"❘","VerticalTilde":"≀","VeryThinSpace":" ","Vfr":"𝔙","vfr":"𝔳","vltri":"⊲","vnsub":"⊂⃒","vnsup":"⊃⃒","Vopf":"𝕍","vopf":"𝕧","vprop":"∝","vrtri":"⊳","Vscr":"𝒱","vscr":"𝓋","vsubnE":"⫋︀","vsubne":"⊊︀","vsupnE":"⫌︀","vsupne":"⊋︀","Vvdash":"⊪","vzigzag":"⦚","Wcirc":"Ŵ","wcirc":"ŵ","wedbar":"⩟","wedge":"∧","Wedge":"⋀","wedgeq":"≙","weierp":"℘","Wfr":"𝔚","wfr":"𝔴","Wopf":"𝕎","wopf":"𝕨","wp":"℘","wr":"≀","wreath":"≀","Wscr":"𝒲","wscr":"𝓌","xcap":"⋂","xcirc":"◯","xcup":"⋃","xdtri":"▽","Xfr":"𝔛","xfr":"𝔵","xharr":"⟷","xhArr":"⟺","Xi":"Ξ","xi":"ξ","xlarr":"⟵","xlArr":"⟸","xmap":"⟼","xnis":"⋻","xodot":"⨀","Xopf":"𝕏","xopf":"𝕩","xoplus":"⨁","xotime":"⨂","xrarr":"⟶","xrArr":"⟹","Xscr":"𝒳","xscr":"𝓍","xsqcup":"⨆","xuplus":"⨄","xutri":"△","xvee":"⋁","xwedge":"⋀","Yacute":"Ý","yacute":"ý","YAcy":"Я","yacy":"я","Ycirc":"Ŷ","ycirc":"ŷ","Ycy":"Ы","ycy":"ы","yen":"¥","Yfr":"𝔜","yfr":"𝔶","YIcy":"Ї","yicy":"ї","Yopf":"𝕐","yopf":"𝕪","Yscr":"𝒴","yscr":"𝓎","YUcy":"Ю","yucy":"ю","yuml":"ÿ","Yuml":"Ÿ","Zacute":"Ź","zacute":"ź","Zcaron":"Ž","zcaron":"ž","Zcy":"З","zcy":"з","Zdot":"Ż","zdot":"ż","zeetrf":"ℨ","ZeroWidthSpace":"​","Zeta":"Ζ","zeta":"ζ","zfr":"𝔷","Zfr":"ℨ","ZHcy":"Ж","zhcy":"ж","zigrarr":"⇝","zopf":"𝕫","Zopf":"ℤ","Zscr":"𝒵","zscr":"𝓏","zwj":"‍","zwnj":"‌"};\n\n//# sourceURL=webpack:///./node_modules/entities/maps/entities.json?')},function(module){eval('module.exports = {"Aacute":"Á","aacute":"á","Acirc":"Â","acirc":"â","acute":"´","AElig":"Æ","aelig":"æ","Agrave":"À","agrave":"à","amp":"&","AMP":"&","Aring":"Å","aring":"å","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","brvbar":"¦","Ccedil":"Ç","ccedil":"ç","cedil":"¸","cent":"¢","copy":"©","COPY":"©","curren":"¤","deg":"°","divide":"÷","Eacute":"É","eacute":"é","Ecirc":"Ê","ecirc":"ê","Egrave":"È","egrave":"è","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","frac12":"½","frac14":"¼","frac34":"¾","gt":">","GT":">","Iacute":"Í","iacute":"í","Icirc":"Î","icirc":"î","iexcl":"¡","Igrave":"Ì","igrave":"ì","iquest":"¿","Iuml":"Ï","iuml":"ï","laquo":"«","lt":"<","LT":"<","macr":"¯","micro":"µ","middot":"·","nbsp":" ","not":"¬","Ntilde":"Ñ","ntilde":"ñ","Oacute":"Ó","oacute":"ó","Ocirc":"Ô","ocirc":"ô","Ograve":"Ò","ograve":"ò","ordf":"ª","ordm":"º","Oslash":"Ø","oslash":"ø","Otilde":"Õ","otilde":"õ","Ouml":"Ö","ouml":"ö","para":"¶","plusmn":"±","pound":"£","quot":"\\"","QUOT":"\\"","raquo":"»","reg":"®","REG":"®","sect":"§","shy":"­","sup1":"¹","sup2":"²","sup3":"³","szlig":"ß","THORN":"Þ","thorn":"þ","times":"×","Uacute":"Ú","uacute":"ú","Ucirc":"Û","ucirc":"û","Ugrave":"Ù","ugrave":"ù","uml":"¨","Uuml":"Ü","uuml":"ü","Yacute":"Ý","yacute":"ý","yen":"¥","yuml":"ÿ"};\n\n//# sourceURL=webpack:///./node_modules/entities/maps/legacy.json?')},function(module){eval('module.exports = {"amp":"&","apos":"\'","gt":">","lt":"<","quot":"\\""};\n\n//# sourceURL=webpack:///./node_modules/entities/maps/xml.json?')},function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack:///./node_modules/events/events.js?")},function(module,exports,__webpack_require__){eval('var ElementType = __webpack_require__(355);\n\nvar re_whitespace = /\\s+/g;\nvar NodePrototype = __webpack_require__(270);\nvar ElementPrototype = __webpack_require__(356);\n\nfunction DomHandler(callback, options, elementCB){\n\tif(typeof callback === "object"){\n\t\telementCB = options;\n\t\toptions = callback;\n\t\tcallback = null;\n\t} else if(typeof options === "function"){\n\t\telementCB = options;\n\t\toptions = defaultOpts;\n\t}\n\tthis._callback = callback;\n\tthis._options = options || defaultOpts;\n\tthis._elementCB = elementCB;\n\tthis.dom = [];\n\tthis._done = false;\n\tthis._tagStack = [];\n\tthis._parser = this._parser || null;\n}\n\n//default options\nvar defaultOpts = {\n\tnormalizeWhitespace: false, //Replace all whitespace with single spaces\n\twithStartIndices: false, //Add startIndex properties to nodes\n\twithEndIndices: false, //Add endIndex properties to nodes\n};\n\nDomHandler.prototype.onparserinit = function(parser){\n\tthis._parser = parser;\n};\n\n//Resets the handler back to starting state\nDomHandler.prototype.onreset = function(){\n\tDomHandler.call(this, this._callback, this._options, this._elementCB);\n};\n\n//Signals the handler that parsing is done\nDomHandler.prototype.onend = function(){\n\tif(this._done) return;\n\tthis._done = true;\n\tthis._parser = null;\n\tthis._handleCallback(null);\n};\n\nDomHandler.prototype._handleCallback =\nDomHandler.prototype.onerror = function(error){\n\tif(typeof this._callback === "function"){\n\t\tthis._callback(error, this.dom);\n\t} else {\n\t\tif(error) throw error;\n\t}\n};\n\nDomHandler.prototype.onclosetag = function(){\n\t//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn\'t match!"));\n\t\n\tvar elem = this._tagStack.pop();\n\n\tif(this._options.withEndIndices && elem){\n\t\telem.endIndex = this._parser.endIndex;\n\t}\n\n\tif(this._elementCB) this._elementCB(elem);\n};\n\nDomHandler.prototype._createDomElement = function(properties){\n\tif (!this._options.withDomLvl1) return properties;\n\n\tvar element;\n\tif (properties.type === "tag") {\n\t\telement = Object.create(ElementPrototype);\n\t} else {\n\t\telement = Object.create(NodePrototype);\n\t}\n\n\tfor (var key in properties) {\n\t\tif (properties.hasOwnProperty(key)) {\n\t\t\telement[key] = properties[key];\n\t\t}\n\t}\n\n\treturn element;\n};\n\nDomHandler.prototype._addDomElement = function(element){\n\tvar parent = this._tagStack[this._tagStack.length - 1];\n\tvar siblings = parent ? parent.children : this.dom;\n\tvar previousSibling = siblings[siblings.length - 1];\n\n\telement.next = null;\n\n\tif(this._options.withStartIndices){\n\t\telement.startIndex = this._parser.startIndex;\n\t}\n\tif(this._options.withEndIndices){\n\t\telement.endIndex = this._parser.endIndex;\n\t}\n\n\tif(previousSibling){\n\t\telement.prev = previousSibling;\n\t\tpreviousSibling.next = element;\n\t} else {\n\t\telement.prev = null;\n\t}\n\n\tsiblings.push(element);\n\telement.parent = parent || null;\n};\n\nDomHandler.prototype.onopentag = function(name, attribs){\n\tvar properties = {\n\t\ttype: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,\n\t\tname: name,\n\t\tattribs: attribs,\n\t\tchildren: []\n\t};\n\n\tvar element = this._createDomElement(properties);\n\n\tthis._addDomElement(element);\n\n\tthis._tagStack.push(element);\n};\n\nDomHandler.prototype.ontext = function(data){\n\t//the ignoreWhitespace is officially dropped, but for now,\n\t//it\'s an alias for normalizeWhitespace\n\tvar normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;\n\n\tvar lastTag;\n\n\tif(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){\n\t\tif(normalize){\n\t\t\tlastTag.data = (lastTag.data + data).replace(re_whitespace, " ");\n\t\t} else {\n\t\t\tlastTag.data += data;\n\t\t}\n\t} else {\n\t\tif(\n\t\t\tthis._tagStack.length &&\n\t\t\t(lastTag = this._tagStack[this._tagStack.length - 1]) &&\n\t\t\t(lastTag = lastTag.children[lastTag.children.length - 1]) &&\n\t\t\tlastTag.type === ElementType.Text\n\t\t){\n\t\t\tif(normalize){\n\t\t\t\tlastTag.data = (lastTag.data + data).replace(re_whitespace, " ");\n\t\t\t} else {\n\t\t\t\tlastTag.data += data;\n\t\t\t}\n\t\t} else {\n\t\t\tif(normalize){\n\t\t\t\tdata = data.replace(re_whitespace, " ");\n\t\t\t}\n\n\t\t\tvar element = this._createDomElement({\n\t\t\t\tdata: data,\n\t\t\t\ttype: ElementType.Text\n\t\t\t});\n\n\t\t\tthis._addDomElement(element);\n\t\t}\n\t}\n};\n\nDomHandler.prototype.oncomment = function(data){\n\tvar lastTag = this._tagStack[this._tagStack.length - 1];\n\n\tif(lastTag && lastTag.type === ElementType.Comment){\n\t\tlastTag.data += data;\n\t\treturn;\n\t}\n\n\tvar properties = {\n\t\tdata: data,\n\t\ttype: ElementType.Comment\n\t};\n\n\tvar element = this._createDomElement(properties);\n\n\tthis._addDomElement(element);\n\tthis._tagStack.push(element);\n};\n\nDomHandler.prototype.oncdatastart = function(){\n\tvar properties = {\n\t\tchildren: [{\n\t\t\tdata: "",\n\t\t\ttype: ElementType.Text\n\t\t}],\n\t\ttype: ElementType.CDATA\n\t};\n\n\tvar element = this._createDomElement(properties);\n\n\tthis._addDomElement(element);\n\tthis._tagStack.push(element);\n};\n\nDomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){\n\tthis._tagStack.pop();\n};\n\nDomHandler.prototype.onprocessinginstruction = function(name, data){\n\tvar element = this._createDomElement({\n\t\tname: name,\n\t\tdata: data,\n\t\ttype: ElementType.Directive\n\t});\n\n\tthis._addDomElement(element);\n};\n\nmodule.exports = DomHandler;\n\n\n//# sourceURL=webpack:///./node_modules/domhandler/index.js?')},function(module,exports){eval('//Types of elements found in the DOM\nmodule.exports = {\n\tText: "text", //Text\n\tDirective: "directive", //<? ... ?>\n\tComment: "comment", //\x3c!-- ... --\x3e\n\tScript: "script", //<script> tags\n\tStyle: "style", //<style> tags\n\tTag: "tag", //Any tag\n\tCDATA: "cdata", //<![CDATA[ ... ]]>\n\tDoctype: "doctype",\n\n\tisTag: function(elem){\n\t\treturn elem.type === "tag" || elem.type === "script" || elem.type === "style";\n\t}\n};\n\n\n//# sourceURL=webpack:///./node_modules/domelementtype/index.js?')},function(module,exports,__webpack_require__){eval('// DOM-Level-1-compliant structure\nvar NodePrototype = __webpack_require__(270);\nvar ElementPrototype = module.exports = Object.create(NodePrototype);\n\nvar domLvl1 = {\n\ttagName: "name"\n};\n\nObject.keys(domLvl1).forEach(function(key) {\n\tvar shorthand = domLvl1[key];\n\tObject.defineProperty(ElementPrototype, key, {\n\t\tget: function() {\n\t\t\treturn this[shorthand] || null;\n\t\t},\n\t\tset: function(val) {\n\t\t\tthis[shorthand] = val;\n\t\t\treturn val;\n\t\t}\n\t});\n});\n\n\n//# sourceURL=webpack:///./node_modules/domhandler/lib/element.js?')},function(module,exports,__webpack_require__){"use strict";eval("\nfunction shouldProcessEveryNode(node) {\n  return true;\n}\n\nmodule.exports = {\n  shouldProcessEveryNode: shouldProcessEveryNode,\n};\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/should-process-node-definitions.js?")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11)))\n\n//# sourceURL=webpack:///./node_modules/lodash.camelcase/index.js?")},function(module,exports,__webpack_require__){eval("var _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar _has = /*#__PURE__*/__webpack_require__(110);\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nmodule.exports = toPairs;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/toPairs.js?")},function(module,exports,__webpack_require__){eval("var _curry3 = /*#__PURE__*/__webpack_require__(361);\n\nvar _reduce = /*#__PURE__*/__webpack_require__(108);\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nmodule.exports = reduce;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/reduce.js?")},function(module,exports,__webpack_require__){eval("var _curry1 = /*#__PURE__*/__webpack_require__(80);\n\nvar _curry2 = /*#__PURE__*/__webpack_require__(75);\n\nvar _isPlaceholder = /*#__PURE__*/__webpack_require__(95);\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;\n\n//# sourceURL=webpack:///./node_modules/ramda/src/internal/_curry3.js?")},function(module,exports,__webpack_require__){"use strict";eval("// These are all sourced from https://facebook.github.io/react/docs/tags-and-attributes.html -\n// all attributes regardless of whether they have a different case to their HTML equivalents are\n// listed to reduce the chance of human error and make it easier to just copy-paste the new list if\n// it changes.\n\nvar HTML_ATTRIBUTES = [\n  'accept', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'allowTransparency',\n  'alt', 'async', 'autoComplete', 'autoFocus', 'autoPlay', 'capture', 'cellPadding',\n  'cellSpacing', 'challenge', 'charSet', 'checked', 'cite', 'classID', 'className',\n  'colSpan', 'cols', 'content', 'contentEditable', 'contextMenu', 'controls', 'coords',\n  'crossOrigin', 'data', 'dateTime', 'default', 'defer', 'dir', 'disabled', 'download',\n  'draggable', 'encType', 'form', 'formAction', 'formEncType', 'formMethod', 'formNoValidate',\n  'formTarget', 'frameBorder', 'headers', 'height', 'hidden', 'high', 'href', 'hrefLang',\n  'htmlFor', 'httpEquiv', 'icon', 'id', 'inputMode', 'integrity', 'is', 'keyParams', 'keyType',\n  'kind', 'label', 'lang', 'list', 'loop', 'low', 'manifest', 'marginHeight', 'marginWidth',\n  'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'minLength', 'multiple', 'muted',\n  'name', 'noValidate', 'nonce', 'open', 'optimum', 'pattern', 'placeholder', 'poster',\n  'preload', 'profile', 'radioGroup', 'readOnly', 'rel', 'required', 'reversed', 'role',\n  'rowSpan', 'rows', 'sandbox', 'scope', 'scoped', 'scrolling', 'seamless', 'selected',\n  'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcLang', 'srcSet', 'start',\n  'step', 'style', 'summary', 'tabIndex', 'target', 'title', 'type', 'useMap', 'value', 'width',\n  'wmode', 'wrap',\n];\n\nvar NON_STANDARD_ATTRIBUTES = [\n  'autoCapitalize', 'autoCorrect', 'color', 'itemProp', 'itemScope', 'itemType', 'itemRef',\n  'itemID', 'security', 'unselectable', 'results', 'autoSave',\n];\n\nvar SVG_ATTRIBUTES = [\n  'accentHeight', 'accumulate', 'additive', 'alignmentBaseline', 'allowReorder', 'alphabetic',\n  'amplitude', 'arabicForm', 'ascent', 'attributeName', 'attributeType', 'autoReverse', 'azimuth',\n  'baseFrequency', 'baseProfile', 'baselineShift', 'bbox', 'begin', 'bias', 'by', 'calcMode',\n  'capHeight', 'clip', 'clipPath', 'clipPathUnits', 'clipRule', 'colorInterpolation',\n  'colorInterpolationFilters', 'colorProfile', 'colorRendering', 'contentScriptType',\n  'contentStyleType', 'cursor', 'cx', 'cy', 'd', 'decelerate', 'descent', 'diffuseConstant',\n  'direction', 'display', 'divisor', 'dominantBaseline', 'dur', 'dx', 'dy', 'edgeMode',\n  'elevation', 'enableBackground', 'end', 'exponent', 'externalResourcesRequired', 'fill',\n  'fillOpacity', 'fillRule', 'filter', 'filterRes', 'filterUnits', 'floodColor', 'floodOpacity',\n  'focusable', 'fontFamily', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle',\n  'fontVariant', 'fontWeight', 'format', 'from', 'fx', 'fy', 'g1', 'g2', 'glyphName',\n  'glyphOrientationHorizontal', 'glyphOrientationVertical', 'glyphRef',\n  'gradientTransform', 'gradientUnits', 'hanging', 'horizAdvX', 'horizOriginX', 'ideographic',\n  'imageRendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kernelMatrix',\n  'kernelUnitLength', 'kerning', 'keyPoints', 'keySplines', 'keyTimes', 'lengthAdjust',\n  'letterSpacing', 'lightingColor', 'limitingConeAngle', 'local', 'markerEnd', 'markerHeight',\n  'markerMid', 'markerStart', 'markerUnits', 'markerWidth', 'mask', 'maskContentUnits',\n  'maskUnits', 'mathematical', 'mode', 'numOctaves', 'offset', 'opacity', 'operator', 'order',\n  'orient', 'orientation', 'origin', 'overflow', 'overlinePosition', 'overlineThickness',\n  'paintOrder', 'panose1', 'pathLength', 'patternContentUnits', 'patternTransform',\n  'patternUnits', 'pointerEvents', 'points', 'pointsAtX', 'pointsAtY', 'pointsAtZ',\n  'preserveAlpha', 'preserveAspectRatio', 'primitiveUnits', 'r', 'radius', 'refX', 'refY',\n  'renderingIntent', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures',\n  'restart', 'result', 'rotate', 'rx', 'ry', 'scale', 'seed', 'shapeRendering', 'slope',\n  'spacing', 'specularConstant', 'specularExponent', 'speed', 'spreadMethod', 'startOffset',\n  'stdDeviation', 'stemh', 'stemv', 'stitchTiles', 'stopColor', 'stopOpacity',\n  'strikethroughPosition', 'strikethroughThickness', 'string', 'stroke', 'strokeDasharray',\n  'strokeDashoffset', 'strokeLinecap', 'strokeLinejoin', 'strokeMiterlimit', 'strokeOpacity',\n  'strokeWidth', 'surfaceScale', 'systemLanguage', 'tableValues', 'targetX', 'targetY',\n  'textAnchor', 'textDecoration', 'textLength', 'textRendering', 'to', 'transform', 'u1',\n  'u2', 'underlinePosition', 'underlineThickness', 'unicode', 'unicodeBidi', 'unicodeRange',\n  'unitsPerEm', 'vAlphabetic', 'vHanging', 'vIdeographic', 'vMathematical', 'values',\n  'vectorEffect', 'version', 'vertAdvY', 'vertOriginX', 'vertOriginY', 'viewBox',\n  'viewTarget', 'visibility', 'widths', 'wordSpacing', 'writingMode', 'x', 'x1', 'x2',\n  'xChannelSelector', 'xHeight', 'xlinkActuate', 'xlinkArcrole', 'xlinkHref', 'xlinkRole',\n  'xlinkShow', 'xlinkTitle', 'xlinkType', 'xmlns', 'xmlnsXlink', 'xmlBase', 'xmlLang',\n  'xmlSpace', 'y', 'y1', 'y2', 'yChannelSelector', 'z', 'zoomAndPan',\n];\n\nvar camelCaseMap = HTML_ATTRIBUTES\n  .concat(NON_STANDARD_ATTRIBUTES)\n  .concat(SVG_ATTRIBUTES)\n  .reduce(function (soFar, attr) {\n    var lower = attr.toLowerCase();\n    if (lower !== attr) {\n      soFar[lower] = attr;\n    }\n    return soFar;\n  }, {});\n\nmodule.exports = camelCaseMap;\n\n\n//# sourceURL=webpack:///./node_modules/html-to-react/lib/camel-case-attribute-names.js?")},,,,,function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(368), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/assign.js?')},function(module,exports,__webpack_require__){eval("__webpack_require__(369);\nmodule.exports = __webpack_require__(79).Object.assign;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/assign.js?")},function(module,exports,__webpack_require__){eval("// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(84);\n\n$export($export.S + $export.F, 'Object', { assign: __webpack_require__(371) });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.assign.js?")},function(module,exports){eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_a-function.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = __webpack_require__(97);\nvar gOPS = __webpack_require__(118);\nvar pIE = __webpack_require__(100);\nvar toObject = __webpack_require__(282);\nvar IObject = __webpack_require__(280);\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(92)(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-assign.js?")},function(module,exports,__webpack_require__){eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(87);\nvar toLength = __webpack_require__(373);\nvar toAbsoluteIndex = __webpack_require__(374);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-includes.js?")},function(module,exports,__webpack_require__){eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(114);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-length.js?")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(114);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js?")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(376), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/symbol/iterator.js?')},function(module,exports,__webpack_require__){eval("__webpack_require__(377);\n__webpack_require__(383);\nmodule.exports = __webpack_require__(123).f('iterator');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/symbol/iterator.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $at = __webpack_require__(378)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(284)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js?")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(114);\nvar defined = __webpack_require__(113);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_string-at.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nvar create = __webpack_require__(121);\nvar descriptor = __webpack_require__(96);\nvar setToStringTag = __webpack_require__(122);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(85)(IteratorPrototype, __webpack_require__(88)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-create.js?")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(81);\nvar anObject = __webpack_require__(91);\nvar getKeys = __webpack_require__(97);\n\nmodule.exports = __webpack_require__(82) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-dps.js?")},function(module,exports,__webpack_require__){eval("var document = __webpack_require__(78).document;\nmodule.exports = document && document.documentElement;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_html.js?")},function(module,exports,__webpack_require__){eval("// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(83);\nvar toObject = __webpack_require__(282);\nvar IE_PROTO = __webpack_require__(115)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gpo.js?")},function(module,exports,__webpack_require__){eval("__webpack_require__(384);\nvar global = __webpack_require__(78);\nvar hide = __webpack_require__(85);\nvar Iterators = __webpack_require__(120);\nvar TO_STRING_TAG = __webpack_require__(88)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js?")},function(module,exports,__webpack_require__){"use strict";eval("\nvar addToUnscopables = __webpack_require__(385);\nvar step = __webpack_require__(386);\nvar Iterators = __webpack_require__(120);\nvar toIObject = __webpack_require__(87);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(284)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js?")},function(module,exports){eval("module.exports = function () { /* empty */ };\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js?")},function(module,exports){eval("module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-step.js?")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(388), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/symbol.js?')},function(module,exports,__webpack_require__){eval("__webpack_require__(389);\n__webpack_require__(394);\n__webpack_require__(395);\n__webpack_require__(396);\nmodule.exports = __webpack_require__(79).Symbol;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/symbol/index.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(78);\nvar has = __webpack_require__(83);\nvar DESCRIPTORS = __webpack_require__(82);\nvar $export = __webpack_require__(84);\nvar redefine = __webpack_require__(285);\nvar META = __webpack_require__(390).KEY;\nvar $fails = __webpack_require__(92);\nvar shared = __webpack_require__(116);\nvar setToStringTag = __webpack_require__(122);\nvar uid = __webpack_require__(99);\nvar wks = __webpack_require__(88);\nvar wksExt = __webpack_require__(123);\nvar wksDefine = __webpack_require__(124);\nvar enumKeys = __webpack_require__(391);\nvar isArray = __webpack_require__(392);\nvar anObject = __webpack_require__(91);\nvar isObject = __webpack_require__(86);\nvar toIObject = __webpack_require__(87);\nvar toPrimitive = __webpack_require__(112);\nvar createDesc = __webpack_require__(96);\nvar _create = __webpack_require__(121);\nvar gOPNExt = __webpack_require__(393);\nvar $GOPD = __webpack_require__(287);\nvar $DP = __webpack_require__(81);\nvar $keys = __webpack_require__(97);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(286).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(100).f = $propertyIsEnumerable;\n  __webpack_require__(118).f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(98)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(85)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.symbol.js?")},function(module,exports,__webpack_require__){eval("var META = __webpack_require__(99)('meta');\nvar isObject = __webpack_require__(86);\nvar has = __webpack_require__(83);\nvar setDesc = __webpack_require__(81).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(92)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_meta.js?")},function(module,exports,__webpack_require__){eval("// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(97);\nvar gOPS = __webpack_require__(118);\nvar pIE = __webpack_require__(100);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_enum-keys.js?")},function(module,exports,__webpack_require__){eval("// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(281);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-array.js?")},function(module,exports,__webpack_require__){eval("// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(87);\nvar gOPN = __webpack_require__(286).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js?")},function(module,exports){eval("\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.to-string.js?")},function(module,exports,__webpack_require__){eval("__webpack_require__(124)('asyncIterator');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js?")},function(module,exports,__webpack_require__){eval("__webpack_require__(124)('observable');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js?")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(398), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/set-prototype-of.js?')},function(module,exports,__webpack_require__){eval("__webpack_require__(399);\nmodule.exports = __webpack_require__(79).Object.setPrototypeOf;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/set-prototype-of.js?")},function(module,exports,__webpack_require__){eval("// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(84);\n$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(400).set });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.set-prototype-of.js?")},function(module,exports,__webpack_require__){eval("// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(86);\nvar anObject = __webpack_require__(91);\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__(276)(Function.call, __webpack_require__(287).f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-proto.js?")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(402), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/create.js?')},function(module,exports,__webpack_require__){eval("__webpack_require__(403);\nvar $Object = __webpack_require__(79).Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/create.js?")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(84);\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: __webpack_require__(121) });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.create.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = addEventListener;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _EventObject = __webpack_require__(405);\n\nvar _EventObject2 = _interopRequireDefault(_EventObject);\n\nfunction addEventListener(target, eventType, callback, option) {\n  function wrapCallback(e) {\n    var ne = new _EventObject2['default'](e);\n    callback.call(target, ne);\n  }\n\n  if (target.addEventListener) {\n    var _ret = (function () {\n      var useCapture = false;\n      if (typeof option === 'object') {\n        useCapture = option.capture || false;\n      } else if (typeof option === 'boolean') {\n        useCapture = option;\n      }\n\n      target.addEventListener(eventType, wrapCallback, option || false);\n\n      return {\n        v: {\n          remove: function remove() {\n            target.removeEventListener(eventType, wrapCallback, useCapture);\n          }\n        }\n      };\n    })();\n\n    if (typeof _ret === 'object') return _ret.v;\n  } else if (target.attachEvent) {\n    target.attachEvent('on' + eventType, wrapCallback);\n    return {\n      remove: function remove() {\n        target.detachEvent('on' + eventType, wrapCallback);\n      }\n    };\n  }\n}\n\nmodule.exports = exports['default'];\n\n//# sourceURL=webpack:///./node_modules/add-dom-event-listener/lib/index.js?")},function(module,exports,__webpack_require__){"use strict";eval("/**\n * @ignore\n * event object for dom\n * @author yiminghe@gmail.com\n */\n\n\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _EventBaseObject = __webpack_require__(406);\n\nvar _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);\n\nvar _objectAssign = __webpack_require__(12);\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar TRUE = true;\nvar FALSE = false;\nvar commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];\n\nfunction isNullOrUndefined(w) {\n  return w === null || w === undefined;\n}\n\nvar eventNormalizers = [{\n  reg: /^key/,\n  props: ['char', 'charCode', 'key', 'keyCode', 'which'],\n  fix: function fix(event, nativeEvent) {\n    if (isNullOrUndefined(event.which)) {\n      event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;\n    }\n\n    // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)\n    if (event.metaKey === undefined) {\n      event.metaKey = event.ctrlKey;\n    }\n  }\n}, {\n  reg: /^touch/,\n  props: ['touches', 'changedTouches', 'targetTouches']\n}, {\n  reg: /^hashchange$/,\n  props: ['newURL', 'oldURL']\n}, {\n  reg: /^gesturechange$/i,\n  props: ['rotation', 'scale']\n}, {\n  reg: /^(mousewheel|DOMMouseScroll)$/,\n  props: [],\n  fix: function fix(event, nativeEvent) {\n    var deltaX = undefined;\n    var deltaY = undefined;\n    var delta = undefined;\n    var wheelDelta = nativeEvent.wheelDelta;\n    var axis = nativeEvent.axis;\n    var wheelDeltaY = nativeEvent.wheelDeltaY;\n    var wheelDeltaX = nativeEvent.wheelDeltaX;\n    var detail = nativeEvent.detail;\n\n    // ie/webkit\n    if (wheelDelta) {\n      delta = wheelDelta / 120;\n    }\n\n    // gecko\n    if (detail) {\n      // press control e.detail == 1 else e.detail == 3\n      delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);\n    }\n\n    // Gecko\n    if (axis !== undefined) {\n      if (axis === event.HORIZONTAL_AXIS) {\n        deltaY = 0;\n        deltaX = 0 - delta;\n      } else if (axis === event.VERTICAL_AXIS) {\n        deltaX = 0;\n        deltaY = delta;\n      }\n    }\n\n    // Webkit\n    if (wheelDeltaY !== undefined) {\n      deltaY = wheelDeltaY / 120;\n    }\n    if (wheelDeltaX !== undefined) {\n      deltaX = -1 * wheelDeltaX / 120;\n    }\n\n    // 默认 deltaY (ie)\n    if (!deltaX && !deltaY) {\n      deltaY = delta;\n    }\n\n    if (deltaX !== undefined) {\n      /**\n       * deltaX of mousewheel event\n       * @property deltaX\n       * @member Event.DomEvent.Object\n       */\n      event.deltaX = deltaX;\n    }\n\n    if (deltaY !== undefined) {\n      /**\n       * deltaY of mousewheel event\n       * @property deltaY\n       * @member Event.DomEvent.Object\n       */\n      event.deltaY = deltaY;\n    }\n\n    if (delta !== undefined) {\n      /**\n       * delta of mousewheel event\n       * @property delta\n       * @member Event.DomEvent.Object\n       */\n      event.delta = delta;\n    }\n  }\n}, {\n  reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,\n  props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],\n  fix: function fix(event, nativeEvent) {\n    var eventDoc = undefined;\n    var doc = undefined;\n    var body = undefined;\n    var target = event.target;\n    var button = nativeEvent.button;\n\n    // Calculate pageX/Y if missing and clientX/Y available\n    if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {\n      eventDoc = target.ownerDocument || document;\n      doc = eventDoc.documentElement;\n      body = eventDoc.body;\n      event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // which for click: 1 === left; 2 === middle; 3 === right\n    // do not use button\n    if (!event.which && button !== undefined) {\n      if (button & 1) {\n        event.which = 1;\n      } else if (button & 2) {\n        event.which = 3;\n      } else if (button & 4) {\n        event.which = 2;\n      } else {\n        event.which = 0;\n      }\n    }\n\n    // add relatedTarget, if necessary\n    if (!event.relatedTarget && event.fromElement) {\n      event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;\n    }\n\n    return event;\n  }\n}];\n\nfunction retTrue() {\n  return TRUE;\n}\n\nfunction retFalse() {\n  return FALSE;\n}\n\nfunction DomEventObject(nativeEvent) {\n  var type = nativeEvent.type;\n\n  var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';\n\n  _EventBaseObject2['default'].call(this);\n\n  this.nativeEvent = nativeEvent;\n\n  // in case dom event has been mark as default prevented by lower dom node\n  var isDefaultPrevented = retFalse;\n  if ('defaultPrevented' in nativeEvent) {\n    isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;\n  } else if ('getPreventDefault' in nativeEvent) {\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=691151\n    isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;\n  } else if ('returnValue' in nativeEvent) {\n    isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;\n  }\n\n  this.isDefaultPrevented = isDefaultPrevented;\n\n  var fixFns = [];\n  var fixFn = undefined;\n  var l = undefined;\n  var prop = undefined;\n  var props = commonProps.concat();\n\n  eventNormalizers.forEach(function (normalizer) {\n    if (type.match(normalizer.reg)) {\n      props = props.concat(normalizer.props);\n      if (normalizer.fix) {\n        fixFns.push(normalizer.fix);\n      }\n    }\n  });\n\n  l = props.length;\n\n  // clone properties of the original event object\n  while (l) {\n    prop = props[--l];\n    this[prop] = nativeEvent[prop];\n  }\n\n  // fix target property, if necessary\n  if (!this.target && isNative) {\n    this.target = nativeEvent.srcElement || document; // srcElement might not be defined either\n  }\n\n  // check if target is a text node (safari)\n  if (this.target && this.target.nodeType === 3) {\n    this.target = this.target.parentNode;\n  }\n\n  l = fixFns.length;\n\n  while (l) {\n    fixFn = fixFns[--l];\n    fixFn(this, nativeEvent);\n  }\n\n  this.timeStamp = nativeEvent.timeStamp || Date.now();\n}\n\nvar EventBaseObjectProto = _EventBaseObject2['default'].prototype;\n\n(0, _objectAssign2['default'])(DomEventObject.prototype, EventBaseObjectProto, {\n  constructor: DomEventObject,\n\n  preventDefault: function preventDefault() {\n    var e = this.nativeEvent;\n\n    // if preventDefault exists run it on the original event\n    if (e.preventDefault) {\n      e.preventDefault();\n    } else {\n      // otherwise set the returnValue property of the original event to FALSE (IE)\n      e.returnValue = FALSE;\n    }\n\n    EventBaseObjectProto.preventDefault.call(this);\n  },\n\n  stopPropagation: function stopPropagation() {\n    var e = this.nativeEvent;\n\n    // if stopPropagation exists run it on the original event\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    } else {\n      // otherwise set the cancelBubble property of the original event to TRUE (IE)\n      e.cancelBubble = TRUE;\n    }\n\n    EventBaseObjectProto.stopPropagation.call(this);\n  }\n});\n\nexports['default'] = DomEventObject;\nmodule.exports = exports['default'];\n\n//# sourceURL=webpack:///./node_modules/add-dom-event-listener/lib/EventObject.js?")},function(module,exports,__webpack_require__){"use strict";eval('/**\n * @ignore\n * base event object for custom and dom event.\n * @author yiminghe@gmail.com\n */\n\n\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nfunction returnFalse() {\n  return false;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction EventBaseObject() {\n  this.timeStamp = Date.now();\n  this.target = undefined;\n  this.currentTarget = undefined;\n}\n\nEventBaseObject.prototype = {\n  isEventObject: 1,\n\n  constructor: EventBaseObject,\n\n  isDefaultPrevented: returnFalse,\n\n  isPropagationStopped: returnFalse,\n\n  isImmediatePropagationStopped: returnFalse,\n\n  preventDefault: function preventDefault() {\n    this.isDefaultPrevented = returnTrue;\n  },\n\n  stopPropagation: function stopPropagation() {\n    this.isPropagationStopped = returnTrue;\n  },\n\n  stopImmediatePropagation: function stopImmediatePropagation() {\n    this.isImmediatePropagationStopped = returnTrue;\n    // fixed 1.2\n    // call stopPropagation implicitly\n    this.stopPropagation();\n  },\n\n  halt: function halt(immediate) {\n    if (immediate) {\n      this.stopImmediatePropagation();\n    } else {\n      this.stopPropagation();\n    }\n    this.preventDefault();\n  }\n};\n\nexports["default"] = EventBaseObject;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/add-dom-event-listener/lib/EventBaseObject.js?')},function(module,exports,__webpack_require__){eval("__webpack_require__(408);\nvar $Object = __webpack_require__(79).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/define-property.js?")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(84);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(82), 'Object', { defineProperty: __webpack_require__(81).f });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(288);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/defineProperty.js?")},function(module,exports,__webpack_require__){eval("/**\n * Module dependencies.\n */\n\ntry {\n  var index = __webpack_require__(289);\n} catch (err) {\n  var index = __webpack_require__(289);\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name, force){\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n\n\n//# sourceURL=webpack:///./node_modules/component-classes/index.js?")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.marksy = marksy;\n\nexports.default = function (options) {\n  return marksy(options);\n};\n\nvar _marked = __webpack_require__(292);\n\nvar _marked2 = _interopRequireDefault(_marked);\n\nvar _createRenderer = __webpack_require__(457);\n\nvar _createRenderer2 = _interopRequireDefault(_createRenderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction marksy() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var tracker = {\n    tree: null,\n    elements: null,\n    nextElementId: null,\n    toc: null,\n    currentIdLevel: 0,\n    currentId: []\n  };\n  var renderer = (0, _createRenderer2.default)(tracker, options, {\n    code: function code(_code, language) {\n      if (language === 'marksy') {\n        try {\n          // eslint-disable-next-line no-plusplus\n          var elementId = tracker.nextElementId++;\n\n          var components = Object.keys(options.components).map(function (key) {\n            return options.components[key];\n          });\n          var mockedReact = function mockedReact(tag) {\n            for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n              children[_key - 2] = arguments[_key];\n            }\n\n            var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            var componentProps = components.indexOf(tag) >= 0 ? Object.assign(props || {}, {\n              // eslint-disable-next-line no-plusplus\n              key: tracker.nextElementId++,\n              context: tracker.context\n            }) : props;\n\n            return options.createElement(tag, componentProps, children);\n          };\n\n          tracker.elements[elementId] =\n          // eslint-disable-next-line no-new-func\n          new (Function.prototype.bind.apply(Function, [null].concat(['h'], _toConsumableArray(Object.keys(options.components)), ['return ' + _code])))().apply(undefined, [mockedReact].concat(_toConsumableArray(components))) || null;\n\n          tracker.tree.push(tracker.elements[elementId]);\n\n          return '{{' + elementId + '}}';\n        } catch (e) {\n          //\n        }\n        return null;\n      }\n      return (0, _createRenderer.codeRenderer)(tracker, options)(_code, language);\n    }\n  });\n\n  return function compile(content) {\n    var markedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tracker.tree = [];\n    tracker.elements = {};\n    tracker.toc = [];\n    tracker.nextElementId = 0;\n    tracker.context = context;\n    tracker.currentId = [];\n    (0, _marked2.default)(content, Object.assign({ renderer: renderer, smartypants: true }, markedOptions));\n\n    return { tree: tracker.tree, toc: tracker.toc };\n  };\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/marksy/lib/index.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeRenderer = codeRenderer;\nexports.default = createRenderer;\n\nvar _marked = __webpack_require__(292);\n\nvar _marked2 = _interopRequireDefault(_marked);\n\nvar _he = __webpack_require__(458);\n\nvar _he2 = _interopRequireDefault(_he);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction codeRenderer(tracker, options) {\n  function CodeComponent(props) {\n    var children = void 0;\n    try {\n      // eslint-disable-next-line react/no-danger-with-children\n      children = options.createElement('code', {\n        className: 'language-' + props.language,\n        dangerouslySetInnerHTML: options.highlight ? { __html: options.highlight(props.language, props.code) } : null\n      }, options.highlight ? null : props.code);\n    } catch (e) {\n      // eslint-disable-next-line\n      console.warn(props.language + ' is not supported by your defined highlighter.');\n      children = options.createElement('code', null, props.code);\n    }\n\n    return options.createElement('pre', null, children);\n  }\n\n  return function (code, language) {\n    // eslint-disable-next-line no-plusplus, no-param-reassign\n    var elementId = tracker.nextElementId++;\n\n    // eslint-disable-next-line no-param-reassign\n    tracker.elements[elementId] = options.createElement(options.elements && options.elements.code || CodeComponent, { key: elementId, code: code, language: language });\n\n    tracker.tree.push(tracker.elements[elementId]);\n\n    return '{{' + elementId + '}}';\n  };\n}\n\nfunction createRenderer(tracker, options) {\n  var overrides = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var renderer = new _marked2.default.Renderer();\n\n  function getTocPosition(toc, level) {\n    var currentLevel = toc.children;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (!currentLevel.length || currentLevel[currentLevel.length - 1].level === level) {\n        return currentLevel;\n      }\n      currentLevel = currentLevel[currentLevel.length - 1].children;\n    }\n  }\n\n  function populateInlineContent() {\n    var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    var contentArray = content.split(/(\\{\\{.*?\\}\\})/);\n    var extractedElements = contentArray.map(function (text) {\n      var elementIdMatch = text.match(/\\{\\{(.*)\\}\\}/);\n      if (elementIdMatch) {\n        tracker.tree.splice(tracker.tree.indexOf(tracker.elements[elementIdMatch[1]]), 1);\n        return tracker.elements[elementIdMatch[1]];\n      } else if (text !== '') {\n        return _he2.default.decode(text);\n      }\n\n      return null;\n    });\n\n    return extractedElements;\n  }\n\n  function addElement(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var children = arguments[2];\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : tag;\n\n    // eslint-disable-next-line no-plusplus, no-param-reassign\n    var elementId = tracker.nextElementId++;\n    var inlineContent = null;\n\n    var elementType = options.elements && options.elements[type];\n\n    if (children) {\n      inlineContent = Array.isArray(children) ? children.map(populateInlineContent) : populateInlineContent(children);\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    tracker.elements[elementId] = options.createElement(elementType || tag, Object.assign({\n      key: elementId\n    }, props, elementType ? { context: tracker.context } : {}), inlineContent);\n\n    tracker.tree.push(tracker.elements[elementId]);\n\n    return '{{' + elementId + '}}';\n  }\n\n  renderer.code = overrides.code || codeRenderer(tracker, options);\n\n  renderer.html = overrides.html || function (html) {\n    // eslint-disable-next-line no-plusplus, no-param-reassign\n    var elementId = tracker.nextElementId++;\n\n    tracker.tree.push(options.createElement('div', {\n      key: elementId,\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }));\n  };\n\n  renderer.paragraph = overrides.paragraph || function (text) {\n    return addElement('p', null, text);\n  };\n\n  renderer.blockquote = overrides.blockquote || function (text) {\n    return addElement('blockquote', null, text);\n  };\n\n  renderer.link = overrides.link || function (href, title, text) {\n    return addElement('a', { href: href, title: title }, text);\n  };\n\n  renderer.br = overrides.br || function () {\n    return addElement('br');\n  };\n\n  renderer.hr = overrides.hr || function () {\n    return addElement('hr');\n  };\n\n  renderer.strong = overrides.strong || function (text) {\n    return addElement('strong', null, text);\n  };\n\n  renderer.del = overrides.del || function (text) {\n    return addElement('del', null, text);\n  };\n\n  renderer.em = overrides.em || function (text) {\n    return addElement('em', null, text);\n  };\n\n  renderer.heading = overrides.heading || function (text, level) {\n    // eslint-disable-next-line no-param-reassign\n    tracker.currentId = tracker.currentId.slice(0, level - 1);\n    tracker.currentId.push(text.replace(/\\s/g, '-').toLowerCase());\n\n    var id = tracker.currentId.join('-');\n    var lastToc = tracker.toc[tracker.toc.length - 1];\n\n    if (!lastToc || lastToc.level > level) {\n      tracker.toc.push({\n        id: id,\n        title: text,\n        level: level,\n        children: []\n      });\n    } else {\n      var tocPosition = getTocPosition(lastToc, level);\n\n      tocPosition.push({\n        id: id,\n        title: text,\n        level: level,\n        children: []\n      });\n    }\n\n    return addElement('h' + level, {\n      id: id\n    }, text);\n  };\n\n  renderer.list = overrides.list || function (body, ordered) {\n    return addElement(ordered ? 'ol' : 'ul', null, body);\n  };\n\n  renderer.listitem = overrides.listitem || function (text) {\n    return addElement('li', null, text);\n  };\n\n  renderer.table = overrides.table || function (header, body) {\n    return addElement('table', null, [addElement('thead', null, header), addElement('tbody', null, body)]);\n  };\n\n  renderer.thead = overrides.thead || function (content) {\n    return addElement('thead', null, content);\n  };\n\n  renderer.tbody = overrides.tbody || function (content) {\n    return addElement('tbody', null, content);\n  };\n\n  renderer.tablerow = overrides.tablerow || function (content) {\n    return addElement('tr', null, content);\n  };\n\n  renderer.tablecell = overrides.tablecell || function (content, flag) {\n    var tag = flag.header ? 'th' : 'td';\n    return addElement(tag, { className: flag.align ? 'text-' + flag.align : undefined }, content);\n  };\n\n  renderer.codespan = overrides.codespan || function (text) {\n    return addElement('code', null, text, 'codespan');\n  };\n\n  renderer.image = overrides.image || function (href, title, text) {\n    return addElement('img', { src: href, alt: text });\n  };\n\n  return renderer;\n}\n//# sourceMappingURL=createRenderer.js.map\n\n//# sourceURL=webpack:///./node_modules/marksy/lib/createRenderer.js?")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports =  true && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule =  true && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn he;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse { var key; }\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(138)(module), __webpack_require__(11)))\n\n//# sourceURL=webpack:///./node_modules/he/he.js?")}])]);